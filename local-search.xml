<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>spring私有方法实现事务</title>
    <link href="/2021/07/02/spring-boot/trasaction-helper/"/>
    <url>/2021/07/02/spring-boot/trasaction-helper/</url>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BiTransactionalHelper</span> </span>&#123;<br><br>    <span class="hljs-meta">@Transactional(rollbackFor = Exception.class)</span><br>    <span class="hljs-keyword">public</span> &lt;T, U, R&gt; <span class="hljs-function">R <span class="hljs-title">transactional</span><span class="hljs-params">(T t, U u, BiFunction&lt;T, U, R&gt; function)</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> function.apply(t, u);<br>    &#125;<br><br>    <span class="hljs-meta">@Transactional(rollbackFor = Exception.class)</span><br>    <span class="hljs-keyword">public</span> &lt;T, U&gt; <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">transactional</span><span class="hljs-params">(T t, U u, BiConsumer&lt;T, U&gt; consumer)</span> </span>&#123;<br>        consumer.accept(t, u);<br>    &#125;<br><br>    <span class="hljs-meta">@Transactional(rollbackFor = Exception.class)</span><br>    <span class="hljs-keyword">public</span> &lt;T, R&gt; <span class="hljs-function">R <span class="hljs-title">transactional</span><span class="hljs-params">(Function&lt;T, R&gt; function, T t)</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> function.apply(t);<br>    &#125;<br><br>    <span class="hljs-meta">@Transactional(rollbackFor = Exception.class)</span><br>    <span class="hljs-keyword">public</span> &lt;R&gt; <span class="hljs-function">R <span class="hljs-title">transactional</span><span class="hljs-params">(Supplier&lt;R&gt; supplier)</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> supplier.get();<br>    &#125;<br><br>    <span class="hljs-meta">@Transactional(rollbackFor = Exception.class)</span><br>    <span class="hljs-keyword">public</span> &lt;T&gt; <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">transactional</span><span class="hljs-params">(Consumer&lt;T&gt; consumer, T t)</span> </span>&#123;<br>        consumer.accept(t);<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Spring</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>api接口规范</title>
    <link href="/2021/06/28/architect/api/"/>
    <url>/2021/06/28/architect/api/</url>
    
    <content type="html"><![CDATA[<h2 id="API接口规范相关"><a href="#API接口规范相关" class="headerlink" title="API接口规范相关"></a>API接口规范相关</h2><p>滚动分页，避免有重复条目，设置lastID</p>]]></content>
    
    
    <categories>
      
      <category>API</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Unsorted</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NIO</title>
    <link href="/2021/06/28/architect/nio/"/>
    <url>/2021/06/28/architect/nio/</url>
    
    <content type="html"><![CDATA[<h2 id="IO多路复用是一种同步IO模型，"><a href="#IO多路复用是一种同步IO模型，" class="headerlink" title="IO多路复用是一种同步IO模型，"></a>IO多路复用是一种同步IO模型，</h2><p>实现一个线程可以监视多个文件句柄；一旦某个文件句柄就绪，就能够通知应用程序进行相应的读写操作；没有文件句柄就绪时会阻塞应用程序，交出cpu。多路是指网络连接，复用指的是同一个线程</p><p>客户端每发一次请求，服务端并不是每次都创建一个新线程来处理，而是通过 I/O 多路复用技术进行处理。就是把多个 I/O 的阻塞复用到听一个 select 的阻塞上，从而使系统在单线程的情况下可以同时处理多个客户端请求。这种方式的优势是开销小，不用为每个请求创建一个线程，可以节省系统开销。</p><h3 id="selcect用法"><a href="#selcect用法" class="headerlink" title="selcect用法"></a>selcect用法</h3><figure class="highlight reasonml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs reasonml"><span class="hljs-built_in">int</span> main<span class="hljs-literal">()</span> &#123;<br>  <span class="hljs-comment">/*</span><br><span class="hljs-comment">   * 这里进行一些初始化的设置，</span><br><span class="hljs-comment">   * 包括socket建立，地址的设置等,</span><br><span class="hljs-comment">   */</span><br><br>  fd_set read_fs, write_fs;<br>  <span class="hljs-keyword">struct</span> timeval timeout;<br>  <span class="hljs-built_in">int</span> max = <span class="hljs-number">0</span>;  <span class="hljs-comment">// 用于记录最大的fd，在轮询中时刻更新即可</span><br><br>  <span class="hljs-comment">// 初始化比特位</span><br>  <span class="hljs-constructor">FD_ZERO(&amp;<span class="hljs-params">read_fs</span>)</span>;<br>  <span class="hljs-constructor">FD_ZERO(&amp;<span class="hljs-params">write_fs</span>)</span>;<br><br>  <span class="hljs-built_in">int</span> nfds = <span class="hljs-number">0</span>; <span class="hljs-comment">// 记录就绪的事件，可以减少遍历的次数</span><br>  <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>) &#123;<br>    <span class="hljs-comment">// 阻塞获取</span><br>    <span class="hljs-comment">// 每次需要把fd从用户态拷贝到内核态</span><br>    nfds = select(max + <span class="hljs-number">1</span>, &amp;read_fd, &amp;write_fd, NULL, &amp;timeout);<br>    <span class="hljs-comment">// 每次需要遍历所有fd，判断有无读写事件发生</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt;= max<span class="hljs-operator"> &amp;&amp; </span>nfds; ++i) &#123;<br>      <span class="hljs-keyword">if</span> (i<span class="hljs-operator"> == </span>listenfd) &#123;<br>         --nfds;<br>         <span class="hljs-comment">// 这里处理accept事件</span><br>         <span class="hljs-constructor">FD_SET(<span class="hljs-params">i</span>, &amp;<span class="hljs-params">read_fd</span>)</span>;<span class="hljs-comment">//将客户端socket加入到集合中</span><br>      &#125;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-constructor">FD_ISSET(<span class="hljs-params">i</span>, &amp;<span class="hljs-params">read_fd</span>)</span>) &#123;<br>        --nfds;<br>        <span class="hljs-comment">// 这里处理read事件</span><br>      &#125;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-constructor">FD_ISSET(<span class="hljs-params">i</span>, &amp;<span class="hljs-params">write_fd</span>)</span>) &#123;<br>         --nfds;<br>        <span class="hljs-comment">// 这里处理write事件</span><br>      &#125;<br>    &#125;<br>  &#125;<br><br></code></pre></div></td></tr></table></figure><h3 id="poll-举例"><a href="#poll-举例" class="headerlink" title="poll 举例"></a>poll 举例</h3><figure class="highlight arduino"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs arduino"><span class="hljs-comment">// 先宏定义长度</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MAX_POLLFD_LEN 4096  </span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>  <span class="hljs-comment">/*</span><br><span class="hljs-comment">   * 在这里进行一些初始化的操作，</span><br><span class="hljs-comment">   * 比如初始化数据和socket等。</span><br><span class="hljs-comment">   */</span><br><br>  <span class="hljs-keyword">int</span> nfds = <span class="hljs-number">0</span>;<br>  pollfd fds[MAX_POLLFD_LEN];<br>  <span class="hljs-built_in">memset</span>(fds, <span class="hljs-number">0</span>, <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(fds));<br>  fds[<span class="hljs-number">0</span>].fd = listenfd;<br>  fds[<span class="hljs-number">0</span>].events = POLLRDNORM;<br>  <span class="hljs-keyword">int</span> max  = <span class="hljs-number">0</span>;  <span class="hljs-comment">// 队列的实际长度，是一个随时更新的，也可以自定义其他的</span><br>  <span class="hljs-keyword">int</span> timeout = <span class="hljs-number">0</span>;<br><br>  <span class="hljs-keyword">int</span> current_size = max;<br>  <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>) &#123;<br>    <span class="hljs-comment">// 阻塞获取</span><br>    <span class="hljs-comment">// 每次需要把fd从用户态拷贝到内核态</span><br>    nfds = <span class="hljs-built_in">poll</span>(fds, max+<span class="hljs-number">1</span>, timeout);<br>    <span class="hljs-keyword">if</span> (fds[<span class="hljs-number">0</span>].revents &amp; POLLRDNORM) &#123;<br>        <span class="hljs-comment">// 这里处理accept事件</span><br>        connfd = <span class="hljs-built_in">accept</span>(listenfd);<br>        <span class="hljs-comment">//将新的描述符添加到读描述符集合中</span><br>    &#125;<br>    <span class="hljs-comment">// 每次需要遍历所有fd，判断有无读写事件发生</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; max; ++i) &#123;     <br>      <span class="hljs-keyword">if</span> (fds[i].revents &amp; POLLRDNORM) &#123; <br>         sockfd = fds[i].fd<br>         <span class="hljs-keyword">if</span> ((n = <span class="hljs-built_in">read</span>(sockfd, buf, MAXLINE)) &lt;= <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-comment">// 这里处理read事件</span><br>            <span class="hljs-keyword">if</span> (n == <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-built_in">close</span>(sockfd);<br>                fds[i].fd = <span class="hljs-number">-1</span>;<br>            &#125;<br>         &#125; <span class="hljs-keyword">else</span> &#123;<br>             <span class="hljs-comment">// 这里处理write事件     </span><br>         &#125;<br>         <span class="hljs-keyword">if</span> (--nfds &lt;= <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">break</span>;       <br>         &#125;   <br>      &#125;<br>    &#125;<br>  &#125;<br><br></code></pre></div></td></tr></table></figure><h3 id="epoll-举例"><a href="#epoll-举例" class="headerlink" title="epoll 举例"></a>epoll 举例</h3><figure class="highlight reasonml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs reasonml"><br><span class="hljs-built_in">int</span> main(<span class="hljs-built_in">int</span> argc, <span class="hljs-built_in">char</span>* argv<span class="hljs-literal">[]</span>)<br>&#123;<br>   <span class="hljs-comment">/*</span><br><span class="hljs-comment">   * 在这里进行一些初始化的操作，</span><br><span class="hljs-comment">   * 比如初始化数据和socket等。</span><br><span class="hljs-comment">   */</span><br><br>    <span class="hljs-comment">// 内核中创建ep对象</span><br>    epfd=epoll<span class="hljs-constructor">_create(256)</span>;<br>    <span class="hljs-comment">// 需要监听的socket放到ep中</span><br>    epoll<span class="hljs-constructor">_ctl(<span class="hljs-params">epfd</span>,EPOLL_CTL_ADD,<span class="hljs-params">listenfd</span>,&amp;<span class="hljs-params">ev</span>)</span>;<br> <br>    <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>) &#123;<br>      <span class="hljs-comment">// 阻塞获取</span><br>      nfds = epoll<span class="hljs-constructor">_wait(<span class="hljs-params">epfd</span>,<span class="hljs-params">events</span>,20,0)</span>;<br>      <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;nfds;++i) &#123;<br>          <span class="hljs-keyword">if</span>(events<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span>.data.fd==listenfd) &#123;<br>              <span class="hljs-comment">// 这里处理accept事件</span><br>              connfd = accept(listenfd);<br>              <span class="hljs-comment">// 接收新连接写到内核对象中</span><br>              epoll<span class="hljs-constructor">_ctl(<span class="hljs-params">epfd</span>,EPOLL_CTL_ADD,<span class="hljs-params">connfd</span>,&amp;<span class="hljs-params">ev</span>)</span>;<br>          &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (events<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span>.events&amp;EPOLLIN) &#123;<br>              <span class="hljs-comment">// 这里处理read事件</span><br>              read(sockfd, BUF, MAXLINE);<br>              <span class="hljs-comment">//读完后准备写</span><br>              epoll<span class="hljs-constructor">_ctl(<span class="hljs-params">epfd</span>,EPOLL_CTL_MOD,<span class="hljs-params">sockfd</span>,&amp;<span class="hljs-params">ev</span>)</span>;<br>          &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(events<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span>.events&amp;EPOLLOUT) &#123;<br>              <span class="hljs-comment">// 这里处理write事件</span><br>              write(sockfd, BUF, n);<br>              <span class="hljs-comment">//写完后准备读</span><br>              epoll<span class="hljs-constructor">_ctl(<span class="hljs-params">epfd</span>,EPOLL_CTL_MOD,<span class="hljs-params">sockfd</span>,&amp;<span class="hljs-params">ev</span>)</span>;<br>          &#125;<br>      &#125;<br>    &#125;<br>    return <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></div></td></tr></table></figure><h3 id="epoll-水平触发（LT）与-边缘触发（ET）的区别？"><a href="#epoll-水平触发（LT）与-边缘触发（ET）的区别？" class="headerlink" title="epoll 水平触发（LT）与 边缘触发（ET）的区别？"></a>epoll 水平触发（LT）与 边缘触发（ET）的区别？</h3><ul><li>epoll有EPOLLLT和EPOLLET两种触发模式，LT是默认的模式，ET是“高速”模式。</li><li>LT模式下，只要这个fd还有数据可读，每次 epoll_wait都会返回它的事件，提醒用户程序去操作</li><li>ET模式下，它只会提示一次，直到下次再有数据流入之前都不会再提示了，无论fd中是否还有数据可读。所以在ET模式下，read一个fd的时候一定要把它的buffer读完，或者遇到EAGAIN错误</li></ul><h2 id="select-poll-epoll"><a href="#select-poll-epoll" class="headerlink" title="select poll epoll"></a>select poll epoll</h2><table><thead><tr><th></th><th>select</th><th>poll</th><th>epoll</th></tr></thead><tbody><tr><td>数据结构</td><td>bitmap</td><td>array</td><td>red-black tree</td></tr><tr><td>最大连接数</td><td>1024</td><td>无上限</td><td>无上限</td></tr><tr><td>fd拷贝</td><td>每次调用select，需要把fd集合从用户态拷贝到内核态</td><td>每次调用select，需要把fd集合从用户态拷贝到内核态</td><td>fd首次调用epoll_ctl拷贝进内核并保存，每次调用epoll_wait不拷贝</td></tr><tr><td>效率</td><td>轮询：O(n)</td><td>轮询：O(n)</td><td>回调：O(1)</td></tr></tbody></table><h3 id="select-poll-epoll-总结"><a href="#select-poll-epoll-总结" class="headerlink" title="select poll epoll 总结"></a>select poll epoll 总结</h3><p>select缺点</p><ul><li>单个进程所打开的FD是有限制的，通过FD_SETSIZE设置，默认1024</li><li>每次调用select，都需要把fd集合从用户态拷贝到内核态，这个开销在fd很多时会很大</li><li>对socket扫描时是线性扫描，采用轮询的方法，效率较低（高并发时）</li></ul><h3 id="poll缺点"><a href="#poll缺点" class="headerlink" title="poll缺点"></a>poll缺点</h3><p>每次调用poll，都需要把fd集合从用户态拷贝到内核态，这个开销在fd很多时会很大<br>对socket扫描时是线性扫描，采用轮询的方法，效率较低（高并发时）</p>]]></content>
    
    
    <categories>
      
      <category>IO</category>
      
    </categories>
    
    
    <tags>
      
      <tag>NIO</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DevOps</title>
    <link href="/2021/06/28/DevOps/DevOps/"/>
    <url>/2021/06/28/DevOps/DevOps/</url>
    
    <content type="html"><![CDATA[<h2 id="运维工程师的分类"><a href="#运维工程师的分类" class="headerlink" title="运维工程师的分类"></a>运维工程师的分类</h2><p>运维监控工程师<br>适合刚入门的运维<br>    zabbix<br>    应用运维工程师<br>电商<br>移动<br>金融<br>    网络运维工程师<br>    运维架构师<br>    SRE<br>网站可靠性工程师<br>    运维开发工程师<br>开发运维工具<br>    运维项目管理 PM<br>运维的规范化与流程化<br>    系统规范<br>    目录规范<br>    脚本规范<br>    架构规范<br>    软件版本规范<br>    上线规范<br>    监控规范<br>    日志规范<br>    发布规范</p>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Unsorted</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vim</title>
    <link href="/2021/06/28/linux/vim/"/>
    <url>/2021/06/28/linux/vim/</url>
    
    <content type="html"><![CDATA[<h2 id="custom-config"><a href="#custom-config" class="headerlink" title="custom config"></a>custom config</h2><h3 id="vimrc"><a href="#vimrc" class="headerlink" title="vimrc"></a>vimrc</h3><p>set paste 剪切板不添加注释</p><figure class="highlight ada"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ada">VI编辑器<br><br>vi:Visual <span class="hljs-keyword">Interface</span><br>vim:vi 编辑器的增强版<br><br>vi是一个全屏编辑器，模式化编辑器<br><br>vim模式：<br>编辑模式（也即通常所说的：命令模式）<br>输入模式<br>末行模式<br><br>模式转换：<br>编辑<span class="hljs-comment">--&gt;输入：</span><br>   i : 当前光标所在字符的前面，转为输入模式<br>   a : 当前光标所在字符的后面，转为输入模式<br>   o : 当前光标所在行的下方，新建一行，转为输入模式<br>   <br>   I : 当前光标所在行的行首，转为输入模式<br>   A : 当前光标所在行的行尾，转为输入模式<br>   O : 当前光标所在行的上方，新建一行，转为输入模式<br><br>输入<span class="hljs-comment">--&gt;编辑</span><br>   ESC<br>   <br>编辑<span class="hljs-comment">--&gt;末行</span><br>   :<br><br>末行--&gt;编辑<br>   ESC,ESC<br><br><br><br>一、打开文件<br>vim /PATH/TO/SOMEFILE<br>   vim +n file: 表示打开文件之后，直接处于第n行<br>   vim + file: 表示打开一个文件之后，光标直接处在文件底部<br>   vim +/PATTERN : 表示打开问价之后，定位至第一次被<span class="hljs-type">PATTERN</span>匹配到的行的行首<br>   <br>二、关闭文件<br><span class="hljs-number">1</span>、末行模式关闭文件<br>:q  退出<br>:wq 保存并退出<br>:q! 不保存并退出<br>:w  保存<br>:w! 强行保存<br>:wq &lt;==&gt; :x<br><br><span class="hljs-number">2</span>、编辑模式下<br>ZZ:保存并退出<br><br>三、移动光标(编辑模式)<br><span class="hljs-number">1</span>、逐字符移动<br>   h:左<br>   l:右<br>   j:下<br>   k:上<br><br>   注意：前面跟数字，表示向对应的方向移动的字符个数，比如：<span class="hljs-number">5</span>h 表示向左移动<span class="hljs-number">5</span>个字符   <br><br><span class="hljs-number">2</span>、以单词为单位移动<br>   w : 移动至下一个单词的词首<br>   e : 跳至当前或者下一单词的词尾<br>   b : 跳至当前或者下一单词的词首<br>   <br>   注意：前面跟数字，表示向对应的方向移动的单位的个数<br>   <br><span class="hljs-number">3</span>、行内跳转<br>   <span class="hljs-number">0</span> : 绝对行首<br>   ^ : 行首的第一个非空白字符<br>   $ : 绝对行尾<br>   <br><span class="hljs-number">4</span>、行间跳转<br>   #G : 跳转至第#行<br>   G  : 跳转到末行<br>   <br>   末行模式下，直接给出行号即可<br><br><span class="hljs-number">4</span>、翻屏<br>   CTRL+f : 向下翻一屏<br>   CTRL+b : 向上翻一屏<br><br>   CTRL+d : 向下翻半屏<br>   CTRL+u : 向上翻半屏<br><br><span class="hljs-number">5</span>、删除单个字符<br>   x  : 删除光标所在处的单个字符<br>   #x : 删除光标所在处以及向后的共#个字符<br><br>六、删除命令 d<br>   d命令跟跳转命令组合使用<br>   #dw、#de、#db 删除对应#个单词的组合命令<br><br>   dd: 删除当前光标所在行<br>   #dd:删除包括当前光标坐在行在内的#行<br><br>   在末行模式下，使用<br>   startLine,endLine d : 表示删除第几行到第几行的字符，例如：10,20<span class="hljs-type">d</span><br>      .  : 表示当前行<br>      $  : 表示最后一行  <br>      +# : 向下的#行<br><br>七、粘贴命令 p<br>   p : 如果删除的或者复制的为整行内容，则粘贴至光标所在行下方；如果删除的或者复制的为非整行，则粘贴至光标所在字符后面<br>   P : 如果删除的或者复制的为整行内容，则粘贴至光标所在行上方；如果删除的或者复制的为非整行，则粘贴至光标所在字符前面<br>    <br>八、复制命令 y<br>   用法和 d 命令一样<br><br>九、修改：先删除内容，再转换成输入模式<br>   c : 用法同 <span class="hljs-type">d</span> 命令<br><br>十、替换：r<br>   r : 替换单个字符，首先输入<span class="hljs-type">r</span>，然后输入需要替换的字符<br>   R : 进入替换模式，在替换模式下，直接输入字符进行替换<br><br>十一、撤销编辑 u<br>   u : 撤销前一次的编辑操作<br>       连续u命令可以撤销此前的n次操作<br>   #u: 直接撤销最近#次编辑命令<br>   <br>   还原最近一次的撤销操作：CTRL+r<br><br>十二、重复此前的编辑操作 .<br>   . <br>   <br>十三、可视化模式<br>   v : 按照字符选取<br>   V : 按照行选取<br>   <br>十四、查找<br>   /PATTERN : 从上往下开始查找 <br>   ?PATTERN : 从下往上开始查找<br>   n : 下一个(往下)<br>   N : 下一个(往上)<br>   <br>十五、查找并替换<br>   在末行模式下使用s命令             <br>   用法：ADDR1,ADDR2,s@PATTERN@string@gi<br>         |     |    |    |     |     |<span class="hljs-comment">---------------------------------------------------&gt; 全局替换还是或略大小写</span><br>         |     |    |    |     |<span class="hljs-comment">--------------------------------------&gt;需要替换的字符串</span><br>         |     |    |    |<span class="hljs-comment">---------------------------&gt; 正则或者字符串</span><br>         |     |    |<span class="hljs-comment">-------------------------&gt; 替换命令</span><br>         |     |<span class="hljs-comment">-------------------------&gt; 结束行</span><br>         |<span class="hljs-comment">-------&gt; 起始行</span><br><br>   <span class="hljs-number">1</span>,$ : 表示全文<br>   %   : 也表示全文<br>   <br>   :%s/cn.ubuntu/mirrors.aliyun/g<br>   <br>十六、使用vim编辑多个文件<br>   vim FILE1 FILE2 FILE3 ...<br>   :next  =&gt; 切换到下一个文件<br>   :prev  =&gt; 切换到上一个文件<br>   :last  =&gt; 切换到最后一个文件<br>   :first =&gt; 切换到第一个文件<br>   :qa 全部退出<br>   <br>十七、分屏显示一个文件<br>   CTRL+w, s : 水平拆分窗口, 先按住<span class="hljs-type">CTRL</span>与w键，松开后按s键<br>   CTRL+w, v : 垂直拆分窗口, 先按住<span class="hljs-type">CTRL</span>与v键，松开后按v键<br>   CTRL+w, ARROW : 在窗口键切换光标，首先按住<span class="hljs-type">CTRL</span>与w键，松开后按方向键<br><br>十八、分窗口显示多个文件<br>   vim -o FILE1 FILE2 ... : 水平分割显示<br>   vim -O FILE1 FILE2 ... : 垂直分割显示<br>   <br>   光标切换同上（十七）<br><br>十九、将当前文件的部分内容另存为另外一个文件<br>   末行模式下使用w命令<br>   :w 保存当前文件<br>   :ADDR1,ADDR2w /PATH/TO/SOMEFILE<br>      |     |          |<br>     起始行 结束行    要保存到哪个文件<br><br>二十、将另外一个文件的内容填充到当前文件中<br>   :r /path/to/somfile<br><br>二十一、跟shell交互<br>   :! COMMAND<br>         |<span class="hljs-comment">--------&gt; shell命令</span><br>         <br>二十二、高级话题<br><span class="hljs-number">1</span>、显示或取消行号<br>   :set number 或者 :set nu  显示行号<br>   :set nonumber 或者:set nonu 取消显示行号<br><br><span class="hljs-number">2</span>、显示忽略或区分大小写<br>   :set ignorecase 或者 :set ic 不区分大小写<br>   :set noignorecase 或者 :set noic 区分大小写<br>   <br><span class="hljs-number">3</span>、设定自动缩进<br>   :set autoindent 或者 :set ai 自动缩进<br>   :set noautoindent 或者 :set noai 取消自动缩进<br><br><span class="hljs-number">4</span>、查到的文本高亮显示或者取消高亮显示<br>   :set hlsearch 设置高亮<br>   :set nohlsearch 取消高亮显示<br>   <br><span class="hljs-number">5</span>、语法着色<br>   :syntax on  开启语法着色<br>   :syntax off 关闭语法着色<br><br>二十三、VIM的配置文件<br>   /etc/vimrc : 全局的配置<br>   ~/.vimrc : 自己的<span class="hljs-type">vim</span>配置  这个文件可能不存在，但是可以自己去建立<br>   <br><br> 二十四：vimtutor<br>   这是一个VIM的教程<br><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tools</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>rpc</title>
    <link href="/2021/06/28/architect/rpc/"/>
    <url>/2021/06/28/architect/rpc/</url>
    
    <content type="html"><![CDATA[<p>rpc框架<br>3.1什么是拆包粘包？为什么会出现？<br>在进行Java NIO学习时，可能会发现：如果客户端连续不断的向服务端发送数据包时，服务端接收的数据会出现两个数据包粘在一起的情况。</p><p>TCP的首部格式：</p><p><img src="/img/network/tcp-head.png"></p><p>TCP是基于字节流的，虽然应用层和TCP传输层之间的数据交互是大小不等的数据块，但是TCP把这些数据块仅仅看成一连串无结构的字节流，没有边界；<br>从TCP的帧结构也可以看出，在TCP的首部没有表示数据长度的字段<br>分包机制一般有两个通用的解决方法：</p><ol><li>特殊字符控制</li><li>在包头首都添加数据包的长度<br>如果使用netty的话，就有专门的编码器和解码器解决拆包和粘包问题了,<br>tips:UDP没有粘包问题，但是有丢包和乱序。不完整的包是不会有的，收到的都是完全正确的包。传送的数据单位协议是UDP报文或用户数据报，发送的时候既不合并，也不拆分。</li></ol>]]></content>
    
    
    <categories>
      
      <category>Distribute</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Rpc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>note</title>
    <link href="/2021/06/28/basic/%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/"/>
    <url>/2021/06/28/basic/%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/</url>
    
    <content type="html"><![CDATA[<h4 id="系统设计规范"><a href="#系统设计规范" class="headerlink" title="系统设计规范"></a>系统设计规范</h4><ul><li>接口设计应该保持简洁，在命名上要用词准确，容易理解，在功能上要职责相对单一，避免复杂、全能型接口，接口都应该带上可生成文档的注释。</li><li>http尽量使用POST方式。不使用restful风格设计接口。</li><li>API接口必须考虑性能，应尽快返回结果，实现时尽量减少可能阻塞的外部调用，比如数据库访问、网络服务访问，可以异步处理的逻辑尽量通过队列异步处理。业务系统复杂接口耗时控制在1s以内，简单接口耗时控制在200ms以内。</li><li>数据库是很重要的资源，很容易因为并发过大性能严重下降，只有必要的时候才使用数据库，一定要针对查询场景建立合理索引。尽量做到单表单sql，查询条件一定要尽量缩小数据扫描量，查询字段尽量只取需要的字段，尽量不要使用数据库函数。</li><li>重要数据和不重要数据应分离，不要让不重要的数据访问影响重要数据的访问性能，比如日志数据应写到专门的日志数据库 ，不要写入业务数据库。</li><li>数据导出需要注意限制数据量（如日期、条数方面限制）、注意导出方案性能。同步导出数据量控制在5000条以内，更多数据量通过异步处理。海量数据通过单独程序实现。批量数据导入采用异步方式。</li><li>索引添加需要评估使用场景，并进行review，业务系统单表的索引总数不要超过5个（特殊情况需进行团队讨论）,上线前须进行审核。复杂的查询场景考虑用搜索引擎（ES）解决。</li><li>配置的入口URL应该带上版本号或时间戳，防止前端缓存。</li><li>接口修改时需要考虑是否兼容旧的版本，并且需要考虑尽可能用户无感知上线。如果不兼容，应定义新的api接口。</li><li>核心业务逻辑必须保证并发安全及事务可靠，保证幂等性。</li><li>禁止在数据库事务中进行网络请求。尽量在事务、锁等敏感代码段内不执行耗时操作。</li><li>避免在循环体中做数据库访问等耗时操作。</li><li>需要清楚了解功能（接口）的容量，峰值并发量，资源和时间消耗。</li><li>需要考虑业务逻辑的容错机制，业务逻辑中可能的失败点是什么，失败时如何保证数据/业务的一致性，如何快速恢复。</li><li>清楚理解外部依赖的sdk库的使用注意事项，是否有性能问题，是否有资源管理问题。</li><li>清楚理解外部依赖的接口和网络服务的可靠性和可用性，是否有访问限制，是否有超时控制，外部服务异常对本系统有什么影响，如何规避或服务降级。</li><li>检查所有的输入数据，类型、长度，合理值域。</li><li>主从架构数据库需要注意主从同步延迟造成的数据不一致问题。需要强一致性的场景读主库，不需要强一致性的场景可以读从库。</li><li>SaaS业务系统需要考虑租户隔离。</li><li>对于计算密集场景设计合理的数据结构和算法，降低时间复杂度。</li></ul>]]></content>
    
    
    <categories>
      
      <category>Basic</category>
      
    </categories>
    
    
    <tags>
      
      <tag>设计规范</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>yaml</title>
    <link href="/2021/06/25/basic/yaml/"/>
    <url>/2021/06/25/basic/yaml/</url>
    
    <content type="html"><![CDATA[<h2 id="yaml-vs-yml"><a href="#yaml-vs-yml" class="headerlink" title="yaml vs yml"></a>yaml vs yml</h2><p>通常情况下两种都可以，优先使用yaml,<br>三个字符yml是因为某些版本的Windows对文件扩展名有三个字符限制。</p><figure class="highlight pgsql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs pgsql">File extensions <span class="hljs-keyword">do</span> <span class="hljs-keyword">not</span> have <span class="hljs-keyword">any</span> bearing <span class="hljs-keyword">or</span> impact <span class="hljs-keyword">on</span> the content <span class="hljs-keyword">of</span> the file. You can hold YAML content <span class="hljs-keyword">in</span> files <span class="hljs-keyword">with</span> <span class="hljs-keyword">any</span> <span class="hljs-keyword">extension</span>: .yml, .yaml <span class="hljs-keyword">or</span> indeed anything <span class="hljs-keyword">else</span>.<br>The (rather sparse) YAML FAQ recommends that you use .yaml <span class="hljs-keyword">in</span> preference <span class="hljs-keyword">to</span> .yml, but <span class="hljs-keyword">for</span> historic reasons many Windows programmers are still scared <span class="hljs-keyword">of</span> <span class="hljs-keyword">using</span> extensions <span class="hljs-keyword">with</span> more than three characters <span class="hljs-keyword">and</span> so opt <span class="hljs-keyword">to</span> use .yml <span class="hljs-keyword">instead</span>.<br>So, what really matters <span class="hljs-keyword">is</span> what <span class="hljs-keyword">is</span> inside the file, rather than what its <span class="hljs-keyword">extension</span> <span class="hljs-keyword">is</span>.<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Basic</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Language</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git repo操作</title>
    <link href="/2021/06/25/DevOps/git/git-repo/"/>
    <url>/2021/06/25/DevOps/git/git-repo/</url>
    
    <content type="html"><![CDATA[<h2 id="git-关联多个远程仓库"><a href="#git-关联多个远程仓库" class="headerlink" title="git 关联多个远程仓库"></a>git 关联多个远程仓库</h2><blockquote><p>方法1<br>git remote set-url –add origin git@gitlab:OTT/GxLive_APK.git</p></blockquote><blockquote><p>方法二<br>git remote add github <a href="mailto:&#103;&#x69;&#116;&#64;&#x67;&#105;&#116;&#104;&#x75;&#98;&#46;&#x63;&#111;&#109;">&#103;&#x69;&#116;&#64;&#x67;&#105;&#116;&#104;&#x75;&#98;&#46;&#x63;&#111;&#109;</a>:robin-code/gitlab-ci-maven-demo.git<br>git remote add gitee <a href="https://gitee.com/lijingyang/gitlab-ci-maven-demo.git">https://gitee.com/lijingyang/gitlab-ci-maven-demo.git</a><br>git remote add origin ssh://<a href="mailto:&#x67;&#x69;&#116;&#x40;&#49;&#x39;&#x32;&#x2e;&#x31;&#54;&#x38;&#46;&#x33;&#49;&#46;&#x36;&#49;">&#x67;&#x69;&#116;&#x40;&#49;&#x39;&#x32;&#x2e;&#x31;&#54;&#x38;&#46;&#x33;&#49;&#46;&#x36;&#49;</a>:9922/root/gitlab-maven-ci.git</p></blockquote><p>git push origin master<br>git push github master</p>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tools</tag>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>缓存</title>
    <link href="/2021/04/19/database/%E7%BC%93%E5%AD%98/"/>
    <url>/2021/04/19/database/%E7%BC%93%E5%AD%98/</url>
    
    <content type="html"><![CDATA[<ul><li> 缓存穿透<br>缓存击穿</li></ul>]]></content>
    
    
    <categories>
      
      <category>Distribute</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redis</tag>
      
      <tag>Cache</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>note</title>
    <link href="/2021/04/16/basic/note/"/>
    <url>/2021/04/16/basic/note/</url>
    
    <content type="html"><![CDATA[<p>jdk<br>Jvm</p><p>区别度大的数据作为索引咧</p><p>Redis<br>Mq<br>Sf<br>Ssm<br>Project</p><p>Resume</p>]]></content>
    
    
    <categories>
      
      <category>Basic</category>
      
    </categories>
    
    
    <tags>
      
      <tag>基础知识</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>jpa</title>
    <link href="/2021/04/15/java/jpa/"/>
    <url>/2021/04/15/java/jpa/</url>
    
    <content type="html"><![CDATA[<h2 id="jpa默认的FetchType是LAZY还是EAGER"><a href="#jpa默认的FetchType是LAZY还是EAGER" class="headerlink" title="jpa默认的FetchType是LAZY还是EAGER?"></a>jpa默认的FetchType是LAZY还是EAGER?</h2><p>答：不是lazy也不是eager，要区分来看。<br> one2one默认是eager<br> many2one默认eager<br> one2many默认是lazy</p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JPA</tag>
      
      <tag>Spring</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>spring-cloud-gateway</title>
    <link href="/2021/03/25/spring-cloud/spring-cloud-gateway/"/>
    <url>/2021/03/25/spring-cloud/spring-cloud-gateway/</url>
    
    <content type="html"><![CDATA[<figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">cloud:</span><br>    <span class="hljs-attr">gateway:</span><br>      <span class="hljs-attr">routes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">id:</span> <span class="hljs-string">prefixpath_route</span><br>        <span class="hljs-attr">uri:</span> <span class="hljs-string">http://example.org</span><br>        <span class="hljs-attr">filters:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">PrefixPath=/aot</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">StripPrefix=2</span><br><br>        <span class="hljs-comment"># 配置成原始路径正则, 重写后的路径的正则</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">RewritePath=/foo/(?&lt;segment&gt;.*),</span> <span class="hljs-string">/$\&#123;segment&#125;</span><br></code></pre></div></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">PrefixPath: 请求<span class="hljs-regexp">/hello ,转发到目标路径变为/</span>aot/hello;添加前缀<br><br>StripPrefix: 阶段路径设置,请求<span class="hljs-regexp">/foo/</span>bar<span class="hljs-regexp">/hello,转发到目标路径为/</span>hello;移除前缀<br><br>RewritePath: 重写路径. <span class="hljs-regexp">/foo/</span>bar 会被重写为/bar,yaml语法,$\ 替换$ <br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>spring-cloud</title>
    <link href="/2021/03/25/spring-cloud/spring-cloud/"/>
    <url>/2021/03/25/spring-cloud/spring-cloud/</url>
    
    <content type="html"><![CDATA[<h2 id="spring-cloud-springboot-兼容测试"><a href="#spring-cloud-springboot-兼容测试" class="headerlink" title="spring-cloud springboot 兼容测试"></a>spring-cloud springboot 兼容测试</h2><p><a href="https://start.spring.io/actuator/info">https://start.spring.io/actuator/info</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>虚拟机配置</title>
    <link href="/2021/03/25/tool/vm/"/>
    <url>/2021/03/25/tool/vm/</url>
    
    <content type="html"><![CDATA[<ol><li> Mac VirtualBox 安装 ubuntu 报错Kernel driver not installed (rc=-1908)<blockquote><p>  mac安全策略限制</p></blockquote></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>vscode配置</title>
    <link href="/2021/03/24/tool/vscode/"/>
    <url>/2021/03/24/tool/vscode/</url>
    
    <content type="html"><![CDATA[<h2 id="修改系统界面字体大小"><a href="#修改系统界面字体大小" class="headerlink" title="修改系统界面字体大小"></a>修改系统界面字体大小</h2><h2 id="question"><a href="#question" class="headerlink" title="question"></a>question</h2><ol><li>打开vscode默认进入insert模式,因为安装了Vim插件</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>Tools</tag>
      
      <tag>VsCode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo使用</title>
    <link href="/2021/03/24/tool/hexo/"/>
    <url>/2021/03/24/tool/hexo/</url>
    
    <content type="html"><![CDATA[<p>创建post</p><p>hexo new [layout] title</p><p> 指定路径 –path</p><p> <code> hexo new page --path about/me &quot;About me </code></p>]]></content>
    
    
    
    <tags>
      
      <tag>Tools</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java String相关</title>
    <link href="/2021/03/24/java/String/"/>
    <url>/2021/03/24/java/String/</url>
    
    <content type="html"><![CDATA[<h2 id="spring事务"><a href="#spring事务" class="headerlink" title="spring事务"></a>spring事务</h2><p>事务级别:</p><ul><li>default </li><li>read_Un_commit</li><li>读已提交</li><li>可重复读</li><li>序列化</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>分布式锁</title>
    <link href="/2021/03/24/java/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/"/>
    <url>/2021/03/24/java/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</url>
    
    <content type="html"><![CDATA[<h2 id="分布式锁实现方式"><a href="#分布式锁实现方式" class="headerlink" title="分布式锁实现方式"></a>分布式锁实现方式</h2><ul><li>数据库表</li><li>redis </li><li>zookeeper<br>普通redis 锁存在的问题,设置过期时间防止死锁,没有续期导致锁到时间会失效</li></ul><h2 id="分布式锁方案优缺点"><a href="#分布式锁方案优缺点" class="headerlink" title="分布式锁方案优缺点"></a>分布式锁方案优缺点</h2><h2 id="Redisson分布式锁原理"><a href="#Redisson分布式锁原理" class="headerlink" title="Redisson分布式锁原理"></a>Redisson分布式锁原理</h2><p>watchDog 锁续命</p><p>Rlock加锁结构是hash,</p><ul><li><p>key是设置的key,</p></li><li><p>字段是 uuid:thredId ; uuid是启动时,创建ConnectionManger的id,uuid.randomUUId()创建,每个连接一个id</p></li><li><p>value是1 开始递增</p></li></ul><p>主从架构在主节点,cluster模式,根据key计算一个slot 放在该节点上.</p><p>主从架构的缺点,主节点宕机,没有复制信息到从节点,此时从节点升级为主节点.导致多个客户端加锁成功</p>]]></content>
    
    
    
    <tags>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>java-optional</title>
    <link href="/2021/03/23/java/java-optional/"/>
    <url>/2021/03/23/java/java-optional/</url>
    
    <content type="html"><![CDATA[<h2 id="Optional"><a href="#Optional" class="headerlink" title="Optional"></a>Optional</h2><p>Optional 类是一个可以为null的容器对象。如果值存在则isPresent()方法会返回true，调用get()方法会返回该对象。</p><p>Optional 是个容器：它可以保存类型T的值，或者仅仅保存null。Optional提供很多有用的方法，这样我们就不用显式进行空值检测。</p><p>Optional 类的引入很好的解决空指针异常。</p><h2 id="核心方法"><a href="#核心方法" class="headerlink" title="核心方法"></a>核心方法</h2><p>主要API</p><figure class="highlight asciidoc"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs asciidoc"><span class="hljs-bullet">- </span>Optional(T value),<br><span class="hljs-bullet">- </span>empty(),<br><span class="hljs-bullet">- </span>of(T value),<br><span class="hljs-bullet">- </span>ofNullable(T value)<br><br></code></pre></div></td></tr></table></figure><p>Optional(T value)构造函数,是私有方法,内部使用.</p><figure class="highlight typescript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs typescript"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; Optional&lt;T&gt; <span class="hljs-function"><span class="hljs-title">of</span>(<span class="hljs-params">T value</span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Optional&lt;&gt;(value);<br>&#125;<br></code></pre></div></td></tr></table></figure><p>根据构造函数可以得出 : 通过of(T value)构造出来的Optional对象,如果value为空,会报NPE;value不为空时正常构造对象</p><p>Optional内部维护这一个value为Null的对象,empty()返回的旧手机EMPTY对象</p><figure class="highlight plaintext"><figcaption><span>static <T> Optional<T> ofNullable(T value) &#123;</span></figcaption><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs public">return value == null ? empty() : of(value);<br></code></pre></div></td></tr></table></figure><h2 id="其他API"><a href="#其他API" class="headerlink" title="其他API"></a>其他API</h2><figure class="highlight asciidoc"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs asciidoc"><br>orElse(T other)<br>orElseGet(Supplier&lt;? extends T&gt; other)<br>orElseThrow(Supplier&lt;? extends X&gt; exceptionSupplier)<br>isPresent()和ifPresent(Consumer&lt;? super T&gt; consumer)<br><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JDK</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML</title>
    <link href="/2021/03/22/frontend/html/"/>
    <url>/2021/03/22/frontend/html/</url>
    
    <content type="html"><![CDATA[<h1 id="html-需要注意"><a href="#html-需要注意" class="headerlink" title="html  需要注意"></a>html  需要注意</h1><ol><li>在下列的 HTML 中，哪个可以添加背景颜色？ <code>&lt;body bgcolor=&quot;yellow&quot;&gt;</code></li><li>请选择产生粗体字的 HTML 标签：<code>&lt;b&gt;</code></li><li>链接电子邮件的标签 <code>&lt;a href=&quot;mailto:xxx@yy&quot;&gt;</code></li><li>下拉列表 <code>&lt;select&gt;</code></li><li>html中文本区 <code>&lt;textarea&gt;</code><h2 id="h5"><a href="#h5" class="headerlink" title="h5"></a>h5</h2></li><li>在 HTML5 中，哪个元素用于组合标题元素？<code>hgroup</code></li><li>h5 不再支持的元素 <code>font</code> <code>acronym</code></li><li>h5继续支持的元素 <code>base</code></li><li>h5播放视频 <code>&lt;video&gt;</code></li><li>h5播放音频 <code>&lt;audio&gt;</code></li><li>在 HTML5 中不再支持 <code>&lt;script&gt;</code> 元素的哪个属性？<code>rel</code></li><li> 在 HTML5 中，contextmenu 和 spellcheck 是： html属性</li><li> 由 SVG 定义的图形是什么格式的？ <code>xml</code></li><li>  哪个 HTML5 内建对象用于在画布上绘制？<code>getContext</code></li><li>  哪种输入类型定义滑块控件？ <code>range</code></li><li>  哪个 HTML5 元素用于显示已知范围内的标量测量？ <code>&lt;meter&gt;</code></li><li>  在 XHTML 文档中哪些元素是强制性的？ <code>doctype、html、head、body 以及 title</code></li><li>  xhtml下列哪些 lang 属性的用法是正确的？<code>&lt;div lang=&quot;en&quot; xml:lang=&quot;en&quot;&gt;Hello World!&lt;/div&gt;</code></li><li>  xhtml中DTD <code>Strict, Transitional, Frameset</code></li></ol><p>##js</p><ol><li>外部脚本必须包含<code>&lt;script&gt;</code>吗？ 否</li><li>js三种循环。for 循环、do…while 循环和 while 循环。</li><li>js注释：//This is a comment</li><li>js多行注释 /<em>这是多行注释</em>/</li><li> 打开名为 “window2” 的新窗口的 JavaScript 语法是？<code> window.open(&quot;http://www.runoob.com&quot;,&quot;window2&quot;)</code></li><li>  如何在浏览器的状态栏放入一条消息？ 正确答案：<code>window.status = &quot;put your message here&quot;</code></li><li><ol start="20"><li>如何获得客户端浏览器的名称？正确答案：<code>navigator.appName</code></li></ol></li></ol>]]></content>
    
    
    <categories>
      
      <category>FrontEnd</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java JDK相关面试题</title>
    <link href="/2021/03/22/java/JDK%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <url>/2021/03/22/java/JDK%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><p>throwable</p><ul><li>Error (oom 环境错误,无法恢复)</li><li>Exception</li><li>IOException RuntimeException</li></ul><h3 id="非检查性异常"><a href="#非检查性异常" class="headerlink" title="非检查性异常"></a>非检查性异常</h3><ol><li>NullPointerException</li><li>NumberFormatException</li><li>ClassCastException</li><li>IndexOutOfBoundsException</li><li>ArrayIndexOutOfBoundsException</li><li>ArithmeticException</li><li>IllegalArgumentException</li><li>IllegalMonitorStateException</li><li>IllegalStateException</li><li>UnsupportedOperationException    </li></ol><h3 id="检查性异常"><a href="#检查性异常" class="headerlink" title="检查性异常"></a>检查性异常</h3><ol><li>ClassNotFoundException</li><li>CloneNotSupportedException</li><li>IllegalAccessException</li><li>InstantiationException</li><li>InterruptedException</li><li>NoSuchFieldException</li><li>NoSuchMethodException</li></ol><h2 id="HashMap题目"><a href="#HashMap题目" class="headerlink" title="HashMap题目"></a>HashMap题目</h2>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JDK</tag>
      
      <tag>面试题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java JDK相关面试题</title>
    <link href="/2021/03/22/java/%E5%88%86%E5%B8%83%E5%BC%8F%E7%9B%B8%E5%85%B3/"/>
    <url>/2021/03/22/java/%E5%88%86%E5%B8%83%E5%BC%8F%E7%9B%B8%E5%85%B3/</url>
    
    <content type="html"><![CDATA[<h2 id="分布式相关"><a href="#分布式相关" class="headerlink" title="分布式相关"></a>分布式相关</h2><p>Dubbo的底层实现原理和机制<br>描述一个服务从发布到被消费的详细过程<br>分布式系统怎么做服务治理<br>接口的幂等性的概念<br>消息中间件如何解决消息丢失问题<br>Dubbo的服务请求失败怎么处理<br>重连机制会不会造成错误<br>对分布式事务的理解<br>如何实现负载均衡，有哪些算法可以实现？<br>Zookeeper的用途，选举的原理是什么？<br>数据的垂直拆分水平拆分。<br>zookeeper原理和适用场景<br>zookeeper watch机制<br>redis/zk节点宕机如何处理<br>分布式集群下如何做到唯一序列号<br>如何做一个分布式锁<br>用过哪些MQ，怎么用的，和其他mq比较有什么优缺点，MQ的连接是线程安全的吗<br>MQ系统的数据如何保证不丢失<br>列举出你能想到的数据库分库分表策略；分库分表后，如何解决全表查询的问题。   </p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>面试题</tag>
      
      <tag>分布式</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>消息队列</title>
    <link href="/2021/03/22/java/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/"/>
    <url>/2021/03/22/java/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/</url>
    
    <content type="html"><![CDATA[<p>消费端出问题了</p><p>修复consume问题，<br>新建topic，partition是原来的十倍，<br>临时扩容十倍机器消费</p><p>消息有序性</p><p>假设1：消息A只包含修改的商品名称，消息B只包含修改的商品重量，此时消息队列的消费端实际上不需要关注消息时序，<br>消息队列消费端（Consumer） 只管消费即可。</p><p>假设2：消息A包含修改的商品名称、重量，消息B包含修改的商品名称，此时消费端首先接收到消息B，后接收到消息A，<br>那么消息B的修改就会被覆盖。此时消息队列的消费端实际上又需要关注消息时序。</p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>面试题</tag>
      
      <tag>分布式</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>算法面试题</title>
    <link href="/2021/03/22/java/%E7%AE%97%E6%B3%95/"/>
    <url>/2021/03/22/java/%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>海量url去重类问题（布隆过滤器）<br>数组和链表数据结构描述，各自的时间复杂度<br>二叉树遍历<br>快速排序<br>BTree相关的操作<br>在工作中遇到过哪些设计模式，是如何应用的<br>hash算法的有哪几种，优缺点，使用场景<br>什么是一致性hash<br>paxos算法   </p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>面试题</tag>
      
      <tag>数据结构和算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>综合面试题</title>
    <link href="/2021/03/22/java/%E7%BB%BC%E5%90%88%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <url>/2021/03/22/java/%E7%BB%BC%E5%90%88%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/jsondream/java-server-interview-questions/blob/master/README.md">github </a></p><h2 id="java基础"><a href="#java基础" class="headerlink" title="java基础"></a>java基础</h2><p>线程池的种类，区别和使用场景<br>分析线程池的实现原理和线程的调度过程<br>线程池如何调优<br>线程池的最大线程数目根据什么确定<br>动态代理的几种方式<br>HashMap的并发问题<br>了解LinkedHashMap的应用吗<br>反射的原理，反射创建类实例的三种方式是什么？<br>cloneable接口实现原理，浅拷贝or深拷贝<br>Java NIO使用<br>hashtable和hashmap的区别及实现原理，hashmap会问到数组索引，hash碰撞怎么解决<br>arraylist和linkedlist区别及实现原理<br>反射中，Class.forName和ClassLoader区别<br>String，Stringbuffer，StringBuilder的区别？<br>有没有可能2个不相等的对象有相同的hashcode<br>TreeMap的实现原理   </p><h3 id="JVM相关"><a href="#JVM相关" class="headerlink" title="JVM相关"></a>JVM相关</h3><p>类的实例化顺序，比如父类静态数据，构造函数，字段，子类静态数据，构造函数，字段，他们的执行顺序<br>JVM内存分代<br>Java 8的内存分代改进<br>JVM垃圾回收机制，何时触发MinorGC等操作<br>jvm中一次完整的GC流程（从ygc到fgc）是怎样的，重点讲讲对象如何晋升到老年代，几种主要的jvm参数等<br>你知道哪几种垃圾收集器，各自的优缺点，重点讲下cms，g1<br>新生代和老生代的内存回收策略<br>Eden和Survivor的比例分配等<br>深入分析了Classloader，双亲委派机制<br>JVM的编译优化<br>对Java内存模型的理解，以及其在并发中的应用<br>指令重排序，内存栅栏等<br>OOM错误，stackoverflow错误，permgen space错误<br>JVM常用参数<br>tomcat结构，类加载器流程<br>volatile的语义，它修饰的变量一定线程安全吗<br>g1和cms区别,吞吐量优先和响应优先的垃圾收集器选择<br>说一说你对环境变量classpath的理解？如果一个类不在classpath下，为什么会抛出ClassNotFoundException异常，如果在不改变这个类路径的前期下，怎样才能正确加载这个类？<br>说一下强引用、软引用、弱引用、虚引用以及他们之间和gc的关系      </p><h3 id="JUC-并发相关"><a href="#JUC-并发相关" class="headerlink" title="JUC/并发相关"></a>JUC/并发相关</h3><p>ThreadLocal用过么，原理是什么，用的时候要注意什么<br>Synchronized和Lock的区别<br>synchronized 的原理，什么是自旋锁，偏向锁，轻量级锁，什么叫可重入锁，什么叫公平锁和非公平锁<br>concurrenthashmap具体实现及其原理，jdk8下的改版<br>用过哪些原子类，他们的参数以及原理是什么<br>cas是什么，他会产生什么问题（ABA问题的解决，如加入修改次数、版本号）<br>如果让你实现一个并发安全的链表，你会怎么做<br>简述ConcurrentLinkedQueue和LinkedBlockingQueue的用处和不同之处<br>简述AQS的实现原理<br>countdowlatch和cyclicbarrier的用法，以及相互之间的差别?<br>concurrent包中使用过哪些类？分别说说使用在什么场景？为什么要使用？<br>LockSupport工具<br>Condition接口及其实现原理<br>Fork/Join框架的理解<br>jdk8的parallelStream的理解<br>分段锁的原理,锁力度减小的思考    </p><h2 id="Spring"><a href="#Spring" class="headerlink" title="Spring"></a>Spring</h2><p>Spring AOP与IOC的实现原理<br>Spring的beanFactory和factoryBean的区别<br>为什么CGlib方式可以对接口实现代理？<br>RMI与代理模式<br>Spring的事务隔离级别，实现原理<br>对Spring的理解，非单例注入的原理？它的生命周期？循环注入的原理，aop的实现原理，说说aop中的几个术语，它们是怎么相互工作的？<br>Mybatis的底层实现原理<br>MVC框架原理，他们都是怎么做url路由的<br>spring boot特性，优势，适用场景等<br>quartz和timer对比<br>spring的controller是单例还是多例，怎么保证并发的安全   </p><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p>MySQL InnoDB存储的文件结构<br>索引树是如何维护的？<br>数据库自增主键可能的问题<br>MySQL的几种优化<br>mysql索引为什么使用B+树<br>数据库锁表的相关处理<br>索引失效场景<br>高并发下如何做到安全的修改同一行数据，乐观锁和悲观锁是什么，INNODB的行级锁有哪2种，解释其含义<br>数据库会死锁吗，举一个死锁的例子，mysql怎么解决死锁</p><h2 id="Redis-amp-缓存相关"><a href="#Redis-amp-缓存相关" class="headerlink" title="Redis&amp;缓存相关"></a>Redis&amp;缓存相关</h2><p>Redis的并发竞争问题如何解决了解Redis事务的CAS操作吗<br>缓存机器增删如何对系统影响最小，一致性哈希的实现<br>Redis持久化的几种方式，优缺点是什么，怎么实现的<br>Redis的缓存失效策略<br>缓存穿透的解决办法<br>redis集群，高可用，原理<br>mySQL里有2000w数据，redis中只存20w的数据，如何保证redis中的数据都是热点数据<br>用Redis和任意语言实现一段恶意登录保护的代码，限制1小时内每用户Id最多只能登录5次<br>redis的数据淘汰策略   </p><h2 id="网络相关"><a href="#网络相关" class="headerlink" title="网络相关"></a>网络相关</h2><p>http1.0和http1.1有什么区别<br>TCP/IP协议<br>TCP三次握手和四次挥手的流程，为什么断开连接要4次,如果握手只有两次，会出现什么<br>TIME_WAIT和CLOSE_WAIT的区别<br>说说你知道的几种HTTP响应码<br>当你用浏览器打开一个链接的时候，计算机做了哪些工作步骤<br>TCP/IP如何保证可靠性，数据包有哪些数据组成<br>长连接与短连接<br>Http请求get和post的区别以及数据包格式<br>简述tcp建立连接3次握手，和断开连接4次握手的过程；关闭连接时，出现TIMEWAIT过多是由什么原因引起，是出现在主动断开方还是被动断开方。    </p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>maven解决依赖冲突,快照版和发行版的区别<br>Linux下IO模型有几种，各自的含义是什么<br>实际场景问题，海量登录日志如何排序和处理SQL操作，主要是索引和聚合函数的应用<br>实际场景问题解决，典型的TOP K问题<br>线上bug处理流程<br>如何从线上日志发现问题<br>linux利用哪些命令，查找哪里出了问题（例如io密集任务，cpu过度）<br>场景问题，有一个第三方接口，有很多个线程去调用获取数据，现在规定每秒钟最多有10个线程同时调用它，如何做到。<br>用三个线程按顺序循环打印abc三个字母，比如abcabcabc。<br>常见的缓存策略有哪些，你们项目中用到了什么缓存系统，如何设计的<br>设计一个秒杀系统，30分钟没付款就自动关闭交易（并发会很高）<br>请列出你所了解的性能测试工具<br>后台系统怎么防止请求重复提交？<br>有多个相同的接口，我想客户端同时请求，然后只需要在第一个请求返回结果的时候返回给客户端     </p><h3 id="为什么不能根据返回类型来区分重载"><a href="#为什么不能根据返回类型来区分重载" class="headerlink" title="为什么不能根据返回类型来区分重载"></a>为什么不能根据返回类型来区分重载</h3><p>如下两个方法：<br>　　　　void f(){}<br>　　　　int f(){ return 1;}<br>只要编译器可以根据语境明确判断出语义，比如在int x = f();中，那么的确可以据此区分重载方法。不过，有时你并不关心方法的返回值，你想要的是方法调用的其他效果（这常被称为“为了副作用而调用”），这时你可能会调用方法而忽略其返回值，所以如果像下面的调用：<br>　　　　fun();<br>此时Java如何才能判断调用的是哪一个 f() 呢？别人如何理解这种代码呢？所以，根据方法返回值来区分重载方法是行不通的。</p><p>以上参考《Java 编程思想》</p><h2 id="try-catch-finally"><a href="#try-catch-finally" class="headerlink" title="try catch finally"></a>try catch finally</h2><ol><li>try catch中只要有finally语句都要执行（有特例：如果try 或 catch 里面有 exit（0）就不会执行finally了）；</li><li>finally语句在try或catch中的return语句执行之后返回之前执行，且finally里的修改语句不能影响try或catch中 return已经确定   的返回值；<div class="hljs code-wrapper"><pre><code> 若finally里也有return语句则覆盖try或catch中的return语句直接返回；</code></pre></div></li><li>在遵守第（2）条return的情况下，执行顺序是：try–&gt;catch（如果有异常的话）–&gt;finally；</li></ol><h2 id="子类构造方法执行顺序"><a href="#子类构造方法执行顺序" class="headerlink" title="子类构造方法执行顺序"></a>子类构造方法执行顺序</h2><ol start="8"><li>执行顺序：1.静态代码块 –&gt; 2.普通代码块 –&gt; 3.构造方法<br>需要明白的是，1是类级别的，2和3是实例级别的，所以在父子类关系中，上述的执行顺序为：</li></ol><p>父类静态代码块–&gt;子类静态代码块–&gt;父类普通代码块–&gt;父类构造方法–&gt;子类代码块–&gt;子类构造方法；</p><p>也就是上到下（父类到子类）先走完 类级别的（静态的）–&gt; 再依次走完父类的所有实例级别代码 –&gt; 再走子类所有实例级别代码</p><h2 id="java-ConcurrentHashMap-key-value不能为null"><a href="#java-ConcurrentHashMap-key-value不能为null" class="headerlink" title="java ConcurrentHashMap key value不能为null"></a>java ConcurrentHashMap key value不能为null</h2><p>  According to Doug lea (author of the ConcurrentHashMap)</p><p>The main reason that nulls aren’t allowed in ConcurrentMaps (ConcurrentHashMaps, ConcurrentSkipListMaps) because there will be ambiguities that may be just barely tolerable in non-concurrent maps can’t be accommodated.</p><p>The main one is that if map.get(key) returns null, you can’t detect whether the key explicitly maps to null vs the key isn’t mapped.</p><p>In a non-concurrent map, you can check this via map.contains(key), but in a concurrent one, the map might have changed between calls.</p><p>It might be possible that key k might be deleted in between the get(k) and containsKey(k) calls.<br>As a result, the code will return null as opposed to KeyNotPresentException (Expected Result if key is not present).</p><p>如果有null key or value ,containsKey 该操作无法判定</p><h2 id="Array-sort"><a href="#Array-sort" class="headerlink" title="Array.sort"></a>Array.sort</h2><p>实现原理和Collections.sort实现原理。<br/><br>答：Collections.sort方法底层会调用Arrays.sort方法，底层实现都是TimeSort实现的，是归并排序</p><p>如果是基础类型直接使用快速排序，对象类型使用归并排序<br>快速排序当子过程小于60，使用插入排序</p><h2 id="foreach和"><a href="#foreach和" class="headerlink" title="foreach和"></a>foreach和</h2><p>其实，增强for循环也是Java给我们提供的一个语法糖，其实是依赖了while循环和Iterator实现的</p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>面试题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>设计模式</title>
    <link href="/2021/03/22/java/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <url>/2021/03/22/java/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<p>在装饰器模式和代理模式之间，你如何抉择，请结合自身实际情况聊聊<br>代码重构的步骤和原因，如果理解重构到模式？  </p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>设计模式</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTTP</title>
    <link href="/2021/03/22/architect/network/http/"/>
    <url>/2021/03/22/architect/network/http/</url>
    
    <content type="html"><![CDATA[<h2 id="HTTP状态码"><a href="#HTTP状态码" class="headerlink" title="HTTP状态码"></a>HTTP状态码</h2><table><thead><tr><th>code</th><th>含义</th></tr></thead><tbody><tr><td>206</td><td>部分内容 1.1</td></tr><tr><td>406</td><td>type= not accetable  cound not find accetable representation</td></tr><tr><td>409</td><td>资源冲突 1.1</td></tr><tr><td>410</td><td>资源被永久删除 1.1</td></tr><tr><td>503</td><td>服务不可用</td></tr><tr><td>504</td><td>网关超时</td></tr></tbody></table><h2 id="keepAlive含义"><a href="#keepAlive含义" class="headerlink" title="keepAlive含义"></a>keepAlive含义</h2><p>HTTP协议的Keep-Alive意图在于连接复用，同一个连接上串行方式传递请求-响应数据<br>TCP的KeepAlive机制意图在于保活、心跳，检测连接错误</p><h2 id="HTTP请求方法"><a href="#HTTP请求方法" class="headerlink" title="HTTP请求方法"></a>HTTP请求方法</h2><ol><li>get 获取资源</li><li>post 添加</li><li>put 更新</li><li>delete 删除</li><li>head 返回HTTP报头，不返回文档主体</li><li>option 返回服务器支持的HTTP方法</li><li>connect 把请求连接转换到透明的TCP/IP通道</li></ol><h2 id="get-和-post-区别"><a href="#get-和-post-区别" class="headerlink" title="get 和 post 区别"></a>get 和 post 区别</h2><ul><li>get 从服务器获取数据</li><li>post 向指定的资源提交要被处理的数据</li></ul><p>get 的一些特性</p><ul><li>get请求可以被缓存</li><li>get请求保留在浏览器历史记录中</li><li>get请求可以被收藏为书签</li><li>get请求可以不应该在处理敏感数据时使用</li><li>get请求长度有限制</li><li>get请求只应当用于取数据</li></ul><p>post特性</p><ul><li>post请求不会被缓存</li><li>post请求不会保留在历史记录</li><li>post请求不能被收藏为书签</li><li>post请求请求数据长度没有要求</li></ul><p>get和post比较</p><table><thead><tr><th></th><th align="center">get</th><th align="right">post</th></tr></thead><tbody><tr><td>后退，刷线按钮</td><td align="center">无害</td><td align="right">数据会被重新提交(浏览器应该告知用户数据会被重新提交)</td></tr><tr><td>书签</td><td align="center">可被收藏为书签</td><td align="right">不可被收藏为书签</td></tr><tr><td>缓存</td><td align="center">能被缓存</td><td align="right">不能缓存</td></tr><tr><td>编码类型</td><td align="center">application/x-www=form-urlencoded</td><td align="right">application/x-www-form-urlencoded 或multipart/form-data 二进制时使用多重编码</td></tr><tr><td>历史记录</td><td align="center">参数保留在历史记录中</td><td align="right">参数不会保存在历史记录中</td></tr><tr><td>对数据长度限制</td><td align="center">有，get方法参数最大1024字符</td><td align="right">无限制</td></tr><tr><td>对数据类型控制</td><td align="center">只允许ASCII</td><td align="right">无限制</td></tr><tr><td>安全性</td><td align="center">安全性较差，参数是URL一部分</td><td align="right">比get安全，参数不会保存在历史记录</td></tr><tr><td>可见性</td><td align="center">URL对所有人可见</td><td align="right">数据不会显示在URL中</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>Network</category>
      
    </categories>
    
    
    <tags>
      
      <tag>面试题</tag>
      
      <tag>HTTP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>软件开发知识</title>
    <link href="/2020/11/03/basic/dev-basic/"/>
    <url>/2020/11/03/basic/dev-basic/</url>
    
    <content type="html"><![CDATA[<h2 id="惊群效应"><a href="#惊群效应" class="headerlink" title="惊群效应"></a>惊群效应</h2><p>惊群问题又名惊群效应。简单来说就是多个进程或者线程在等待同一个事件，当事件发生时，<br>所有线程和进程都会被内核唤醒。唤醒后通常只有一个进程获得了该事件并进行处理，<br>其他进程发现获取事件失败后又继续进入了等待状态，在一定程度上降低了系统性能。</p><p>多线程的上下文切换会造成系统开销<br>Accept 的惊群问题在 Linux Kernel 2.6 之后就被从内核的层面上解决了。但是 EPOLL 怎么办？在 2016 年一月，Linux 之父 Linus 向内核提交了一个补丁</p><p>Nginx 主体的思想是通过锁的形式来处理这样问题。我们每个进程在监听 FD 事件之前，我们先要通过 ngx_trylock_accept_mutex 去获取一个全局的锁。如果拿锁成功，那么则开始通过<br>ngx_process_events 尝试去处理事件。如果拿锁失败，则放弃本次操作。所以从某种意义上来讲，对于某一个 FD ，Nginx 同时只有一个 Worker 来处理 FD 上的事件。从而避免惊群。</p><h2 id="Canary-金丝雀发布"><a href="#Canary-金丝雀发布" class="headerlink" title="Canary 金丝雀发布"></a>Canary 金丝雀发布</h2><p>矿井中的金丝雀<br>17 世纪，英国矿井工人发现，金丝雀对瓦斯这种气体十分敏感。空气中哪怕有极其微量的瓦斯，金丝雀也会停止歌唱；而当瓦斯含量超过一定限度时， 虽然鲁钝的人类毫无察觉，<br>金丝雀却早已毒发身亡。当时在采矿设备相对简陋的条件下，工人们每次下井都会带上一只金丝雀作为 “瓦斯检测指标”，以便在危险状况下 紧急撤离。</p><h2 id="inventory-vs-stock"><a href="#inventory-vs-stock" class="headerlink" title="inventory vs stock"></a>inventory vs stock</h2><p>stock意思最为广泛，用途最为普及，字面意思跟inventory一样，更为口头化。<br>引用网上的说法，stock是库存作为东西放在那里，一堆堆的，甚至是混乱的，没有条理性，<br>侧重于经济会计层面的“资金”性质的占用；<br>inventory<br>更偏重于存货清单之义，是库存被清点后的严格管控，侧重于信息的动态管理。<br>在牛津高阶词典里面甚至没有出现库存之义，早期本为详细目录、清单之义，<br>后引申为货物库存，可理解为更专业、更书面化、经过精细盘点后的库存。</p><h2 id="正向代理-反向代理"><a href="#正向代理-反向代理" class="headerlink" title="正向代理 反向代理"></a>正向代理 反向代理</h2><p>正向代理<br>由于防火墙的原因，我们并不能直接访问谷歌，那么我们可以借助VPN来实现，这就是一个简单的正向代理的例子。这里你能够发现，正向代理“代理”的是客户端，而且客户端是知道目标的，而目标是不知道客户端是通过VPN访问的。<br>反向代理<br>当我们在外网访问百度的时候，其实会进行一个转发，代理到内网去，这就是所谓的反向代理，即反向代理“代理”的是服务器端，而且这一个过程对于客户端而言是透明的。</p>]]></content>
    
    
    <categories>
      
      <category>Basic</category>
      
    </categories>
    
    
    <tags>
      
      <tag>基础知识</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Redis基本操作</title>
    <link href="/2020/10/25/database/redis-command/"/>
    <url>/2020/10/25/database/redis-command/</url>
    
    <content type="html"><![CDATA[<figure class="highlight gams"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs gams"><br>redis&gt; <span class="hljs-keyword">set</span> name <span class="hljs-comment">robin</span><br>OK<br>redis&gt; get <span class="hljs-comment">name</span><br>robin<br>redis&gt; expire <span class="hljs-comment">name 100000000000000000000</span><br>ERR <span class="hljs-comment">value is not an integer or out of range</span><br>redis&gt; expire <span class="hljs-comment">name 10000000000000000</span><br>ERR <span class="hljs-comment">invalid expire time in expire</span><br>redis&gt; expire <span class="hljs-comment">name 10000000000000</span><br>1<br>redis&gt; ttl <span class="hljs-comment">name</span><br>9999999999995<br>redis&gt; dbsize<br>1<br>redis&gt; keys <span class="hljs-comment">*</span><br>0<br>name<br>redis&gt; <span class="hljs-keyword">set</span> <span class="hljs-comment">k1 v1</span><br>OK<br>redis&gt; get <span class="hljs-comment">k1</span><br>v1<br>redis&gt; append <span class="hljs-comment">k1 111</span><br>5<br>redis&gt; get <span class="hljs-comment">k1</span><br>v1111<br>redis&gt; strlen <span class="hljs-comment">k1</span><br>5<br>redis&gt; setnx <span class="hljs-comment">k1 abc</span><br>0<br>redis&gt; get <span class="hljs-comment">k1</span><br>v1111<br>redis&gt; setnx <span class="hljs-comment">k2 v2</span><br><br>redis&gt; <span class="hljs-keyword">set</span> <span class="hljs-comment">k3 1</span><br>OK<br>redis&gt; incr <span class="hljs-comment">k3</span><br>2<br>redis&gt; decr <span class="hljs-comment">k3</span><br>1<br>redis&gt; incrby <span class="hljs-comment">k3 10</span><br>11<br>redis&gt; decrby <span class="hljs-comment">k3 3</span><br>8<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Database</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Redis问题</title>
    <link href="/2020/10/25/database/redis-question/"/>
    <url>/2020/10/25/database/redis-question/</url>
    
    <content type="html"><![CDATA[<h2 id="redis内存同步策略"><a href="#redis内存同步策略" class="headerlink" title="redis内存同步策略"></a>redis内存同步策略</h2><p>八种<br>有过期时间 volatile-lru  volatile-lfu volatile-random<br>随机 allkeys-random allkeys-lru allkeys-lfu<br>no-evction</p><h2 id="redis如何实现主从同步"><a href="#redis如何实现主从同步" class="headerlink" title="redis如何实现主从同步"></a>redis如何实现主从同步</h2><p>主从同步三种方式： 全量同步，长连接的命令传播，增量同步</p><p>三个阶段</p><ol><li>建立连接 协商同步，从库获取主库ip端口信息 redis runid ,保存节点信息</li><li>同步数据给从库 主库生成rdb文件发送给从库，从库清空书，接受rdb文件并加载</li><li>发送新数据写命令给从库 ，主库发送replication buffer给从库</li></ol><h2 id="主从级联，分担全量复制时的主库压力"><a href="#主从级联，分担全量复制时的主库压力" class="headerlink" title="主从级联，分担全量复制时的主库压力"></a>主从级联，分担全量复制时的主库压力</h2><h2 id="主库和从库网络断了怎么办"><a href="#主库和从库网络断了怎么办" class="headerlink" title="主库和从库网络断了怎么办"></a>主库和从库网络断了怎么办</h2><p>增量复制</p><p>增量同步可以缓解主机全量同步的压力，它需要特殊机制保障：replication buffer，环形缓冲区，master_repl_offset，slave_repl_offset</p><p>从机的同步位置标识，在环形缓冲区被覆盖后，会触发新的一轮全量同步，<em>所repl_backlog_buffer的大小是redis重要的调优参数</em></p><h2 id="1亿个key，其中有10w个key是以某个固定的已知的前缀开头的，如果将它们全部找出来？"><a href="#1亿个key，其中有10w个key是以某个固定的已知的前缀开头的，如果将它们全部找出来？" class="headerlink" title="1亿个key，其中有10w个key是以某个固定的已知的前缀开头的，如果将它们全部找出来？"></a>1亿个key，其中有10w个key是以某个固定的已知的前缀开头的，如果将它们全部找出来？</h2><p>使用keys指令可以扫出指定模式的key列表。 如果这个redis正在给线上的业务提供服务，那使用keys指令会有什么问题？ redis的单线程的。<br>keys指令会导致线程阻塞一段时间，线上服务会停顿，直到指令执行完毕，服务才能恢复。这个时候可以使用scan指令，<br>scan指令可以无阻塞的提取出指定模式的key列表，但是会有一定的重复概率，在客户端做一次去重就可以了 ，但是整体所花费的时间会比直接用keys指令长。</p><h2 id="Jedis-节点顺序造成rehash"><a href="#Jedis-节点顺序造成rehash" class="headerlink" title="Jedis 节点顺序造成rehash"></a>Jedis 节点顺序造成rehash</h2><p>若实例化 JedisShardInfo 时不设置节点名称（name属性），那么当Redis节点列表的顺序发生变化时，会发生“ 键 rehash 现象”</p><p>使用BTrace追踪redis.clients.util.Sharded的实时状态，验证“Jedis分片机制的一致性哈希算法”实现；</p><p>发现一个致命坑：若JedisShardInfo不设置节点名称（name属性），那么当Redis节点列表的顺序发生变化时，会发生“键 rehash 现象”。见Sharded的initialize(…)方法实现：</p><p>（I） this.algo.hash(“SHARD-“ + i + “-NODE-“ + n)</p><p>【缺点】  大坑：将节点的顺序索引i作为hash的一部分！ 当节点顺序被无意识地调整了，会触发”键 rehash 现象”，那就杯具啦！（”因节点顺序调整而引发rehash”的问题）</p><blockquote><p>this.algo.hash(shardInfo.getName() + “*” + shardInfo.getWeight() + n)</p></blockquote><p>【优点】 这样设计避免了上面”因节点顺序调整而引发rehash”的问题。</p><p>【缺点】 坑：”节点名称+权重”必须是唯一的，否则节点会出现重叠覆盖！ 同时，”节点名称+ 权重”必须不能被中途改变！</p><blockquote><p>节点IP:端口号+编号</p></blockquote><p>Memcached Java Client，就是采用这种策略。</p><p>【缺点】 因机房迁移等原因，可能导致节点IP发生改变！</p><blockquote><p> 唯一节点名称+编号</p></blockquote><p>较好地一致性hash策略是：唯一节点名称+编号，不要考虑权重因素！</p><p>long hash = algo.hash(shardInfo.getName() + “*” + n)</p><p>所以， 在配置Redis服务列表时，必须要设置节点逻辑名称（name属性）。</p>]]></content>
    
    
    <categories>
      
      <category>Database</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Redis基本操作</title>
    <link href="/2020/10/25/database/redis/"/>
    <url>/2020/10/25/database/redis/</url>
    
    <content type="html"><![CDATA[<figure class="highlight asciidoc"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs asciidoc"><br>[root@atguigu bin]# cd /opt<br>[root@atguigu opt]# redis-server<br>9348:C 29 Jun 11:22:34.505 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf<br>9348:M 29 Jun 11:22:34.506 * Increased maximum number of open files to 10032 (it was originally set to 1024).<br><span class="hljs-code">                _._                                                  </span><br><span class="hljs-code">           _.-``__ &#x27;&#x27;-._                                             </span><br><span class="hljs-code">      _.-``    `.  `_.  &#x27;&#x27;-._           Redis 3.2.5 (00000000/0) 64 bit</span><br><span class="hljs-code">  .-`` .-```.  ```\/    _.,_ &#x27;&#x27;-._                                   </span><br><span class="hljs-code"> (    &#x27;      ,       .-`  | `,    )     Running in standalone mode</span><br><span class="hljs-code"> |`-._`-...-` __...-.``-._|&#x27;` _.-&#x27;|     Port: 6379</span><br><span class="hljs-code"> |    `-._   `._    /     _.-&#x27;    |     PID: 9348</span><br><span class="hljs-code">  `-._    `-._  `-./  _.-&#x27;    _.-&#x27;                                   </span><br><span class="hljs-code"> |`-._`-._    `-.__.-&#x27;    _.-&#x27;_.-&#x27;|                                  </span><br><span class="hljs-code"> |    `-._`-._        _.-&#x27;_.-&#x27;    |           http://redis.io        </span><br><span class="hljs-code">  `-._    `-._`-.__.-&#x27;_.-&#x27;    _.-&#x27;                                   </span><br><span class="hljs-code"> |`-._`-._    `-.__.-&#x27;    _.-&#x27;_.-&#x27;|                                  </span><br><span class="hljs-code"> |    `-._`-._        _.-&#x27;_.-&#x27;    |                                  </span><br><span class="hljs-code">  `-._    `-._`-.__.-&#x27;_.-&#x27;    _.-&#x27;                                   </span><br><span class="hljs-code">      `-._    `-.__.-&#x27;    _.-&#x27;                                       </span><br><span class="hljs-code">          `-._        _.-&#x27;                                           </span><br><span class="hljs-code">              `-.__.-&#x27;                                               </span><br><br>9348:M 29 Jun 11:22:34.523 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.<br>9348:M 29 Jun 11:22:34.524 # Server started, Redis version 3.2.5<br>9348:M 29 Jun 11:22:34.524 # WARNING overcommit<span class="hljs-emphasis">_memory is set to 0! Background save may fail under low memory condition. To fix this issue add &#x27;vm.overcommit_memory = 1&#x27; to /etc/sysctl.conf and then reboot or run the command &#x27;sysctl vm.overcommit_memory=1&#x27; for this to take effect.</span><br><span class="hljs-emphasis">9348:M 29 Jun 11:22:34.524 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command &#x27;echo never &gt; /sys/kernel/mm/transparent_</span>hugepage/enabled&#x27; as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.<br>9348:M 29 Jun 11:22:34.524 * The server is now ready to accept connections on port 6379<br>ssssss^H^H^C9348:signal-handler (1561778606) Received SIGINT scheduling shutdown...<br>9348:M 29 Jun 11:23:26.228 # User requested shutdown...<br>9348:M 29 Jun 11:23:26.228 * Saving the final RDB snapshot before exiting.<br>9348:M 29 Jun 11:23:26.232 * DB saved on disk<br>9348:M 29 Jun 11:23:26.232 # Redis is now ready to exit, bye bye...<br>[root@atguigu opt]# cd redis-3.2.5/<br>[root@atguigu redis-3.2.5]# ll<br>总用量 200<br>-rw-rw-r--.  1 root root 78892 10月 26 2016 00-RELEASENOTES<br>-rw-rw-r--.  1 root root    53 10月 26 2016 BUGS<br>-rw-rw-r--.  1 root root  1805 10月 26 2016 CONTRIBUTING<br>-rw-rw-r--.  1 root root  1487 10月 26 2016 COPYING<br>drwxrwxr-x.  7 root root  4096 6月  29 10:56 deps<br>-rw-rw-r--.  1 root root    11 10月 26 2016 INSTALL<br>-rw-rw-r--.  1 root root   151 10月 26 2016 Makefile<br>-rw-rw-r--.  1 root root  4223 10月 26 2016 MANIFESTO<br>-rw-rw-r--.  1 root root  6834 10月 26 2016 README.md<br>-rw-rw-r--.  1 root root 46695 10月 26 2016 redis.conf<br>-rwxrwxr-x.  1 root root   271 10月 26 2016 runtest<br>-rwxrwxr-x.  1 root root   280 10月 26 2016 runtest-cluster<br>-rwxrwxr-x.  1 root root   281 10月 26 2016 runtest-sentinel<br>-rw-rw-r--.  1 root root  7606 10月 26 2016 sentinel.conf<br>drwxrwxr-x.  2 root root  4096 6月  29 10:56 src<br>drwxrwxr-x. 10 root root  4096 10月 26 2016 tests<br>drwxrwxr-x.  7 root root  4096 10月 26 2016 utils<br>[root@atguigu redis-3.2.5]# mkdir /opt/myRedis<br>[root@atguigu redis-3.2.5]# cp redis.conf /opt/myRedis/redis.conf<br>[root@atguigu redis-3.2.5]# cd /opt/myRedis/<br>[root@atguigu myRedis]# ll<br>总用量 48<br>-rw-r--r--. 1 root root 46695 6月  29 11:29 redis.conf<br>[root@atguigu myRedis]# vim redis.conf <br>[root@atguigu myRedis]# redis-server redis.conf <br>[root@atguigu myRedis]# ps -ef | grep redis<br>root       9442      1  0 11:31 ?        00:00:00 redis-server 127.0.0.1:6379<br>root       9446   2724  0 11:31 pts/1    00:00:00 grep --color=auto redis<br>[root@atguigu myRedis]# redis-cli<br>127.0.0.1:6379&gt; exit<br>[root@atguigu myRedis]# redis-cli -h 127.0.0.1 -p 6379<br>127.0.0.1:6379&gt; <br>[root@atguigu myRedis]# redis-cli<br>127.0.0.1:6379&gt; ping<br>PONG<br>127.0.0.1:6379&gt; ping<br>Could not connect to Redis at 127.0.0.1:6379: Connection refused<br>not connected&gt; <br>[root@atguigu myRedis]# redis-cli<br>127.0.0.1:6379&gt; ping<br>PONG<br>127.0.0.1:6379&gt; <br>127.0.0.1:6379&gt; shutdown<br>not connected&gt; <br>[root@atguigu myRedis]# redis-server redis.conf <br>[root@atguigu myRedis]# redis-cli shutdown<br>[root@atguigu myRedis]# redis-server redis.conf <br>[root@atguigu myRedis]# redis-cli<br>127.0.0.1:6379&gt; set a a<br>OK<br>127.0.0.1:6379&gt; get a<br>&quot;a&quot;<br>127.0.0.1:6379&gt; select 1<br>OK<br>127.0.0.1:6379[1]&gt; get a<br>(nil)<br>127.0.0.1:6379[1]&gt; select 0<br>OK<br>127.0.0.1:6379&gt; get a<br>&quot;a&quot;<br>127.0.0.1:6379&gt; keys *<br>1) &quot;a&quot;<br>127.0.0.1:6379&gt; exists a<br>(integer) 1<br>127.0.0.1:6379&gt; exists aa<br>(integer) 0<br>127.0.0.1:6379&gt; type a<br>string<br>127.0.0.1:6379&gt; del a<br>(integer) 1<br>127.0.0.1:6379&gt; keys *<br>(empty list or set)<br>127.0.0.1:6379&gt; set a a<br>OK<br>127.0.0.1:6379&gt; expire a 10<br>(integer) 1<br>127.0.0.1:6379&gt; ttl a<br>(integer) -2<br>127.0.0.1:6379&gt; expire a 10<br>(integer) 0<br>127.0.0.1:6379&gt; ttl a<br>(integer) -2<br>127.0.0.1:6379&gt; keys *<br>(empty list or set)<br>127.0.0.1:6379&gt; set b b<br>OK<br>127.0.0.1:6379&gt; expire b 10<br>(integer) 1<br>127.0.0.1:6379&gt; ttl b<br>(integer) 7<br>127.0.0.1:6379&gt; ttl b<br>(integer) 5<br>127.0.0.1:6379&gt; ttl b<br>(integer) 4<br>127.0.0.1:6379&gt; ttl b<br>(integer) 3<br>127.0.0.1:6379&gt; ttl b<br>(integer) 3<br>127.0.0.1:6379&gt; ttl b<br>(integer) 2<br>127.0.0.1:6379&gt; ttl b<br>(integer) 2<br>127.0.0.1:6379&gt; ttl b<br>(integer) 1<br>127.0.0.1:6379&gt; ttl b<br>(integer) -2<br>127.0.0.1:6379&gt; dbsize<br>(integer) 0<br>127.0.0.1:6379&gt; set a a<br>OK<br>127.0.0.1:6379&gt; dbsize<br>(integer) 1<br>127.0.0.1:6379&gt; flushdb<br>OK<br>127.0.0.1:6379&gt; keys *<br>(empty list or set)<br>127.0.0.1:6379&gt; set k1 v1<br>OK<br>127.0.0.1:6379&gt; get k1<br>&quot;v1&quot;<br>127.0.0.1:6379&gt; append k1 234<br>(integer) 5<br>127.0.0.1:6379&gt; get k1<br>&quot;v1234&quot;<br>127.0.0.1:6379&gt; strlen k1<br>(integer) 5<br>127.0.0.1:6379&gt; setnx k1 abc<br>(integer) 0<br>127.0.0.1:6379&gt; get k1<br>&quot;v1234&quot;<br>127.0.0.1:6379&gt; setnx k2 v2<br>(integer) 1<br><br><span class="hljs-section">ok</span><br><span class="hljs-section">----------------------------------------------------------------------</span><br>127.0.0.1:6379&gt; get k2<br>&quot;v2&quot;<br>127.0.0.1:6379&gt; incr k1<br>(error) ERR value is not an integer or out of range<br>127.0.0.1:6379&gt; set k3 12<br>OK<br>127.0.0.1:6379&gt; incr k3<br>(integer) 13<br>127.0.0.1:6379&gt; decr k3<br>(integer) 12<br>127.0.0.1:6379&gt; incrby k3 10<br>(integer) 22<br>127.0.0.1:6379&gt; decrby k3 20<br>(integer) 2<br>127.0.0.1:6379&gt; mset k4 v4 k5 v5<br>OK<br>127.0.0.1:6379&gt; keys *<br>1) &quot;k1&quot;<br>2) &quot;k5&quot;<br>3) &quot;k2&quot;<br>4) &quot;k3&quot;<br>5) &quot;k4&quot;<br>127.0.0.1:6379&gt; mget k1 k2 k3 <br>1) &quot;v1234&quot;<br>2) &quot;v2&quot;<br>3) &quot;2&quot;<br>127.0.0.1:6379&gt; mgetll<br>(error) ERR unknown command <span class="hljs-emphasis">&#x27;mgetll&#x27;</span><br>127.0.0.1:6379&gt; msetnx k1 v1 k6 v6<br>(integer) 0<br>127.0.0.1:6379&gt; msetnx k6 v6 k7 v7<br>(integer) 1<br>127.0.0.1:6379&gt; keys *<br>1) &quot;k1&quot;<br>2) &quot;k5&quot;<br>3) &quot;k7&quot;<br>4) &quot;k2&quot;<br>5) &quot;k3&quot;<br>6) &quot;k4&quot;<br>7) &quot;k6&quot;<br>127.0.0.1:6379&gt; getrange k1 0 2<br>&quot;v12&quot;<br>127.0.0.1:6379&gt; setrange k1 2 abc<br>(integer) 5<br>127.0.0.1:6379&gt; get k1<br>&quot;v1abc&quot;<br>127.0.0.1:6379&gt; setex a 10 a<br>OK<br>127.0.0.1:6379&gt; ttl a<br>(integer) 3<br>127.0.0.1:6379&gt; ttl a<br>(integer) -2<br>127.0.0.1:6379&gt; keys *<br>1) &quot;k1&quot;<br>2) &quot;k5&quot;<br>3) &quot;k7&quot;<br>4) &quot;k2&quot;<br>5) &quot;k3&quot;<br>6) &quot;k4&quot;<br>7) &quot;k6&quot;<br>127.0.0.1:6379&gt; getset k1 v1<br>&quot;v1abc&quot;<br>127.0.0.1:6379&gt; flushall<br>OK<br>127.0.0.1:6379&gt; lpush testList a b c d e<br>(integer) 5<br>127.0.0.1:6379&gt; rpush testList 1 2 3 4 5<br>(integer) 10<br>127.0.0.1:6379&gt; rpop testList<br>&quot;5&quot;<br>127.0.0.1:6379&gt; lpop testList<br>&quot;e&quot;<br>127.0.0.1:6379&gt; rpush testListTwo x y z<br>(integer) 3<br>127.0.0.1:6379&gt; rpoplpush testList testListTwo<br>&quot;4&quot;<br>127.0.0.1:6379&gt; lrange testList 0 -1<br>1) &quot;d&quot;<br>2) &quot;c&quot;<br>3) &quot;b&quot;<br>4) &quot;a&quot;<br>5) &quot;1&quot;<br>6) &quot;2&quot;<br>7) &quot;3&quot;<br>127.0.0.1:6379&gt; lrange testListTwo 0 -1<br>1) &quot;4&quot;<br>2) &quot;x&quot;<br>3) &quot;y&quot;<br>4) &quot;z&quot;<br>127.0.0.1:6379&gt; lindex testList -1<br>&quot;3&quot;<br>127.0.0.1:6379&gt; llen testList<br>(integer) 7<br>127.0.0.1:6379&gt; linsert testList before 1 xyz<br>(integer) 8<br>127.0.0.1:6379&gt; lrange testList 0 -1<br>1) &quot;d&quot;<br>2) &quot;c&quot;<br>3) &quot;b&quot;<br>4) &quot;a&quot;<br>5) &quot;xyz&quot;<br>6) &quot;1&quot;<br>7) &quot;2&quot;<br>8) &quot;3&quot;<br>127.0.0.1:6379&gt; lpush testList 1 2 3<br>(integer) 11<br>127.0.0.1:6379&gt; lrange testList 0 -1<br><span class="hljs-code"> 1) &quot;3&quot;</span><br><span class="hljs-code"> 2) &quot;2&quot;</span><br><span class="hljs-code"> 3) &quot;1&quot;</span><br><span class="hljs-code"> 4) &quot;d&quot;</span><br><span class="hljs-code"> 5) &quot;c&quot;</span><br><span class="hljs-code"> 6) &quot;b&quot;</span><br><span class="hljs-code"> 7) &quot;a&quot;</span><br><span class="hljs-code"> 8) &quot;xyz&quot;</span><br><span class="hljs-code"> 9) &quot;1&quot;</span><br>10) &quot;2&quot;<br>11) &quot;3&quot;<br>127.0.0.1:6379&gt; lrem testList 1 3<br>(integer) 1<br>127.0.0.1:6379&gt; lrange testList 0 -1<br><span class="hljs-code"> 1) &quot;2&quot;</span><br><span class="hljs-code"> 2) &quot;1&quot;</span><br><span class="hljs-code"> 3) &quot;d&quot;</span><br><span class="hljs-code"> 4) &quot;c&quot;</span><br><span class="hljs-code"> 5) &quot;b&quot;</span><br><span class="hljs-code"> 6) &quot;a&quot;</span><br><span class="hljs-code"> 7) &quot;xyz&quot;</span><br><span class="hljs-code"> 8) &quot;1&quot;</span><br><span class="hljs-code"> 9) &quot;2&quot;</span><br>10) &quot;3&quot;<br>127.0.0.1:6379&gt; lrem testList -1 2<br>(integer) 1<br>127.0.0.1:6379&gt; lrange testList 0 -1<br>1) &quot;2&quot;<br>2) &quot;1&quot;<br>3) &quot;d&quot;<br>4) &quot;c&quot;<br>5) &quot;b&quot;<br>6) &quot;a&quot;<br>7) &quot;xyz&quot;<br>8) &quot;1&quot;<br>9) &quot;3&quot;<br>127.0.0.1:6379&gt; lrem testList 0 1<br>(integer) 2<br>127.0.0.1:6379&gt; lrange testList 0 -01<br>(error) ERR value is not an integer or out of range<br>127.0.0.1:6379&gt; lrange testList 0 -1<br>1) &quot;2&quot;<br>2) &quot;d&quot;<br>3) &quot;c&quot;<br>4) &quot;b&quot;<br>5) &quot;a&quot;<br>6) &quot;xyz&quot;<br>7) &quot;3&quot;<br>127.0.0.1:6379&gt; flushdb<br>OK<br>127.0.0.1:6379&gt; sadd testSet1 a b c d e 1 2 3<br>(integer) 8<br>127.0.0.1:6379&gt; SMEMBERS testSet1<br>1) &quot;d&quot;<br>2) &quot;c&quot;<br>3) &quot;e&quot;<br>4) &quot;3&quot;<br>5) &quot;2&quot;<br>6) &quot;b&quot;<br>7) &quot;1&quot;<br>8) &quot;a&quot;<br>127.0.0.1:6379&gt; sismember testSet x<br>(integer) 0<br>127.0.0.1:6379&gt; scard testSet1<br>(integer) 8<br>127.0.0.1:6379&gt; srem testSet1 a 1<br>(integer) 2<br>127.0.0.1:6379&gt; sismember testSet x<br>(integer) 0<br>127.0.0.1:6379&gt; SMEMBERS testSet1<br>1) &quot;c&quot;<br>2) &quot;e&quot;<br>3) &quot;3&quot;<br>4) &quot;2&quot;<br>5) &quot;b&quot;<br>6) &quot;d&quot;<br>127.0.0.1:6379&gt; spop testSet 1<br>(empty list or set)<br>127.0.0.1:6379&gt; spop testSet1<br>&quot;b&quot;<br>127.0.0.1:6379&gt; srandmember testSet1 3<br>1) &quot;3&quot;<br>2) &quot;2&quot;<br>3) &quot;d&quot;<br>127.0.0.1:6379&gt; SMEMBERS testSet1<br>1) &quot;c&quot;<br>2) &quot;e&quot;<br>3) &quot;3&quot;<br>4) &quot;2&quot;<br>5) &quot;d&quot;<br>127.0.0.1:6379&gt; sadd testSet1 1 2 3 4 5<br>(integer) 3<br>127.0.0.1:6379&gt; sadd testSet2 a b c d e x y z<br>(integer) 8<br>127.0.0.1:6379&gt; sinter testSet1 testSet2<br>1) &quot;c&quot;<br>2) &quot;e&quot;<br>3) &quot;d&quot;<br>127.0.0.1:6379&gt; sunion testSet1 testSet2<br><span class="hljs-code"> 1) &quot;e&quot;</span><br><span class="hljs-code"> 2) &quot;c&quot;</span><br><span class="hljs-code"> 3) &quot;b&quot;</span><br><span class="hljs-code"> 4) &quot;2&quot;</span><br><span class="hljs-code"> 5) &quot;1&quot;</span><br><span class="hljs-code"> 6) &quot;4&quot;</span><br><span class="hljs-code"> 7) &quot;x&quot;</span><br><span class="hljs-code"> 8) &quot;y&quot;</span><br><span class="hljs-code"> 9) &quot;5&quot;</span><br>10) &quot;z&quot;<br>11) &quot;3&quot;<br>12) &quot;a&quot;<br>13) &quot;d&quot;<br>127.0.0.1:6379&gt; sdiff testSet1 testSet2<br>1) &quot;1&quot;<br>2) &quot;2&quot;<br>3) &quot;3&quot;<br>4) &quot;4&quot;<br>5) &quot;5&quot;<br>127.0.0.1:6379&gt; sdiff testSet2 testSet1<br>1) &quot;z&quot;<br>2) &quot;b&quot;<br>3) &quot;a&quot;<br>4) &quot;y&quot;<br>5) &quot;x&quot;<br>127.0.0.1:6379&gt; hset userInfo user:1010:uid 1010<br>(integer) 1<br>127.0.0.1:6379&gt; hmset userInfo user:1010:username admin user:1010:password 123456<br>OK<br>127.0.0.1:6379&gt; hget userInfo user:1010:username<br>&quot;admin&quot;<br>127.0.0.1:6379&gt; hexists userInfo user:1010:uid<br>(integer) 1<br>127.0.0.1:6379&gt; hkeys userInfo<br>1) &quot;user:1010:uid&quot;<br>2) &quot;user:1010:username&quot;<br>3) &quot;user:1010:password&quot;<br>127.0.0.1:6379&gt; hvals userInfo<br>1) &quot;1010&quot;<br>2) &quot;admin&quot;<br>3) &quot;123456&quot;<br>127.0.0.1:6379&gt; hgetall userInfo<br>1) &quot;user:1010:uid&quot;<br>2) &quot;1010&quot;<br>3) &quot;user:1010:username&quot;<br>4) &quot;admin&quot;<br>5) &quot;user:1010:password&quot;<br>6) &quot;123456&quot;<br>127.0.0.1:6379&gt; hset userInfo user:1010:age 25<br>(integer) 1<br>127.0.0.1:6379&gt; hincrby userInfo user:1010:age 10<br>(integer) 35<br>127.0.0.1:6379&gt; hincrby userInfo user:1010:age -10<br>(integer) 25<br>127.0.0.1:6379&gt; hsetnx userInfo user:1010:age 25<br>(integer) 0<br>127.0.0.1:6379&gt; hsetnx userInfo user:1010:sex 男<br>(integer) 1<br>127.0.0.1:6379&gt; hgetall userInfo<br><span class="hljs-code"> 1) &quot;user:1010:uid&quot;</span><br><span class="hljs-code"> 2) &quot;1010&quot;</span><br><span class="hljs-code"> 3) &quot;user:1010:username&quot;</span><br><span class="hljs-code"> 4) &quot;admin&quot;</span><br><span class="hljs-code"> 5) &quot;user:1010:password&quot;</span><br><span class="hljs-code"> 6) &quot;123456&quot;</span><br><span class="hljs-code"> 7) &quot;user:1010:age&quot;</span><br><span class="hljs-code"> 8) &quot;25&quot;</span><br><span class="hljs-code"> 9) &quot;user:1010:sex&quot;</span><br>10) &quot;\xe7\x94\xb7&quot;<br>127.0.0.1:6379&gt; shutdown<br>not connected&gt; <br>[root@atguigu myRedis]# redis-server redis.conf -auth<br><br><span class="hljs-bullet">*** </span>FATAL CONFIG FILE ERROR <span class="hljs-strong">***</span><br>Reading the configuration file, at line 1054<br>&gt;&gt;&gt; <span class="hljs-emphasis">&#x27;&quot;-auth&quot;&#x27;</span><br>Bad directive or wrong number of arguments<br>[root@atguigu myRedis]# redis-server -auth  redis.conf<br>11658:C 29 Jun 15:28:30.199 # Fatal error, can&#x27;t open config file <span class="hljs-emphasis">&#x27;-auth&#x27;</span><br>[root@atguigu myRedis]# redis-server redis.conf <br>[root@atguigu myRedis]# redis-cli --raw<br>127.0.0.1:6379&gt; hgetall userInfo<br>user:1010:uid<br>1010<br>user:1010:username<br>admin<br>user:1010:password<br>123456<br>user:1010:age<br>25<br>user:1010:sex<br>男<br>127.0.0.1:6379&gt; <br>[root@atguigu myRedis]# redis-cli<br>127.0.0.1:6379&gt; hgetall userInfo<br><span class="hljs-code"> 1) &quot;user:1010:uid&quot;</span><br><span class="hljs-code"> 2) &quot;1010&quot;</span><br><span class="hljs-code"> 3) &quot;user:1010:username&quot;</span><br><span class="hljs-code"> 4) &quot;admin&quot;</span><br><span class="hljs-code"> 5) &quot;user:1010:password&quot;</span><br><span class="hljs-code"> 6) &quot;123456&quot;</span><br><span class="hljs-code"> 7) &quot;user:1010:age&quot;</span><br><span class="hljs-code"> 8) &quot;25&quot;</span><br><span class="hljs-code"> 9) &quot;user:1010:sex&quot;</span><br>10) &quot;\xe7\x94\xb7&quot;<br>127.0.0.1:6379&gt; flushall<br>OK<br>127.0.0.1:6379&gt; zadd testzSet 100 a 20 b 1 x 500 abc<br>(integer) 4<br>127.0.0.1:6379&gt; zrange testzSet 0 -1<br>1) &quot;x&quot;<br>2) &quot;b&quot;<br>3) &quot;a&quot;<br>4) &quot;abc&quot;<br>127.0.0.1:6379&gt; zadd testzSet 1000 x<br>(integer) 0<br>127.0.0.1:6379&gt; zrange testzSet 0 -1<br>1) &quot;b&quot;<br>2) &quot;a&quot;<br>3) &quot;abc&quot;<br>4) &quot;x&quot;<br>127.0.0.1:6379&gt; zadd testzSet 1000 xyz<br>(integer) 1<br>127.0.0.1:6379&gt; zrange testzSet 0 -1<br>1) &quot;b&quot;<br>2) &quot;a&quot;<br>3) &quot;abc&quot;<br>4) &quot;x&quot;<br>5) &quot;xyz&quot;<br>127.0.0.1:6379&gt; zrangebyscore testzSet 1 200<br>1) &quot;b&quot;<br>2) &quot;a&quot;<br>127.0.0.1:6379&gt; zrangebyscore testzSet 100 100<br>1) &quot;a&quot;<br>127.0.0.1:6379&gt; zrevrange testzSet 0 -1<br>1) &quot;xyz&quot;<br>2) &quot;x&quot;<br>3) &quot;abc&quot;<br>4) &quot;a&quot;<br>5) &quot;b&quot;<br>127.0.0.1:6379&gt; zincrby testzSet 100 b<br>&quot;120&quot;<br>127.0.0.1:6379&gt; zrevrange testzSet 0 -1<br>1) &quot;xyz&quot;<br>2) &quot;x&quot;<br>3) &quot;abc&quot;<br>4) &quot;b&quot;<br>5) &quot;a&quot;<br>127.0.0.1:6379&gt; zadd test 100000 Java 80000 python 50000 php 120000 C++ 20000 jQuey<br>(integer) 5<br>127.0.0.1:6379&gt; zrevrange test 0 -1<br>1) &quot;C++&quot;<br>2) &quot;Java&quot;<br>3) &quot;python&quot;<br>4) &quot;php&quot;<br>5) &quot;jQuey&quot;<br>127.0.0.1:6379&gt; zrevrangebyscore test 100000 200000<br>(empty list or set)<br>127.0.0.1:6379&gt; zrevrangebyscore test 200000 100000<br>1) &quot;C++&quot;<br>2) &quot;Java&quot;<br>127.0.0.1:6379&gt; shutdown<br>not connected&gt; <br>[root@atguigu myRedis]# redis-server redis.conf <br>[root@atguigu myRedis]# redis-cli<br>127.0.0.1:6379&gt; keys *<br>1) &quot;a&quot;<br>2) &quot;test&quot;<br>3) &quot;testzSet&quot;<br>127.0.0.1:6379&gt; get a<br>&quot;a&quot;<br>127.0.0.1:6379&gt; get a<br>&quot;abc&quot;<br>127.0.0.1:6379&gt; flushall<br>OK<br>127.0.0.1:6379&gt; get Verify<span class="hljs-emphasis">_code:12345:code</span><br><span class="hljs-emphasis">&quot;216033&quot;</span><br><span class="hljs-emphasis">127.0.0.1:6379&gt; get Verify_code:12345:code</span><br><span class="hljs-emphasis">&quot;192310&quot;</span><br><span class="hljs-emphasis">127.0.0.1:6379&gt; get Verify_code:12345:code</span><br><span class="hljs-emphasis">&quot;823961&quot;</span><br><span class="hljs-emphasis">127.0.0.1:6379&gt; get Verify_code:12345:count</span><br><span class="hljs-emphasis">(nil)</span><br><span class="hljs-emphasis">127.0.0.1:6379&gt; get Verify_code::count</span><br><span class="hljs-emphasis">&quot;3&quot;</span><br><span class="hljs-emphasis">127.0.0.1:6379&gt; get Verify_</span>code:12345:code<br>&quot;194765&quot;<br>127.0.0.1:6379&gt; <br><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Database</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Centos-basic</title>
    <link href="/2020/10/24/DevOps/centos/centos/"/>
    <url>/2020/10/24/DevOps/centos/centos/</url>
    
    <content type="html"><![CDATA[<h2 id="基本命令使用"><a href="#基本命令使用" class="headerlink" title="基本命令使用"></a>基本命令使用</h2><p>bash版本号<br>bash -version </p><p>yum install   -y bash-completion bash-completion-extras<br>find / -name bash_completion.sh</p><h2 id="修改ssh端口"><a href="#修改ssh端口" class="headerlink" title="修改ssh端口"></a>修改ssh端口</h2><p>firewall-cmd –zone=public –add-port=9922/tcp –permanent<br>firewall-cmd –reload</p><p>三、向SELinux中添加修改的SSH端口</p><p>先安装SELinux的管理工具 semanage (如果已经安装了就直接到下一步) ：</p><p>[root@bogon ~]# yum provides semanage</p><p>安装运行semanage所需依赖工具包 policycoreutils-python：</p><p>[root@bogon ~]# yum -y install policycoreutils-python<br>查询当前 ssh 服务端口：</p><p>[root@bogon ~]# semanage port -l | grep ssh</p><p>向 SELinux 中添加 ssh 端口：</p><p>[root@bogon ~]# semanage port -a -t ssh_port_t -p tcp 22345</p><h2 id="安装-openjdk8"><a href="#安装-openjdk8" class="headerlink" title="安装 openjdk8"></a>安装 openjdk8</h2><p>yum -y list java*<br>yum install -y java-1.8.0-openjdk-devel.x86_64</p><p>##oracle jdk8</p><p>wget –header “Cookie: oraclelicense=accept-securebackup-cookie” <a href="http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.rpm">http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.rpm</a><br>ls /usr/java<br>sudo yum localinstall jdk-8u131-linux-x64.rpm</p><p>export JAVA_HOME=/usr/java/jdk1.8.0_131<br>export JRE_HOME=/usr/java/jdk1.8.0_131/jre<br>PATH=$PATH:$HOME/bin:$JAVA_HOME/bin</p><p>source .bash_profile</p><p>echo $JRE_HOME<br>echo $JAVA_HOME<br>echo $PATH</p><p>PATH=$PATH:$HOME/bin:$JAVA_HOME/bin</p><h2 id="scp拷贝文件"><a href="#scp拷贝文件" class="headerlink" title="scp拷贝文件"></a>scp拷贝文件</h2><h3 id="download文件"><a href="#download文件" class="headerlink" title="download文件"></a>download文件</h3><p>scp root@centos-server:/home/root/testA.txt ./testA.txt</p><h3 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h3><p> scp ./testB.txt root@centos-server:~/</p>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Centos</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>k8s 基本操作</title>
    <link href="/2020/10/19/docker/k8s/"/>
    <url>/2020/10/19/docker/k8s/</url>
    
    <content type="html"><![CDATA[<h2 id="k8s切换集群"><a href="#k8s切换集群" class="headerlink" title="k8s切换集群"></a>k8s切换集群</h2><figure class="highlight verilog"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs verilog">kubectl <span class="hljs-keyword">config</span> view<br>kubectl <span class="hljs-keyword">config</span> <span class="hljs-keyword">use</span>-<span class="hljs-keyword">context</span> lc-dev<br><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>K8s</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nexus使用</title>
    <link href="/2020/10/19/DevOps/nexus/"/>
    <url>/2020/10/19/DevOps/nexus/</url>
    
    <content type="html"><![CDATA[<h2 id="nexus3重置admin-密码"><a href="#nexus3重置admin-密码" class="headerlink" title="nexus3重置admin 密码"></a>nexus3重置admin 密码</h2><ol><li><p>停止服务</p></li><li><p>进入OrientDB控制台：java -jar /usr/local/lib/nexus-3.23.0-03-mac/nexus-3.23.0-03/lib/support/nexus-orient-console.jar</p></li><li><p> 在控制台执行：connect plocal:/usr/local/lib/nexus-3.23.0-03-mac/sonatype-work/nexus3/db/security admin admin</p></li><li><p>重置密码为admin123 ：</p></li></ol><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">update<span class="hljs-built_in"> user </span><span class="hljs-builtin-name">SET</span> <span class="hljs-attribute">password</span>=<span class="hljs-string">&quot;<span class="hljs-variable">$shiro1</span><span class="hljs-variable">$SHA</span>-512<span class="hljs-variable">$1024</span><span class="hljs-variable">$NE</span>+wqQq/TmjZMvfI7ENh/g==<span class="hljs-variable">$V4yPw8T64UQ6GfJfxYq2hLsVrBY8D1v</span>+bktfOxGdt4b/9BthpWPNUy/CBk6V9iA0nHpzYzJFWO8v/tZFtES8CA==&quot;</span> UPSERT WHERE <span class="hljs-attribute">id</span>=<span class="hljs-string">&quot;admin&quot;</span><br></code></pre></div></td></tr></table></figure><ol start="5"><li>重新启动服务</li></ol><p>参考文档：</p><p> <a href="https://support.sonatype.com/hc/en-us/articles/213467158-How-to-reset-a-forgotten-admin-password-in-Nexus-3-x">https://support.sonatype.com/hc/en-us/articles/213467158-How-to-reset-a-forgotten-admin-password-in-Nexus-3-x</a></p>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Nexus</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JDK配置</title>
    <link href="/2020/10/15/java/jdk/"/>
    <url>/2020/10/15/java/jdk/</url>
    
    <content type="html"><![CDATA[<h2 id="ubuntu-jdk配置"><a href="#ubuntu-jdk配置" class="headerlink" title="ubuntu jdk配置"></a>ubuntu jdk配置</h2><h2 id="try-catch-finally"><a href="#try-catch-finally" class="headerlink" title="try catch finally"></a>try catch finally</h2><p>finally 里的return会覆盖try内的返回值</p><h2 id="win10-jdk环境变量配置"><a href="#win10-jdk环境变量配置" class="headerlink" title="win10 jdk环境变量配置"></a>win10 jdk环境变量配置</h2><p>配置环境变量Path<br>双击Path，点击新建，添加“%JAVA_HOME%\bin”；</p><p>再次点击新建，添加“%JAVA_HOME%\jre\bin”。</p><p>这里要特别注意一下，win10环境变量值是一行一行的，不要直接点击新建，<br>添加“%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;”，<br>否则会出现“javac不是内部或外部命令”错误。</p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JDK</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java JUC</title>
    <link href="/2020/10/15/java/juc/"/>
    <url>/2020/10/15/java/juc/</url>
    
    <content type="html"><![CDATA[<h1 id="synchronized"><a href="#synchronized" class="headerlink" title="synchronized"></a>synchronized</h1><h2 id="synchronized-代码块中，如果发生异常，锁会被释放"><a href="#synchronized-代码块中，如果发生异常，锁会被释放" class="headerlink" title="synchronized 代码块中，如果发生异常，锁会被释放"></a>synchronized 代码块中，如果发生异常，锁会被释放</h2><p>在并发处理过程中，有异常要多加小心，不然可能发生数据不一致的情况。<br>比如，在一个web app处理过程中，多个servlet线程共同访问同一资源，这时如果异常处理不合适，<br>第一个线程抛出异常，其他线程就会进入同步代码区，有可能访问到异常产生的数据。<br>因此要非常小心处理同步业务员逻辑中的异常。</p><h2 id="synchronized-是可重入锁"><a href="#synchronized-是可重入锁" class="headerlink" title="synchronized 是可重入锁"></a>synchronized 是可重入锁</h2><ol><li><p> 即一个同步方法可以调用另外一个同步方法，一个线程已经拥有某个对象的锁，再次申请时仍然会得到该对象的锁</p></li><li><p>子类调用父类的同步方法，是否也是可重入的？<br>答：可重入的<br>这里猜测持有子类对象的锁时，同时就持有父类对象的锁<br>具体的原理猜测与对象的mark word有关</p></li></ol><h2 id="锁定某个对象o，如果o属性发生变化，不影响锁的使用"><a href="#锁定某个对象o，如果o属性发生变化，不影响锁的使用" class="headerlink" title="锁定某个对象o，如果o属性发生变化，不影响锁的使用"></a>锁定某个对象o，如果o属性发生变化，不影响锁的使用</h2><p>但是如果o变成另一个对象，则锁定的对象发生变化，<br>所以锁对象通常要设置为 final类型，保证引用不可以变</p><h2 id="不要使用字符串作为锁定对象"><a href="#不要使用字符串作为锁定对象" class="headerlink" title="不要使用字符串作为锁定对象"></a>不要使用字符串作为锁定对象</h2><p>可能其他类库也锁定了相同的字符串，造成死锁</p><h2 id="ReentrantLock"><a href="#ReentrantLock" class="headerlink" title="ReentrantLock"></a>ReentrantLock</h2><ul><li>抛出异常后，不会自动释放锁，需要在finally中手动释放锁</li><li> 可以tryLock,这样无法获取锁，或者指定时间内无法获取锁，线程可以决定是否继续等待</li><li>ReentrantLock 可以调用 lockInterruptibly方法，可以对线程interrupt方法做出响应 ， 在一个线程等待锁的过程中，可以被interrupt方法打断等待。</li><li>可以指定为公平锁</li></ul><h2 id="ReentrantLock-与-synchronized："><a href="#ReentrantLock-与-synchronized：" class="headerlink" title="ReentrantLock 与 synchronized："></a>ReentrantLock 与 synchronized：</h2><ol><li>ReentrantLock 可以完成 synchronized 的任何功能</li><li>但是ReentrantLock比 synchronized 更灵活，主要体现在如下几个方面</li><li>tryLock 非阻塞锁，可以设置等待时间</li><li>lockInterruptibly 可以中断等待</li><li>可以设置公平锁</li></ol>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JDK</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sonar配置</title>
    <link href="/2020/10/15/DevOps/sonar/"/>
    <url>/2020/10/15/DevOps/sonar/</url>
    
    <content type="html"><![CDATA[<figure class="highlight crmsh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs crmsh">docker run -d --name sonarqube -p <span class="hljs-number">9002</span>:<span class="hljs-number">9000</span>  sonarqube:lts<br><br><br>./gradlew sonarqube \<br>  -Dsonar.host.<span class="hljs-attr">url=</span>http://localhost:<span class="hljs-number">9002</span> \<br>  -Dsonar.<span class="hljs-attr">login=</span><span class="hljs-number">7</span>aa2aae8cf0ecd5d8a4965a9c121e5479621d79e<br>  <br>  sonarquebe:<br>  stage: check<br>  image: registry-mirrors.saybot.net/saybot/gitlab-sonar-scanner:<span class="hljs-number">3.2</span>.<span class="hljs-number">0</span>-<span class="hljs-number">6</span><br>  variables:<br>    SONAR_URL: https://k8s-sonar.dev.saybot.net<br>    SONAR_ANALYSIS_MODE: preview<br>    SONAR_DEBUG: <span class="hljs-number">1</span><br>    CI_BUILD_REF: $CI_COMMIT_SHA<br>    SONAR_GITLAB_PROJECT_ID: $CI_PROJECT_ID<br>    CI_BUILD_REF_NAME: $CI_COMMIT_REF_NAME<br>    SONAR_LANGUAGE: java<br>  script:<br>  - gitlab-sonar-scanner<br>  allow_failure: <span class="hljs-literal">true</span><br><br> <br>./gradlew sonarqube \<br>  -Dsonar.host.<span class="hljs-attr">url=</span>https://k8s-sonar.dev.saybot.net \<br>  -Dsonar.<span class="hljs-attr">login=</span><span class="hljs-number">659</span>c858901b63636ce9d59278a69d379c660f934 <br><br><br>  <br>  sonarqube &#123;<br>    properties &#123;<br>        <span class="hljs-keyword">property</span><span class="hljs-title"> </span><span class="hljs-string">&quot;sonar.projectName&quot;</span>, <span class="hljs-string">&quot;aot-class-report&quot;</span><br>        <span class="hljs-keyword">property</span><span class="hljs-title"> </span><span class="hljs-string">&quot;sonar.projectKey&quot;</span>, <span class="hljs-string">&quot;aot-class-report&quot;</span><br>        <span class="hljs-keyword">property</span><span class="hljs-title"> </span><span class="hljs-string">&quot;sonar.sources&quot;</span>, <span class="hljs-string">&quot;src/main/java&quot;</span><br>        <span class="hljs-keyword">property</span><span class="hljs-title"> </span><span class="hljs-string">&quot;sonar.tests&quot;</span>, <span class="hljs-string">&quot;src/test&quot;</span><br>        <span class="hljs-keyword">property</span><span class="hljs-title"> </span><span class="hljs-string">&quot;sonar.java.coveragePlugin&quot;</span>, <span class="hljs-string">&quot;jacoco&quot;</span><br>        <span class="hljs-keyword">property</span><span class="hljs-title"> </span><span class="hljs-string">&quot;sonar.test.inclusions&quot;</span>, <span class="hljs-string">&quot;**/*Test*/**&quot;</span><br>        <span class="hljs-keyword">property</span><span class="hljs-title"> </span><span class="hljs-string">&quot;sonar.junit.reportsPath&quot;</span>, <span class="hljs-string">&quot;build/test-results/test&quot;</span><br>        <span class="hljs-keyword">property</span><span class="hljs-title"> </span><span class="hljs-string">&quot;sonar.jacoco.reportPath&quot;</span>, <span class="hljs-string">&quot;build/jacoco/test.exec&quot;</span><br>        <span class="hljs-keyword">property</span><span class="hljs-title"> </span><span class="hljs-string">&quot;sonar.host.url&quot;</span>, <span class="hljs-string">&quot;http://localhost:9000&quot;</span><br>        <span class="hljs-keyword">property</span><span class="hljs-title"> </span><span class="hljs-string">&quot;sonar.coverage.exclusions&quot;</span>,<span class="hljs-string">&quot;**/*Constant*, **/com/alo7/aot/domain/**/*.java,**/com/alo7/aot/configration/*.java,&quot;</span> +<br>                <span class="hljs-string">&quot;**/com/alo7/aot/exceptions/**/*,**/com/alo7/aot/aws/**/*.java,**/com/alo7/aot/controller/JmsController.java,&quot;</span> +<br>                <span class="hljs-string">&quot;**/com/alo7/aot/model/aoc/*.java,**/SQLStatement.*,**/event/**&quot;</span><br>        <span class="hljs-keyword">property</span><span class="hljs-title"> </span><span class="hljs-string">&quot;sonar.exclusions&quot;</span>, <span class="hljs-string">&quot;**/*Constant*, **/com/alo7/aot/domain/**/*.java,**/com/alo7/aot/exceptions/**/*,&quot;</span> +<br>                <span class="hljs-string">&quot;**/com/alo7/aot/configration/CORSConfig.java,&quot;</span><br>    &#125;<br>&#125;<br><br><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>Sonar</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安装docker-ce</title>
    <link href="/2020/10/15/docker/ubuntu-docker/"/>
    <url>/2020/10/15/docker/ubuntu-docker/</url>
    
    <content type="html"><![CDATA[<h2 id="更新apt库-amp-安装使得允许apt通过HTTPS使用存储库"><a href="#更新apt库-amp-安装使得允许apt通过HTTPS使用存储库" class="headerlink" title="更新apt库 &amp; 安装使得允许apt通过HTTPS使用存储库"></a>更新apt库 &amp; 安装使得允许apt通过HTTPS使用存储库</h2><p><code>sudo apt update </code></p><p><code>sudo apt install apt-transport-https ca-certificates curl software-properties-common</code></p><h2 id="配置docker阿里源"><a href="#配置docker阿里源" class="headerlink" title="配置docker阿里源"></a>配置docker阿里源</h2><h3 id="添加阿里GPG秘钥"><a href="#添加阿里GPG秘钥" class="headerlink" title="添加阿里GPG秘钥"></a>添加阿里GPG秘钥</h3><p><code>curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add - </code></p><h3 id="添加阿里docker源"><a href="#添加阿里docker源" class="headerlink" title="添加阿里docker源"></a>添加阿里docker源</h3><p><code>sudo add-apt-repository &quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot; </code></p><h2 id="配置docker中科大源"><a href="#配置docker中科大源" class="headerlink" title="配置docker中科大源"></a>配置docker中科大源</h2><h3 id="添加ustcGPG秘钥"><a href="#添加ustcGPG秘钥" class="headerlink" title="添加ustcGPG秘钥"></a>添加ustcGPG秘钥</h3><p><code>curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add - </code></p><h3 id="添加ustcdocker源"><a href="#添加ustcdocker源" class="headerlink" title="添加ustcdocker源"></a>添加ustcdocker源</h3><p><code>sudo add-apt-repository &quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu \ $(lsb_release -cs) stable&quot; </code></p><h2 id="安装docker-ce"><a href="#安装docker-ce" class="headerlink" title="安装docker-ce"></a>安装docker-ce</h2><ul><li>sudo apt-get update</li><li>sudo apt install -y docker-ce</li><li>docker –version </li></ul>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>Ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Idea操作设置</title>
    <link href="/2020/10/15/tool/idea/"/>
    <url>/2020/10/15/tool/idea/</url>
    
    <content type="html"><![CDATA[<h2 id="idea快捷键"><a href="#idea快捷键" class="headerlink" title="idea快捷键"></a>idea快捷键</h2><table><thead><tr><th>操作</th><th>快捷键</th><th></th></tr></thead><tbody><tr><td>debug</td><td>command + f8</td><td></td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>Tools</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>dockerFile</title>
    <link href="/2020/10/15/docker/dockerFile/"/>
    <url>/2020/10/15/docker/dockerFile/</url>
    
    <content type="html"><![CDATA[<p>docker build -t shinedc09/eureka-server .<br>docker build -f Dockerfile -t springboot-hello-world-docker .<br>docker tag  springboot-hello-world-docker shinedc09/springboot-hello-world-docker</p><ol><li>Dockerfile 支持 Shell 类的行尾添加 \</li><li>行首# 进行注释</li><li>docker build -f Dockerfile -t springboot-hello-world-docker .  最后点是当前context</li></ol><p>Dockerfile<br>两行RUN 不同的容器</p><p>只复制文件用COPY<br>需要自动解压缩时候使用ADD</p>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL基本操作</title>
    <link href="/2020/10/15/database/MySQL-basic/"/>
    <url>/2020/10/15/database/MySQL-basic/</url>
    
    <content type="html"><![CDATA[<h2 id="MySQL数据类型"><a href="#MySQL数据类型" class="headerlink" title="MySQL数据类型"></a>MySQL数据类型</h2><p>数据库非负字段,尽量选用无符号整形存储<br>varchar(N) n是字符数<br>uft8 中一个汉字三个字节,英文一个字符两个字节<br>355个汉字==765字节</p><p>text blob智能使用前缀索引</p><p>不要使用枚举类型,MySQL中enum类型的orderby 效率低,</p><p>时间存储,timeStamp是个字节,datetime 8个字节</p><h2 id="Mysql-DML-语句"><a href="#Mysql-DML-语句" class="headerlink" title="Mysql DML 语句"></a>Mysql DML 语句</h2><p>ALTER TABLE YourTable<br>MODIFY COLUMN your_column<br>your_previous_column_definition COMMENT “Your new comment”</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql">use bank1;<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> account_info<br>    modify <span class="hljs-keyword">column</span> id <span class="hljs-type">bigint</span>(<span class="hljs-number">20</span>)  auto_increment comment <span class="hljs-string">&#x27;auto id&#x27;</span>;<br><br><span class="hljs-keyword">show</span> <span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> bank1.account_info;<br><br></code></pre></div></td></tr></table></figure><h2 id="mysql-date-精度"><a href="#mysql-date-精度" class="headerlink" title="mysql date 精度"></a>mysql date 精度</h2><figure class="highlight asciidoc"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs asciidoc"><br>create table t<span class="hljs-emphasis">_time</span><br><span class="hljs-emphasis">(</span><br><span class="hljs-emphasis">    id        int      not null primary key auto_increment,</span><br><span class="hljs-emphasis">    name      varchar(255) default null,</span><br><span class="hljs-emphasis">    change_date datetime(1)，</span><br><span class="hljs-emphasis">    create_</span>at datetime not null<br>);<br><br>insert into t_time (name, create_at,change_date)<br>VALUES (<span class="hljs-emphasis">&#x27;shine&#x27;</span>, <span class="hljs-emphasis">&#x27;2021-05-20 23:59:59.501&#x27;</span>,<span class="hljs-emphasis">&#x27;2021-05-20 23:59:59.501&#x27;</span>);<br><br>INSERT INTO robin_db.t_time (id, name, create_at, change_date) <br>VALUES (2, <span class="hljs-emphasis">&#x27;shine&#x27;</span>, <span class="hljs-emphasis">&#x27;2021-05-21 00:00:00&#x27;</span>, <span class="hljs-emphasis">&#x27;2021-05-20 23:59:59.5&#x27;</span>);<br><br><br>datetime默认精度是秒，毫秒会四舍五入<br><br>保留精度：<br>alter table t<span class="hljs-emphasis">_time</span><br><span class="hljs-emphasis">add column change_</span>date datetime(1);<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Database</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL运维</title>
    <link href="/2020/10/15/database/MySQL-DevOps/"/>
    <url>/2020/10/15/database/MySQL-DevOps/</url>
    
    <content type="html"><![CDATA[<h2 id="MySQL安装"><a href="#MySQL安装" class="headerlink" title="MySQL安装"></a>MySQL安装</h2><h3 id="Ubuntu安装MySQL5-7"><a href="#Ubuntu安装MySQL5-7" class="headerlink" title="Ubuntu安装MySQL5.7"></a>Ubuntu安装MySQL5.7</h3><figure class="highlight vim"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs vim">sudo apt <span class="hljs-keyword">update</span><br>sudo apt install wget -<span class="hljs-keyword">y</span><br>wget http<span class="hljs-variable">s:</span>//dev.mysql.<span class="hljs-keyword">com</span>/<span class="hljs-built_in">get</span>/mysql-apt-config_0.<span class="hljs-number">8.12</span>-<span class="hljs-number">1</span>_all.<span class="hljs-keyword">deb</span><br><br>sudo dpkg -i mysql-apt-config_0.<span class="hljs-number">8.12</span>-<span class="hljs-number">1</span>_all.<span class="hljs-keyword">deb</span><br>sudo apt-<span class="hljs-built_in">get</span> <span class="hljs-keyword">update</span><br><br>sudo apt-cache policy mysql-server<br>sudo apt install -<span class="hljs-keyword">f</span> mysql-client=<span class="hljs-number">5.7</span>.<span class="hljs-number">33</span>-<span class="hljs-number">1</span>ubuntu18.<span class="hljs-number">04</span> mysql-community-server=<span class="hljs-number">5.7</span>.<span class="hljs-number">33</span>-<span class="hljs-number">1</span>ubuntu18.<span class="hljs-number">04</span> mysql-server=<span class="hljs-number">5.7</span>.<span class="hljs-number">33</span>-<span class="hljs-number">1</span>ubuntu18.<span class="hljs-number">04</span><br><br>设置密码<br></code></pre></div></td></tr></table></figure><h2 id="MySQL添加用户"><a href="#MySQL添加用户" class="headerlink" title="MySQL添加用户"></a>MySQL添加用户</h2><blockquote><p>mysql -u root -p</p></blockquote><blockquote><p>create user ‘robin‘@’localhost’ identified by ‘abc123’;</p></blockquote><p>设置简单密码结果报错</p><blockquote><p> ERROR 1819 (HY000): Your password does not satisfy the current policy requirements</p></blockquote><p>这个是和validate_password_policy 有关</p><blockquote><p>select @@validate_password_policy;</p></blockquote><p>| Policy |    Tests Performed|<br>| —-|  :—-: | :—:|<br>|0 or LOW    | Length|<br>|1 or MEDIUM |    Length; numeric, lowercase/uppercase, and special characters|<br>|2 or STRONG    |Length; numeric, lowercase/uppercase, and special characters; dictionary file|</p><p>降低MySQL密码安全设置：</p><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros"><span class="hljs-builtin-name">set</span> global <span class="hljs-attribute">validate_password_policy</span>=0;<br><span class="hljs-builtin-name">set</span> global <span class="hljs-attribute">validate_password_mixed_case_count</span>=0;  <br><span class="hljs-builtin-name">set</span> global <span class="hljs-attribute">validate_password_mixed_case_count</span>=0;  <br><span class="hljs-builtin-name">set</span> global <span class="hljs-attribute">validate_password_number_count</span>=3;  <br><span class="hljs-builtin-name">set</span> global <span class="hljs-attribute">validate_password_length</span>=1;<br>flush privileges;   <br></code></pre></div></td></tr></table></figure><figure class="highlight gherkin"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs gherkin">mysql&gt; SHOW VARIABLES LIKE &#x27;validate_password%&#x27;;<br>+--------------------------------------+-------+<br>|<span class="hljs-string"> Variable_name                        </span>|<span class="hljs-string"> Value </span>|<br>+--------------------------------------+-------+<br>|<span class="hljs-string"> validate_password_check_user_name    </span>|<span class="hljs-string"> OFF   </span>|<br>|<span class="hljs-string"> validate_password_dictionary_file    </span>|<span class="hljs-string">       </span>|<br>|<span class="hljs-string"> validate_password_length             </span>|<span class="hljs-string"> 4     </span>|<br>|<span class="hljs-string"> validate_password_mixed_case_count   </span>|<span class="hljs-string"> 1     </span>|<br>|<span class="hljs-string"> validate_password_number_count       </span>|<span class="hljs-string"> 1     </span>|<br>|<span class="hljs-string"> validate_password_policy             </span>|<span class="hljs-string"> LOW   </span>|<br>|<span class="hljs-string"> validate_password_special_char_count </span>|<span class="hljs-string"> 1     </span>|<br>+--------------------------------------+-------+<br>7 rows in set (0.02 sec)<br></code></pre></div></td></tr></table></figure><blockquote><p>create user ‘ti‘@’localhost’ identified by ‘abc123’;<br><strong>success!!</strong></p></blockquote><blockquote><p>create  database ac_db；<br>grant all privileges on ac_db.* to ti@localhost identified by ‘abc123’;<br>grant select,insert,update,delete on ac_d_db.* to ai@localhost identified by ‘ai123’;</p></blockquote><h2 id="mysql-密码"><a href="#mysql-密码" class="headerlink" title="mysql 密码"></a>mysql 密码</h2><p>重置密码<br>update mysql.user set password=PASSWORD(‘root’) where User=’root’;</p><p>修改密码</p><p>step 1: SET PASSWORD = PASSWORD(‘your new password’);</p><p>step 2: ALTER USER ‘root‘@’localhost’ PASSWORD EXPIRE NEVER;</p><p>step 3: flush privileges;</p><h2 id="mysql-开启远程访问"><a href="#mysql-开启远程访问" class="headerlink" title="mysql 开启远程访问"></a>mysql 开启远程访问</h2><p>grant all on <em>.</em> to root@’%’  identified by ‘Z5zBSwErm70jHntP4ziEZMY’;</p><p>grant all privileges on robin_db.* to ‘robin‘@’%’ identified by ‘robinrobin’ with grant option;</p><p>sudo su  //进入root权限<br>/etc/mysql/mysql.cnf<br>或者再  /etc/mysql/mysql.conf.d/mysql.cnf</p><p>找到 bind-address = 127.0.0.1 在前面加上#注释掉，如下：<br>#bind-address = 127.0.0.1<br>然后在添加如下代码<br>skip-external-locking<br>skip-name-resolve</p><h2 id="MySQL重启"><a href="#MySQL重启" class="headerlink" title="MySQL重启"></a>MySQL重启</h2><p>sudo systemctl restart mysql.service<br>sudo service mysql start</p><h2 id="brew-mysql-配置位置"><a href="#brew-mysql-配置位置" class="headerlink" title="brew mysql 配置位置"></a>brew mysql 配置位置</h2><p>配置文件位置： /usr/local/etc/my.cnf</p><p>数据位置： /usr/local/var/mysql/</p><h3 id="mysql启动查找配置文件顺序"><a href="#mysql启动查找配置文件顺序" class="headerlink" title="mysql启动查找配置文件顺序"></a>mysql启动查找配置文件顺序</h3><ol><li>/etc/my.cnf</li><li>/etc/mysql/my.cnf</li><li>/usr/local/etc/my.cnf</li><li>~/.my.cnf</li></ol><h2 id="连接MySQL命令"><a href="#连接MySQL命令" class="headerlink" title="连接MySQL命令"></a>连接MySQL命令</h2><p><code>mysql -h $hostname -P $port -u $root -p</code></p><p>大写P指定端口<br>-proot直接跟密码，不能有空格</p><p>登录MySQL<br><code>mysql -uroot -p</code></p><p>外部登录docker MySQL<br><code>mysql -h 127.0.0.1 -P 10002 -u root -p</code></p><p><strong>用localhost不可以，需要ip</strong></p><p>##mac MySQL dump 导出配置</p><p>path:<br><code>/usr/local/Cellar/mysql@5.7/5.7.31/bin/mysqldump</code></p><p>仅仅导出表结构不包含数据 , 加上-d参数</p>]]></content>
    
    
    <categories>
      
      <category>Database</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker-hub</title>
    <link href="/2020/10/13/docker/docker-hub/"/>
    <url>/2020/10/13/docker/docker-hub/</url>
    
    <content type="html"><![CDATA[<h2 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h2><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">docker build -t yourusername/repository-name:version .<br>docker build -t registry.git.robin.net<span class="hljs-regexp">/java/i</span>nscriber<span class="hljs-regexp">/release/</span><span class="hljs-number">0.5</span>-api .<br>docker build -t shinedc09/eureka-server .<br><br></code></pre></div></td></tr></table></figure><h2 id="上传镜像到docker-hub"><a href="#上传镜像到docker-hub" class="headerlink" title="上传镜像到docker hub"></a>上传镜像到docker hub</h2><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> login --username=shinedc<span class="hljs-number">09</span><br><span class="hljs-attribute">docker</span> tag mynginx:v<span class="hljs-number">3</span> shinedc<span class="hljs-number">09</span>/mynginx:v<span class="hljs-number">3</span><br><span class="hljs-attribute">docker</span> push shinedc<span class="hljs-number">09</span>/mynginx:v<span class="hljs-number">3</span><br><br></code></pre></div></td></tr></table></figure><h2 id="docker登录私有仓库"><a href="#docker登录私有仓库" class="headerlink" title="docker登录私有仓库"></a>docker登录私有仓库</h2><figure class="highlight stylus"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs stylus">docker login registry<span class="hljs-selector-class">.git</span><span class="hljs-selector-class">.robin</span><span class="hljs-selector-class">.net</span><br>Username: robin<span class="hljs-selector-class">.li</span><br>Password: <br>Login Succeeded<br><br></code></pre></div></td></tr></table></figure><h2 id="使用token登录私有仓库"><a href="#使用token登录私有仓库" class="headerlink" title="使用token登录私有仓库"></a>使用token登录私有仓库</h2><figure class="highlight stylus"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs stylus">docker login registry<span class="hljs-selector-class">.example</span><span class="hljs-selector-class">.com</span> -u &lt;username&gt; -<span class="hljs-selector-tag">p</span> &lt;token&gt;<br>docker login registry<span class="hljs-selector-class">.git</span><span class="hljs-selector-class">.robin</span><span class="hljs-selector-class">.net</span> -u robin<span class="hljs-selector-class">.li</span> -<span class="hljs-selector-tag">p</span> TfHafafafafP<br></code></pre></div></td></tr></table></figure><h2 id="发送image到-docker-私有仓库"><a href="#发送image到-docker-私有仓库" class="headerlink" title="发送image到 docker 私有仓库"></a>发送image到 docker 私有仓库</h2><figure class="highlight gradle"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs gradle">docker build -t registry.example.com<span class="hljs-regexp">/group/</span><span class="hljs-keyword">project</span>/image .<br>docker <span class="hljs-keyword">push</span> registry.example.com<span class="hljs-regexp">/group/</span><span class="hljs-keyword">project</span>/image<br><br>docker build -t shinedc09/eureka-server .<br>docker <span class="hljs-keyword">push</span> shinedc09/eureka-server<br><br></code></pre></div></td></tr></table></figure><h2 id="docker-用阿里云镜像加速"><a href="#docker-用阿里云镜像加速" class="headerlink" title="docker 用阿里云镜像加速"></a>docker 用阿里云镜像加速</h2><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">sudo mkdir -p <span class="hljs-regexp">/etc/</span>docker<br>sudo tee <span class="hljs-regexp">/etc/</span>docker/daemon.json &lt;&lt;-<span class="hljs-string">&#x27;EOF&#x27;</span><br>&#123;<br>  <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<span class="hljs-string">&quot;https://z1tdmxpn.mirror.aliyuncs.com&quot;</span>]<br>&#125;<br>EOF<br>sudo systemctl daemon-reload<br>sudo systemctl restart docker<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker启动服务</title>
    <link href="/2020/10/13/docker/docker-middleware/"/>
    <url>/2020/10/13/docker/docker-middleware/</url>
    
    <content type="html"><![CDATA[<h2 id="eureka-服务"><a href="#eureka-服务" class="headerlink" title="eureka 服务"></a>eureka 服务</h2><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> run -p<span class="hljs-number">20001</span>:<span class="hljs-number">20001</span> -e <span class="hljs-string">&quot;SPRING_PROFILES_ACTIVE=server1&quot;</span> -it shinedc<span class="hljs-number">09</span>/eureka-server /bin/bash<br><span class="hljs-attribute">docker</span> run -p<span class="hljs-number">20002</span>:<span class="hljs-number">20002</span> -e <span class="hljs-string">&quot;SPRING_PROFILES_ACTIVE=server2&quot;</span> -it shinedc<span class="hljs-number">09</span>/eureka-server /bin/bash<br><br></code></pre></div></td></tr></table></figure><h2 id="docker-启动redis"><a href="#docker-启动redis" class="headerlink" title="docker 启动redis"></a>docker 启动redis</h2><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">docker run -p6378:<span class="hljs-number">6379</span> \<br>-v <span class="hljs-regexp">/Users/</span>robin<span class="hljs-regexp">/work/</span>docker<span class="hljs-regexp">/redis/</span>data:/data \<br>-v <span class="hljs-regexp">/Users/</span>robin<span class="hljs-regexp">/work/</span>docker<span class="hljs-regexp">/redis/</span>cnf<span class="hljs-regexp">/redis.conf:/u</span>sr<span class="hljs-regexp">/local/</span>etc<span class="hljs-regexp">/redis/</span>redis.conf --name redis -d redis redis-server \<br> <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/etc/</span>redis/redis.conf --appendonly yes<br><br></code></pre></div></td></tr></table></figure><h2 id="MySQL-服务"><a href="#MySQL-服务" class="headerlink" title="MySQL 服务"></a>MySQL 服务</h2><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">docker run -p <span class="hljs-number">3307</span>:<span class="hljs-number">3306</span> \<br>--name mysql \<br>-v <span class="hljs-regexp">/Users/</span>robin<span class="hljs-regexp">/work/</span>docker<span class="hljs-regexp">/mysql/</span>conf:<span class="hljs-regexp">/etc/my</span>sql \<br>-v <span class="hljs-regexp">/Users/</span>robin<span class="hljs-regexp">/work/</span>docker<span class="hljs-regexp">/mysql/</span>logs:<span class="hljs-regexp">/var/</span>logs/mysql \<br>-v <span class="hljs-regexp">/Users/</span>robin<span class="hljs-regexp">/work/</span>docker<span class="hljs-regexp">/mysql/</span>data:<span class="hljs-regexp">/var/</span>lib/mysql \<br>-e MYSQL_ROOT_PASSWORD=root \<br>-d mysql:<span class="hljs-number">5.7</span>.<span class="hljs-number">28</span><br><br>- docker exec -it mysql bash  <span class="hljs-regexp">//</span>进入该容器 <br>— mysql -uroot -p <span class="hljs-regexp">//</span>容器内登录MySQL<br></code></pre></div></td></tr></table></figure><h2 id="docker-sonar"><a href="#docker-sonar" class="headerlink" title="docker sonar"></a>docker sonar</h2><p>./gradlew sonarqube -x test <br>  -Dsonar.host.url=<a href="http://localhost:9000/">http://localhost:9000</a> <br>  -Dsonar.login=a017c06295e757dfec61864d4a2abcacf43862e4<br>token: root-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; a017c06295e757dfec61864d4a2abcacf43862e4</p><h3 id="docker-启动rockermq-console"><a href="#docker-启动rockermq-console" class="headerlink" title="docker 启动rockermq-console"></a>docker 启动rockermq-console</h3><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> run -e <span class="hljs-string">&quot;JAVA_OPTS=-Drocketmq.namesrv.addr=172.24.23.46:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false&quot;</span> -p <span class="hljs-number">9999</span>:<span class="hljs-number">8080</span> -t apacherocketmq/rocketmq-console:<span class="hljs-number">2</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span><br></code></pre></div></td></tr></table></figure><h2 id="ES服务"><a href="#ES服务" class="headerlink" title="ES服务"></a>ES服务</h2><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> pull docker.elastic.co/elasticsearch/elasticsearch:<span class="hljs-number">7</span>.<span class="hljs-number">9</span>.<span class="hljs-number">1</span><br><br><span class="hljs-attribute">docker</span> run -p <span class="hljs-number">9200</span>:<span class="hljs-number">9200</span> -p <span class="hljs-number">9300</span>:<span class="hljs-number">9300</span> -e <span class="hljs-string">&quot;discovery.type=single-node&quot;</span> docker.elastic.co/elasticsearch/elasticsearch:<span class="hljs-number">7</span>.<span class="hljs-number">9</span>.<span class="hljs-number">1</span><br></code></pre></div></td></tr></table></figure><h2 id="jrebel"><a href="#jrebel" class="headerlink" title="jrebel"></a>jrebel</h2><p>docker pull ilanyu/golang-reverseproxy<br>docker run -d -p 8888:8888 ilanyu/golang-reverseproxy</p><p><a href="http://127.0.0.1:8888/94de44cd-abc7-47ea-8453-82841b708b0d">http://127.0.0.1:8888/94de44cd-abc7-47ea-8453-82841b708b0d</a></p><h2 id="docker-prometheus"><a href="#docker-prometheus" class="headerlink" title="docker prometheus"></a>docker prometheus</h2><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">docker run -d --name=spring-prometheus -p <span class="hljs-number">9090</span>:<span class="hljs-number">9090</span> -v <span class="hljs-regexp">/Users/</span>ljy<span class="hljs-regexp">/docker/</span>prometheus<span class="hljs-regexp">/prometheus.yml:/</span>etc<span class="hljs-regexp">/prometheus/</span>prometheus.yml prom/prometheus<br></code></pre></div></td></tr></table></figure><p>dashboard</p><ol><li><p><a href="https://grafana.com/dashboards/4701">jvm</a></p></li><li><p><a href="https://grafana.com/dashboards/6756">springboot2</a></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker-command</title>
    <link href="/2020/10/13/docker/docker-baisc/"/>
    <url>/2020/10/13/docker/docker-baisc/</url>
    
    <content type="html"><![CDATA[<p>dockerhub  和本机显示镜像大小不一致<br>仓库是压缩包大小，网络传输的大小，本机的是解压缩后的大小</p><h2 id="容器7种状态"><a href="#容器7种状态" class="headerlink" title="容器7种状态"></a>容器7种状态</h2><ul><li>created（已创建）</li><li>restarting（重启中）</li><li>running（运行中）</li><li>removing（迁移中）</li><li>paused（暂停）</li><li>exited（停止）</li><li>dead（死亡）</li></ul><h2 id="docker命令参数"><a href="#docker命令参数" class="headerlink" title="docker命令参数"></a>docker命令参数</h2><figure class="highlight applescript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs applescript">docker <span class="hljs-built_in">run</span> -<span class="hljs-keyword">it</span> <span class="hljs-comment">--rm \ </span><br> ubuntu:<span class="hljs-number">16.04</span> \<br> bash<br>```     <br><br></code></pre></div></td></tr></table></figure><p>docker run -p20002:20002 -e “SPRING_PROFILES_ACTIVE=server2” -it shinedc09/eureka-server /bin/bash<br>docker run -e “SPRING_PROFILES_ACTIVE=beta”<br>docker run -p20001:20001 -e “SPRING_PROFILES_ACTIVE=server1” -d shinedc09/eureka-server<br>docker run -p20002:20002 -e “SPRING_PROFILES_ACTIVE=server2” -d shinedc09/eureka-server<br>docker run -p20003:20003 -e “SPRING_PROFILES_ACTIVE=server3” -d shinedc09/eureka-server</p><p>已有容器设置为自动重启<br>docker update –restart=always 容器ID(或者容器名)<br>创建容器时设置为自动重启<br>docker run -d –restart=always –name 设置容器名 使用的镜像</p><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown"><span class="hljs-section">### 命令参数说明</span><br><span class="hljs-bullet">1.</span> -it 两个参数，i:交互操作，t:终端<br><span class="hljs-bullet">2.</span> --rm 容器退出后就删除，排查故障用。节省空间<br><span class="hljs-bullet">3.</span> ubuntuL16.04 表示以此镜像为基础启动容器<br><span class="hljs-bullet">4.</span> bash 启动容器执行的程序<br><span class="hljs-bullet">5.</span> -d 守护态运行 <br><span class="hljs-bullet">6.</span> -e 环境变量<br><span class="hljs-bullet">7.</span> -P 随机端口<br><br><span class="hljs-section">## 根据条件过滤显示的内容</span><br><br><span class="hljs-section">### 根据标签过滤</span><br><br></code></pre></div></td></tr></table></figure><p>docker run -d –name=test-nginx –label color=blue nginx<br>docker ps –filter “label=color”<br>docker ps –filter “label=color=blue”</p><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk"><span class="hljs-comment">###  根据名称过滤</span><br><br>`<br>docker ps --filte<span class="hljs-string">r&quot;name=test-nginx&quot;</span><br>`<br><br><span class="hljs-comment">### 根据状态过滤</span><br></code></pre></div></td></tr></table></figure><p>docker ps -a –filter ‘exited=0’<br>docker ps –filter status=running<br>docker ps –filter status=paused</p><figure class="highlight clean"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs clean">## 根据镜像过滤<br><br>### 镜像名称<br></code></pre></div></td></tr></table></figure><p>docker ps –filter ancestor=nginx</p><figure class="highlight clean"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs clean">#### 镜像ID<br><br></code></pre></div></td></tr></table></figure><p>docker ps –filter ancestor=d0e008c6cf02</p><figure class="highlight clean"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs clean">### 根据启动顺序过滤<br><br></code></pre></div></td></tr></table></figure><p>$ docker ps -f before=9c3527ed70ce<br>$ docker ps -f since=6e63f6ff38b0</p><figure class="highlight clean"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs clean"><br>###容器交互<br><br>- 交互式进入镜像 -it<br>- 交互式启动 exec -it<br><br><br>## debug docker<br></code></pre></div></td></tr></table></figure><p>docker run -e “JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,address=5005,server=y,suspend=n” -p 10002:8080 -p 5005:5005 -t springio/gs-spring-boot-docker </p><figure class="highlight clean"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs clean"><br>## 虚悬镜像<br><br>![<span class="hljs-number">1.</span>jpg](./<span class="hljs-number">1.</span>jpg)<br><br>## 批量操作容器和镜像<br><br>批量停止容器<br></code></pre></div></td></tr></table></figure><p>docker container   stop   $(docker  container  ls   -a  -q)</p><figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs">删除所有虚悬镜像<br></code></pre></div></td></tr></table></figure><p>docker rmi $(docker images -f “dangling=true” -q)</p><figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs"><br>批量删除容器：<br></code></pre></div></td></tr></table></figure><p>docker   container   rm  $(docker  container  ls   -a  -q)</p><figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs">批量删除镜像：<br><br></code></pre></div></td></tr></table></figure><p>docker  image   rm   $(docker  image  ls   -a  -q)</p><figure class="highlight autohotkey"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs autohotkey"><br>批量删除部分容器或者镜像<br><br>将要删除的容器名写到一个文档，然后根据提供的名字，<br>再结合 `grep 、awk` 等命令，就可以获取准确的 ID 号了。<br>只要获取了ID号，就可以用上面的方法将它们删除。<br><br><br><br>## 容器镜像操作<br><br></code></pre></div></td></tr></table></figure><p>docker rim IMAGESID<br>docker rename containerID</p><div class="hljs code-wrapper"><pre><code>## centos rehl使用docker文件系统问题 loop-lvm</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux修改源</title>
    <link href="/2020/10/11/linux/source/"/>
    <url>/2020/10/11/linux/source/</url>
    
    <content type="html"><![CDATA[<h2 id="Ubuntu1804修改源"><a href="#Ubuntu1804修改源" class="headerlink" title="Ubuntu1804修改源"></a>Ubuntu1804修改源</h2><p>如何更改源</p><ol><li>在修改source.list前，备份源文件</li></ol><p><code>sudo cp /etc/apt/sources.list /etc/apt/sources.list.old </code><br>2.编辑源列表</p><p><code>sudo vim /etc/apt/sources.list</code></p><p>ustc源</p><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">deb https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu/</span> bionic main restricted universe multiverse<br>deb-src https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu/</span> bionic main restricted universe multiverse<br>deb https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu/</span> bionic-updates main restricted universe multiverse<br>deb-src https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu/</span> bionic-updates main restricted universe multiverse<br>deb https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu/</span> bionic-backports main restricted universe multiverse<br>deb-src https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu/</span> bionic-backports main restricted universe multiverse<br>deb https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu/</span> bionic-security main restricted universe multiverse<br>deb-src https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu/</span> bionic-security main restricted universe multiverse<br>deb https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu/</span> bionic-proposed main restricted universe multiverse<br>deb-src https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu/</span> bionic-proposed main restricted universe multiverse<br></code></pre></div></td></tr></table></figure><p>aliyun源</p><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">deb http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic main restricted universe multiverse<br>deb http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic-security main restricted universe multiverse<br>deb http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic-updates main restricted universe multiverse<br>deb http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic-proposed main restricted universe multiverse<br>deb http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic-backports main restricted universe multiverse<br>deb-src http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic main restricted universe multiverse<br>deb-src http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic-security main restricted universe multiverse<br>deb-src http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic-updates main restricted universe multiverse<br>deb-src http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic-proposed main restricted universe multiverse<br>deb-src http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic-backports main restricted universe multiverse<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tools</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>spring exception</title>
    <link href="/2020/10/10/java/spring-exception/"/>
    <url>/2020/10/10/java/spring-exception/</url>
    
    <content type="html"><![CDATA[<h2 id="SpringCloud-Eureka异常-ClassNotFoundException-javax-xml-bind-JAXBContext"><a href="#SpringCloud-Eureka异常-ClassNotFoundException-javax-xml-bind-JAXBContext" class="headerlink" title="SpringCloud Eureka异常-ClassNotFoundException: javax.xml.bind.JAXBContext"></a>SpringCloud Eureka异常-ClassNotFoundException: javax.xml.bind.JAXBContext</h2><p>jdk&gt;1.8造成</p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Exception</tag>
      
      <tag>Spring</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>curl参数</title>
    <link href="/2020/10/10/DevOps/curl/"/>
    <url>/2020/10/10/DevOps/curl/</url>
    
    <content type="html"><![CDATA[<h1 id="调试类"><a href="#调试类" class="headerlink" title="调试类"></a>调试类</h1><p>-v, –verbose                          输出信息<br>-q, –disable                          在第一个参数位置设置后 .curlrc 的设置直接失效，这个参数会影响到 -K, –config -A, –user-agent -e, –referer<br>-K, –config FILE                      指定配置文件<br>-L, –location                         跟踪重定向 (H)</p><h1 id="CLI显示设置"><a href="#CLI显示设置" class="headerlink" title="CLI显示设置"></a>CLI显示设置</h1><p>-s, –silent                           Silent模式。不输出任务内容<br>-S, –show-error                       显示错误. 在选项 -s 中，当 curl 出现错误时将显示<br>-f, –fail                             不显示 连接失败时HTTP错误信息<br>-i, –include                          显示 response的header (H/F)<br>-I, –head                             仅显示 响应文档头<br>-l, –list-only                        只列出FTP目录的名称 (F)<br>-#, –progress-bar                     以进度条 显示传输进度</p><h1 id="数据传输类"><a href="#数据传输类" class="headerlink" title="数据传输类"></a>数据传输类</h1><p>-X, –request [GET|POST|PUT|DELETE|…]  使用指定的 http method 例如 -X POST<br>-H, –header <header>                  设定 request里的header 例如 -H “Content-Type: application/json”<br>-e, –referer                          设定 referer (H)<br>-d, –data <data>                      设定 http body 默认使用 content-type application/x-www-form-urlencoded (H)<br>–data-raw <data>                  ASCII 编码 HTTP POST 数据 (H)<br>–data-binary <data>               binary 编码 HTTP POST 数据 (H)<br>–data-urlencode <data>            url 编码 HTTP POST 数据 (H)<br>-G, –get                              使用 HTTP GET 方法发送 -d 数据 (H)<br>-F, –form &lt;name=string&gt;               模拟 HTTP 表单数据提交 multipart POST (H)<br>–form-string &lt;name=string&gt;        模拟 HTTP 表单数据提交 (H)<br>-u, –user <a href="user:password">user:password</a>             使用帐户，密码 例如 admin:password<br>-b, –cookie <data>                    cookie 文件 (H)<br>-j, –junk-session-cookies             读取文件中但忽略会话cookie (H)<br>-A, –user-agent                       user-agent设置 (H)</p><h1 id="传输设置"><a href="#传输设置" class="headerlink" title="传输设置"></a>传输设置</h1><p>-C, –continue-at OFFSET               断点续转<br>-x, –proxy [PROTOCOL://]HOST[:PORT]   在指定的端口上使用代理<br>-U, –proxy-user USER[:PASSWORD]       代理用户名及密码</p><h1 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h1><p>-T, –upload-file <file>               上传文件<br>-a, –append                           添加要上传的文件 (F/SFTP)</p><h1 id="输出设置"><a href="#输出设置" class="headerlink" title="输出设置"></a>输出设置</h1><p>-o, –output <file>                    将输出写入文件，而非 stdout<br>-O, –remote-name                      将输出写入远程文件<br>-D, –dump-header <file>               将头信息写入指定的文件<br>-c, –cookie-jar <file>                操作结束后，要写入 Cookies 的文件位置</p>]]></content>
    
    
    <categories>
      
      <category>Devops</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Curl</tag>
      
      <tag>Tools</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git使用总结</title>
    <link href="/2020/10/10/DevOps/git/git-config/"/>
    <url>/2020/10/10/DevOps/git/git-config/</url>
    
    <content type="html"><![CDATA[<figure class="highlight ini"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ini"><br><br><span class="hljs-section">[user]</span><br><span class="hljs-attr">name</span> = robin-li<br><span class="hljs-section">[core]</span><br>    <span class="hljs-attr">pager</span> = less -FRS<br>    <span class="hljs-attr">editor</span> = vim<br>    <span class="hljs-attr">autocrlf</span> = <span class="hljs-literal">false</span><br>    <span class="hljs-attr">excludesfile</span> = ~/.gitignore-global<br>    <span class="hljs-comment"># Only use on Windows networks share : git config --local core.filemode false</span><br>    <span class="hljs-attr">filemode</span> = <span class="hljs-literal">false</span><br><span class="hljs-attr">attributesfile</span> = ~/.gitattributes<br><span class="hljs-attr">trustctime</span> = <span class="hljs-literal">false</span><br><br><span class="hljs-comment"># Treat spaces before tabs and all kinds of trailing whitespace as an error.</span><br><span class="hljs-comment"># [default] trailing-space: looks for spaces at the end of a line</span><br><span class="hljs-comment"># [default] space-before-tab: looks for spaces before tabs at the beginning of a line</span><br><span class="hljs-attr">whitespace</span> = space-before-tab,-indent-with-non-tab,trailing-space<br><br><span class="hljs-comment"># Make `git rebase` safer on macOS.</span><br><span class="hljs-comment"># More info: &lt;http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/&gt;</span><br><span class="hljs-attr">trustctime</span> = <span class="hljs-literal">false</span><br><br><span class="hljs-comment"># Prevent showing files whose names contain non-ASCII symbols as unversioned.</span><br><span class="hljs-comment"># http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html</span><br><span class="hljs-attr">precomposeunicode</span> = <span class="hljs-literal">false</span><br><br><span class="hljs-comment"># Speed up commands involving untracked files such as `git status`.</span><br><span class="hljs-comment"># https://git-scm.com/docs/git-update-index#_untracked_cache</span><br><span class="hljs-attr">untrackedCache</span> = <span class="hljs-literal">true</span><br>    <span class="hljs-attr">editor</span> = vim<br><span class="hljs-section">[color &quot;branch&quot;]</span><br>    <span class="hljs-attr">current</span> = yellow reverse<br>    <span class="hljs-attr">local</span> = yellow<br>    <span class="hljs-attr">remote</span> = green<br><span class="hljs-section">[color &quot;diff&quot;]</span><br>    <span class="hljs-attr">meta</span> = yellow bold<br>    <span class="hljs-attr">frag</span> = magenta bold<br>    <span class="hljs-attr">old</span> = red bold<br>    <span class="hljs-attr">new</span> = green bold<br><span class="hljs-section">[color &quot;status&quot;]</span><br>    <span class="hljs-attr">added</span> = yellow<br>    <span class="hljs-attr">changed</span> = green<br>    <span class="hljs-attr">untracked</span> = cyan<br><span class="hljs-section">[init]</span><br><span class="hljs-attr">defaultBranch</span> = main<br><span class="hljs-section">[commit]</span><br>    <span class="hljs-attr">template</span> = ~/.git-templates/git-commit<br><span class="hljs-section">[apply]</span><br>    <span class="hljs-attr">whitespace</span> = nowarn<br><br><span class="hljs-section">[status]</span><br>    <span class="hljs-attr">showuntrackedfiles</span> = all<br><br><span class="hljs-section">[push]</span><br>    <span class="hljs-attr">default</span> = current<br><span class="hljs-comment"># Make `git push` push relevant annotated tags when pushing branches out.</span><br><span class="hljs-attr">followTags</span> = <span class="hljs-literal">true</span><br><span class="hljs-section">[pull]</span><br><span class="hljs-attr">rebase</span> = <span class="hljs-literal">false</span><br><span class="hljs-section">[merge]</span><br><br><span class="hljs-comment"># Include summaries of merged commits in newly created merge commit messages</span><br><span class="hljs-attr">log</span> = <span class="hljs-literal">true</span><br><span class="hljs-section">[diff]</span><br>    <span class="hljs-attr">tool</span> = icdiff<br><span class="hljs-section">[help]</span><br><br><span class="hljs-comment"># Automatically correct and execute mistyped commands.</span><br><span class="hljs-attr">autocorrect</span> = <span class="hljs-number">1</span><br><span class="hljs-section">[difftool]</span><br>    <span class="hljs-attr">prompt</span> = <span class="hljs-literal">false</span><br><br><span class="hljs-section">[difftool &quot;icdiff&quot;]</span><br>    <span class="hljs-attr">cmd</span> = icdiff --highlight --line-numbers -L \<span class="hljs-string">&quot;$BASE\&quot; -L \&quot;$REMOTE\&quot; \&quot;$LOCAL\&quot; \&quot;$REMOTE\&quot;</span><br><span class="hljs-string"></span><br><span class="hljs-string">[alias]</span><br><span class="hljs-string">    # Show defined aliases</span><br><span class="hljs-string">    aliases = !&quot;</span>git config --get-regexp <span class="hljs-string">&#x27;alias.*&#x27;</span> | colrm <span class="hljs-number">1</span> <span class="hljs-number">6</span> | sed <span class="hljs-string">&#x27;s/[ ]/ = /&#x27;</span><span class="hljs-string">&quot;</span><br><span class="hljs-string"># Show the user email for the current repository</span><br><span class="hljs-string">    whoami = config user.email</span><br><span class="hljs-string">    b = branch</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br></code></pre></div></td></tr></table></figure><figure class="highlight asciidoc"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs asciidoc">alias mi=&quot;mvn clean install -Dmaven.test.skip=true&quot;<br>alias mvnc=<span class="hljs-emphasis">&#x27;mvn clean&#x27;</span><br>alias mvnci=<span class="hljs-emphasis">&#x27;mvn clean install&#x27;</span><br>alias mvncist=<span class="hljs-emphasis">&#x27;mvn clean install -DskipTests&#x27;</span><br>alias mvncisto=<span class="hljs-emphasis">&#x27;mvn clean install -DskipTests --offline&#x27;</span><br>alias mvnct=<span class="hljs-emphasis">&#x27;mvn clean test&#x27;</span><br>alias mvncv=<span class="hljs-emphasis">&#x27;mvn clean verify&#x27;</span><br>alias mvncvst=<span class="hljs-emphasis">&#x27;mvn clean verify -DskipTests&#x27;</span><br>alias mvndt=<span class="hljs-emphasis">&#x27;mvn dependency:tree&#x27;</span><br>alias mvnjetty=<span class="hljs-emphasis">&#x27;mvn jetty:run&#x27;</span><br>alias mvnsrc=<span class="hljs-emphasis">&#x27;mvn dependency:sources&#x27;</span><br>alias mvnt=<span class="hljs-emphasis">&#x27;mvn test&#x27;</span><br>alias mvntc=<span class="hljs-emphasis">&#x27;mvn tomcat:run&#x27;</span><br>alias mvntc7=<span class="hljs-emphasis">&#x27;mvn tomcat7:run&#x27;</span><br>alias mvn-updates=<span class="hljs-emphasis">&#x27;mvn versions:display-dependency-updates&#x27;</span><br><br><br>## alias git<br>alias grba=<span class="hljs-emphasis">&#x27;git rebase --abort&#x27;</span><br>alias grbc=<span class="hljs-emphasis">&#x27;git rebase --continue&#x27;</span><br>alias grbs=<span class="hljs-emphasis">&#x27;git rebase --skip&#x27;</span><br>alias grbi=<span class="hljs-emphasis">&#x27;git rebase -i&#x27;</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tools</tag>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git使用总结</title>
    <link href="/2020/10/10/DevOps/git/git/"/>
    <url>/2020/10/10/DevOps/git/git/</url>
    
    <content type="html"><![CDATA[<h2 id="git-commit相关"><a href="#git-commit相关" class="headerlink" title="git commit相关"></a>git commit相关</h2><h3 id="1-1-git-撤销提交"><a href="#1-1-git-撤销提交" class="headerlink" title="1.1 git 撤销提交"></a>1.1 git 撤销提交</h3><blockquote><p>git reset –hard 版本号</p></blockquote><p>注意使用 –hard 参数会抛弃当前工作区的修改<br>使用 –soft 参数的话会回退到之前的版本，但是保留当前工作区的修改，可以重新提交</p><h3 id="1-2-git-rebase"><a href="#1-2-git-rebase" class="headerlink" title="1.2 git rebase"></a>1.2 git rebase</h3><blockquote><p>git rebase -i &lt;要合并进来的分支名称&gt;</p></blockquote><p>适用场景</p><p>使用 git rebase -i HEAD~&lt;次数&gt;进入commit管理模式，根据提示有如下操作</p><p>合并多次提交 修改提交的commit message 删除某个commit，通过commit id</p><p>rebase中间态可执行的操作</p><blockquote><p>git add .</p></blockquote><blockquote><p>git rebase —continue</p></blockquote><blockquote><p>git rebase –abort</p></blockquote><h2 id="推送当前分支到远程仓库"><a href="#推送当前分支到远程仓库" class="headerlink" title="推送当前分支到远程仓库"></a>推送当前分支到远程仓库</h2><blockquote><p>git config –global push.default current</p></blockquote><h2 id="git-遇到异常"><a href="#git-遇到异常" class="headerlink" title="git 遇到异常"></a>git 遇到异常</h2><ol><li><p>移动git仓库位置后，无法读写</p><figure class="highlight jboss-cli"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs jboss-cli">chown -R youruser<span class="hljs-function">:yourgroup</span> <span class="hljs-string">.git/</span><br><br>sudo chown -R robin<span class="hljs-function">:root</span> <span class="hljs-string">.git/</span><br><br></code></pre></div></td></tr></table></figure></li><li><p>git ssh blocked</p><figure class="highlight pgsql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs pgsql">“ssh_exchange_identification: <span class="hljs-keyword">read</span>: <span class="hljs-keyword">Connection</span> <span class="hljs-keyword">reset</span> <span class="hljs-keyword">by</span> peer”<br></code></pre></div></td></tr></table></figure></li></ol><figure class="highlight pgsql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs pgsql">First ssh -T github@github.com would <span class="hljs-keyword">not</span> <span class="hljs-keyword">work</span><br>ssh -T git@github.com would<br><br>Second, <span class="hljs-keyword">if</span> you have <span class="hljs-keyword">any</span> proxy/firewall <span class="hljs-keyword">in</span> your office, outgoing ssh <span class="hljs-keyword">connection</span> should be blocked.<br><span class="hljs-keyword">Using</span> an https URL (<span class="hljs-keyword">with</span> credential caching) <span class="hljs-keyword">is</span> your best <span class="hljs-keyword">option</span>.<br><br></code></pre></div></td></tr></table></figure><h2 id="配置commit-message"><a href="#配置commit-message" class="headerlink" title="配置commit-message"></a>配置commit-message</h2><p>保存下边的文件到当前用户目录下</p><figure class="highlight plaintext"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs txt"># &lt;type&gt;: (If applied, this commit will...) &lt;subject&gt; (Max 50 char)<br># |&lt;----  Using a Maximum Of 50 Characters  ----&gt;|<br><br># Explain why this change is being made<br># |&lt;----   Try To Limit Each Line to a Maximum Of 72 Characters   ----&gt;|<br><br># Provide links or keys to any relevant tickets, articles or other resources<br># Example: Github issue #23<br><br># --- COMMIT END ---<br># Type can be <br>#    feat (new feature)<br>#    fix (bug fix)<br>#    docs (changes to documentation)<br>#    style (formatting, missing semi colons, etc; no code change)<br>#    refactor (refactoring production code)<br>#    test (adding missing tests, refactoring tests; no production code change)<br>#    build (change build file)<br>#    ci (change ci config)<br>#    revert（revert to some version)<br>#    perf (promote performance)<br><br># --------------------<br># Remember to<br>#    Separate subject from body with a blank line<br>#    Limit the subject line to 50 characters<br>#    Capitalize the subject line<br>#    Do not end the subject line with a period<br>#    Use the imperative mood in the subject line<br>#    Wrap the body at 72 characters<br>#    Use the body to explain what and why vs. how<br>#    Can use multiple lines with &quot;-&quot; for bullet points in body<br># --------------------<br># For more information about this template, check out<br># https://gist.github.com/adeekshith/cd4c95a064977cdc6c50<br></code></pre></div></td></tr></table></figure><p>执行命令：<br><code>git config --global commit.template ~/.git-commit-template.txt</code></p>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tools</tag>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mac配置</title>
    <link href="/2020/10/10/DevOps/mac/mac-osx/"/>
    <url>/2020/10/10/DevOps/mac/mac-osx/</url>
    
    <content type="html"><![CDATA[<p>Mac配置</p><h2 id="mac-关闭sip"><a href="#mac-关闭sip" class="headerlink" title="mac 关闭sip"></a>mac 关闭sip</h2><ol><li>重启 Mac，电脑重启开始时-按住 Command+R 键直到 苹果的logo 出现，进入 Recovery Mode</li><li>点击顶部的 Utilities【实用工具】 &gt; Terminal【终端】</li><li>在 Terminal【终端】 中输入 csrutil disable，之后回车，点击顶部Terminal【终端】，退出终端，点击关闭当前窗口，点击重启，重启 Mac</li></ol><h2 id="macOS-无法sudo创建文件夹返回Read-only-file-system问题"><a href="#macOS-无法sudo创建文件夹返回Read-only-file-system问题" class="headerlink" title="macOS 无法sudo创建文件夹返回Read-only file system问题"></a>macOS 无法sudo创建文件夹返回Read-only file system问题</h2><p>macOS catalina 无法创建日志目录返回<br>方法一挂载硬盘</p><p> <code>sudo mount -uw /</code></p><p>方法二 当前用户添加权限<br><code>sudo chown -R xxx /usr/logs/</code></p><h2 id="Mac-OS设置小于4位的简单密码"><a href="#Mac-OS设置小于4位的简单密码" class="headerlink" title="Mac OS设置小于4位的简单密码"></a>Mac OS设置小于4位的简单密码</h2><p>Mac OS在升级到10.14版本后，限制了必须设置复杂密码，不能少于4个字符…</p><h2 id="在terminal或者iTerm2输入"><a href="#在terminal或者iTerm2输入" class="headerlink" title="在terminal或者iTerm2输入"></a>在terminal或者iTerm2输入</h2><p>➜  ~ pwpolicy -clearaccountpolicies</p><h2 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h2><p>➜  ~ passwd</p><p>log:</p><figure class="highlight oxygene"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs oxygene">Last login: Fri Jun  <span class="hljs-number">5</span> <span class="hljs-number">09</span>:<span class="hljs-number">17</span>:<span class="hljs-number">44</span> <span class="hljs-keyword">on</span> ttys001<br>➜  ~ pwpolicy -clearaccountpolicies<br>Password <span class="hljs-keyword">for</span> authenticator robin:<br>Clearing <span class="hljs-keyword">global</span> account policies<br>➜  ~ passwd<br>Changing password <span class="hljs-keyword">for</span> robin.<br><span class="hljs-keyword">Old</span> Password:<br><span class="hljs-keyword">New</span> Password:<br>Retype <span class="hljs-keyword">New</span> Password:<br></code></pre></div></td></tr></table></figure><h2 id="mac-hostname"><a href="#mac-hostname" class="headerlink" title="mac hostname"></a>mac hostname</h2><p>sudo scutil –set HostName osx</p><h2 id="Macbook-磁盘写入量"><a href="#Macbook-磁盘写入量" class="headerlink" title="Macbook 磁盘写入量"></a>Macbook 磁盘写入量</h2><p>martmontools，命令行工具<br>brew install smartmontools<br>smartctl -s on disk0<br>smartctl -a disk0</p><h2 id="mac终端自动输入密码"><a href="#mac终端自动输入密码" class="headerlink" title="mac终端自动输入密码"></a>mac终端自动输入密码</h2><h2 id="mac"><a href="#mac" class="headerlink" title="mac"></a>mac</h2>]]></content>
    
    
    <categories>
      
      <category>Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL lock</title>
    <link href="/2020/09/30/database/MySQL%20lock/"/>
    <url>/2020/09/30/database/MySQL%20lock/</url>
    
    <content type="html"><![CDATA[<h2 id="mysql锁"><a href="#mysql锁" class="headerlink" title="mysql锁"></a>mysql锁</h2><h2 id="innodb行锁"><a href="#innodb行锁" class="headerlink" title="innodb行锁"></a>innodb行锁</h2><h3 id="两种行锁"><a href="#两种行锁" class="headerlink" title="两种行锁"></a>两种行锁</h3><p>共享锁（s）：又称读锁。允许一个事务去读一行，阻止其他事务获得相同数据集的排它锁。若事务1对记录A加上S锁，则事务1可以读取A但不能修改A，其他事务只能再对A加S锁，不能加X锁。这就保证了其他事务可以读A，但在事务1释放A上的S锁之前不能对A做任何的修改。<br>排他锁（X）：又称写锁。获取排他锁的事务可以更新数据，阻止其他事务获取相同数据集的共享读锁和排他写锁。若事务1对记录A加了X锁，则事务1可以读A，也可以修改A，其他事务不能对A加任何锁，知道事务1释放A上的锁。<br>注意：对于共享锁很好理解，就是多个事务只能读取数据不能修改数据。但是排他锁容易错误地理解成：如果一个事务锁住一行数据后，其他事务不能读物和修改该行数据。其实排他锁指的是一个事务对一条记录加上排他锁，其他事务不能对该记录加其他的锁。innoDb引擎默认的update,delete和insert会自动给涉及的数据加上排他锁，select语句默认不会加任何锁。所以加过排他锁的数据行在其他事务中不能修改数据，也不能通过for update加排他锁或者lock in share mode加共享锁，但是可以直接通过select…from…的方式查询数据，因为普通的查询没有任何锁机制。<br>事务可以通过以下语句显式给记录集加共享锁或排他锁：<br>共享锁（S）：SELECT * FROM table_name WHERE … LOCK IN SHARE MODE。<br>排他锁（X）：SELECT * FROM table_name WHERE … FOR UPDATE。</p><h3 id="行锁实现方式"><a href="#行锁实现方式" class="headerlink" title="行锁实现方式"></a>行锁实现方式</h3><p>InnoDb行锁是通过给索引上的索引项加锁来实现的，这一点mysql与oracle不同，oracle是通过在数据块中对相应数据行加锁来实现的。InnoDb的这种行锁实现特点意味着：只有通过索引条件检索数据，InnoDb才会使用行级锁，否则InnoDb将使用表锁。</p><blockquote><p>在不通过索引条件查询的时候，InnoDb使用的是表锁，而不是行锁。</p></blockquote><h2 id="间隙锁（Next-Key锁）"><a href="#间隙锁（Next-Key锁）" class="headerlink" title="间隙锁（Next-Key锁）"></a>间隙锁（Next-Key锁）</h2><p>当我们用范围条件而不是相等条件检索数据，并请求共享或排他锁时，InnoDb会给符合条件的已有数据记录的索引项加锁；对于键值在条件范围内但不存在的记录，叫做间隙（GAP），InnoDb也会对这个“间隙”加锁，这种机制就是所谓的“间隙锁”。<br>例如：假如emp表中有101条数据，id的值分别是1,2，…，100,101，下面的sql：</p><blockquote><p>select * from emp where id&gt;100 for update;</p></blockquote><p>是一个范围条件的检索，InnnoDb不仅会对符合条件的id=101的记录加锁，也会对id&gt;101的间隙加锁。<br>InnoDb使用间隙锁的目的，一方面是为了防止幻读，以满足隔离级别的要求。对于上面的例子，要是不使用间隙锁，如果其他事务插入了id&gt;100的任何记录，那么本事务如果再次执行上述语句，就会产生幻读。另一方面，是为了满足其恢复和复制的需要。<br>显然，在使用范围条件检索并锁定记录时，InnoDb这种锁机制会阻塞符合条件范围内键值的并发插入，这往往会造成严重的锁等待。因此，在实际应用开发中，尤其是并发插入比较多的应用，要尽量优化业务逻辑，尽量使用相等来访问和更新数据，尽量避免使用范围条件。</p><p>MySQL InnoDB支持三种行锁定方式：InnoDB的默认加锁方式是next-key 锁。</p><ol><li><p>行锁（Record Lock）:锁直接加在索引记录上面，锁住的是key。</p></li><li><p>间隙锁（Gap Lock）:锁定索引记录间隙，确保索引记录的间隙不变。间隙锁是针对事务隔离级别为可重复读或以上级别而已的。</p></li><li><p>Next-Key Lock ：行锁和间隙锁组合起来就叫Next-Key Lock。</p></li></ol><p>间隙锁在InnoDB的唯一作用就是防止其它事务的插入操作，以此来达到防止幻读的发生，所以间隙锁不分什么共享锁与排它锁。 默认情况下，InnoDB工作在Repeatable Read隔离级别下，并且以Next-Key Lock的方式对数据行进行加锁，这样可以有效防止幻读的发生。Next-Key Lock是行锁与间隙锁的组合，当对数据进行条件，范围检索时，对其范围内也许并存在的值进行加锁！当查询的索引含有唯一属性（唯一索引，主键索引）时，Innodb存储引擎会对next-key lock进行优化，将其降为record lock,即仅锁住索引本身，而不是范围！若是普通辅助索引，则会使用传统的next-key lock进行范围锁定！</p><p>要禁止间隙锁的话，可以把隔离级别降为Read Committed，或者开启参数innodb_locks_unsafe_for_binlog。</p><p>对于快照读来说，幻读的解决是依赖mvcc解决。而对于当前读则依赖于gap-loc</p><p>深层次的原理分析：<br>在MVCC并发控制中，读操作可以分成两类：快照读 (snapshot read)与当前读 (current read)。</p><p>快照读，读取的是记录的可见版本 (有可能是历史版本)，不用加锁。</p><p>当前读，读取的是记录的最新版本，并且，当前读返回的记录，都会加上锁，保证其他事务不会再并发修改这条记录。</p><p>在一个支持MVCC并发控制的系统中，哪些读操作是快照读？哪些操作又是当前读呢？以MySQL InnoDB为例：</p><p>快照读：简单的select操作，属于快照读，不加锁。(当然，也有例外，下面会分析)<br>select * from table where ?;<br>当前读：特殊的读操作，插入/更新/删除操作，属于当前读，需要加锁。<br>select * from table where ? lock in share mode;<br>select * from table where ? for update;<br>insert into table values (…);<br>update table set ? where ?;<br>delete from table where ?;</p><p>所有以上的语句，都属于当前读，读取记录的最新版本。并且，读取之后，还需要保证其他并发事务不能修改当前记录，对读取记录加锁。其中，除了第一条语句，对读取记录加S锁 (共享锁)外，其他的操作，都加的是X锁 (排它锁)。</p><p>MySQL/InnoDB定义的4种隔离级别：</p><p>Read Uncommited<br>可以读取未提交记录。此隔离级别，不会使用，忽略。</p><p>Read Committed (RC)<br>快照读忽略，本文不考虑。</p><p>针对当前读，RC隔离级别保证对读取到的记录加锁 (record lock)，存在幻读现象。</p><p>Repeatable Read (RR)<br>快照读忽略，本文不考虑。</p><p>针对当前读，RR隔离级别保证对读取到的记录加锁 (记录锁)，同时保证对读取的范围加锁，新的满足查询条件的记录不能够插入 (间隙锁)，不存在幻读现象。</p><p>Serializable<br>从MVCC并发控制退化为基于锁的并发控制。不区别快照读与当前读，所有的读操作均为当前读，读加读锁 (S锁)，写加写锁 (X锁)。</p><p>Serializable隔离级别下，读写冲突，因此并发度急剧下降，在MySQL/InnoDB下不建议使用。</p><h4 id="等待锁超时"><a href="#等待锁超时" class="headerlink" title="等待锁超时"></a>等待锁超时</h4><p><img src="/img/db/timeout.png"></p>]]></content>
    
    
    <categories>
      
      <category>Database</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL 报错总结</title>
    <link href="/2020/09/30/database/MySQL%E6%8A%A5%E9%94%99/"/>
    <url>/2020/09/30/database/MySQL%E6%8A%A5%E9%94%99/</url>
    
    <content type="html"><![CDATA[<h2 id="osx-MySQL启动错误之error-Found-option-without-preceding-group-in-config-file-Users-gukey-my-cnf-at-line-1"><a href="#osx-MySQL启动错误之error-Found-option-without-preceding-group-in-config-file-Users-gukey-my-cnf-at-line-1" class="headerlink" title="osx MySQL启动错误之error: Found option without preceding group in config file: /Users/gukey/.my.cnf at line: 1"></a>osx MySQL启动错误之error: Found option without preceding group in config file: /Users/gukey/.my.cnf at line: 1</h2><p>my.cnf文件错误，编码或者格式有误</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
    
    
    <categories>
      
      <category>Database</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
      <tag>Exception</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vagrant遇到的问题</title>
    <link href="/2020/09/30/DevOps/vagrant/"/>
    <url>/2020/09/30/DevOps/vagrant/</url>
    
    <content type="html"><![CDATA[<h2 id="vagrant启动失败"><a href="#vagrant启动失败" class="headerlink" title="vagrant启动失败"></a>vagrant启动失败</h2><figure class="highlight mel"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs mel">-&gt; : vagrant up<br>Bringing machine <span class="hljs-string">&#x27;default&#x27;</span> up with <span class="hljs-string">&#x27;virtualbox&#x27;</span> provider...<br>==&gt; <span class="hljs-keyword">default</span>: Importing base box <span class="hljs-string">&#x27;hashicorp/precise32&#x27;</span>...<br>Progress: <span class="hljs-number">90</span>%There was an <span class="hljs-keyword">error</span> <span class="hljs-keyword">while</span> executing <span class="hljs-string">`VBoxManage`</span>, a CLI used by Vagrant<br><span class="hljs-keyword">for</span> controlling VirtualBox. The command and stderr is shown below.<br><br>Command: [<span class="hljs-string">&quot;import&quot;</span>, <span class="hljs-string">&quot;/Users/lorenzomammi/.vagrant.d/boxes/hashicorp-VAGRANTSLASH-precise32/1.0.0/virtualbox/box.ovf&quot;</span>, <span class="hljs-string">&quot;--vsys&quot;</span>, <span class="hljs-string">&quot;0&quot;</span>, <span class="hljs-string">&quot;--vmname&quot;</span>, <span class="hljs-string">&quot;precise32_1576225284920_5564&quot;</span>, <span class="hljs-string">&quot;--vsys&quot;</span>, <span class="hljs-string">&quot;0&quot;</span>, <span class="hljs-string">&quot;--unit&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>, <span class="hljs-string">&quot;--disk&quot;</span>, <span class="hljs-string">&quot;/Users/sybercodesign/VirtualBox VMs/precise32_1576225284920_5564/precise32-disk001.vmdk&quot;</span>]<br><br>Stderr: <span class="hljs-number">0</span>%..<span class="hljs-number">.10</span>%..<span class="hljs-number">.20</span>%..<span class="hljs-number">.30</span>%..<span class="hljs-number">.40</span>%..<span class="hljs-number">.50</span>%..<span class="hljs-number">.60</span>%..<span class="hljs-number">.70</span>%..<span class="hljs-number">.80</span>%..<span class="hljs-number">.90</span>%..<span class="hljs-number">.100</span>%<br>Interpreting /Users/lorenzomammi/.vagrant.d/boxes/hashicorp-VAGRANTSLASH-precise32/<span class="hljs-number">1.0</span><span class="hljs-number">.0</span>/virtualbox/box.ovf...<br>OK.<br><span class="hljs-number">0</span>%...<br>Progress state: NS_ERROR_INVALID_ARG<br>VBoxManage: <span class="hljs-keyword">error</span>: Appliance import failed<br>VBoxManage: <span class="hljs-keyword">error</span>: Code NS_ERROR_INVALID_ARG (<span class="hljs-number">0x80070057</span>) - Invalid argument value (extended info not available)<br>VBoxManage: <span class="hljs-keyword">error</span>: Context: <span class="hljs-string">&quot;RTEXITCODE handleImportAppliance(HandlerArg *)&quot;</span> at line <span class="hljs-number">957</span> of <span class="hljs-keyword">file</span> VBoxManageAppliance.cpp<br></code></pre></div></td></tr></table></figure><p>解决方法： 修改virtualBox文件存放路径<br><a href="https://unix.stackexchange.com/questions/556868/error-trying-to-use-vagrant-up-with-virtual-box">stackchange</a></p>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vagrant</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSH配置</title>
    <link href="/2020/09/20/linux/linux-ssh/"/>
    <url>/2020/09/20/linux/linux-ssh/</url>
    
    <content type="html"><![CDATA[<h2 id="登录服务器"><a href="#登录服务器" class="headerlink" title="登录服务器"></a>登录服务器</h2><figure class="highlight asciidoc"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs asciidoc"><br>ssh user@server -p <span class="hljs-emphasis">&#x27;port&#x27;</span><br></code></pre></div></td></tr></table></figure><h2 id="ssh免密登录"><a href="#ssh免密登录" class="headerlink" title="ssh免密登录"></a>ssh免密登录</h2><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">生成公钥和私钥<br><br>ssh-keygen -t rsa （我直接Enter，简单粗暴）<br><br>导入本机公钥到认证文件<br>cat ~<span class="hljs-regexp">/.ssh/i</span>d_rsa.pub &gt;&gt; ~<span class="hljs-regexp">/.ssh/</span>authorized_keys<br><br>复制公钥到服务器<br>scp ~<span class="hljs-regexp">/.ssh/i</span>d_rsa.pub xxx@serverIp:<span class="hljs-regexp">/home/i</span>d_rsa.pub<br><br>导入公钥到认证文件<br>cat <span class="hljs-regexp">/home/i</span>d_rsa.pub &gt;&gt; ~<span class="hljs-regexp">/.ssh/</span>authorized_keys<br><br> 修改服务器权限配置<br>chmod <span class="hljs-number">700</span> ~/.ssh<br>chmod <span class="hljs-number">644</span> ~<span class="hljs-regexp">/.ssh/</span>authorized_keys<br><br>ssh hostname@server-ip<br></code></pre></div></td></tr></table></figure><p>将公钥拷贝到要免登陆的机器上</p><p><code>cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</code></p><p> 或者  </p><p><code>ssh-copy-id -i user@remotehost</code></p><h2 id="查看ssh"><a href="#查看ssh" class="headerlink" title="查看ssh"></a>查看ssh</h2><blockquote><p>ps -e | grep ssh</p></blockquote><h2 id="拷贝公钥到剪切板"><a href="#拷贝公钥到剪切板" class="headerlink" title="拷贝公钥到剪切板"></a>拷贝公钥到剪切板</h2><table><thead><tr><th>os</th><th>command</th><th></th></tr></thead><tbody><tr><td>windows</td><td>clip &lt; ~/.ssh/id_rsa.pub</td><td></td></tr><tr><td>osx</td><td>pbcopy &lt; ~/.ssh/id_rsa.pub</td><td></td></tr><tr><td>gnu-linux</td><td>xclip -sel clip &lt; ~/.ssh/id_rsa.pub</td><td>requires xclip</td></tr></tbody></table><h2 id="ssh-命令卡顿"><a href="#ssh-命令卡顿" class="headerlink" title="ssh 命令卡顿"></a>ssh 命令卡顿</h2><p>这是因为SSH服务启用了UseDNS特性所致</p><p>在vi编辑器中打开<code>/etc/ssh/sshd_config</code><br>找到以下字段：<br><code>UseDNS yes</code><br>修改为 <code>UseDNS no</code></p><p>重启ssh服务<br>service sshd restart</p>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网络配置</title>
    <link href="/2020/09/20/linux/linux-network/"/>
    <url>/2020/09/20/linux/linux-network/</url>
    
    <content type="html"><![CDATA[<h2 id="CentOS8-网络配置"><a href="#CentOS8-网络配置" class="headerlink" title="CentOS8 网络配置"></a>CentOS8 网络配置</h2><p>CentOS8 网卡默认没有启动，需要配置网络<br>。在<code>/etc/sysconfig/network-scripts</code>目录下存放着网卡的配置文件，文件名称是ifcfg- 网卡名称。</p><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><h4 id="DHCP自动获取ip"><a href="#DHCP自动获取ip" class="headerlink" title="DHCP自动获取ip"></a>DHCP自动获取ip</h4><figure class="highlight ini"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ini"><span class="hljs-comment"># 网卡配置文件按默认配置</span><br><span class="hljs-attr">TYPE</span>=Ethernet<br><span class="hljs-attr">PROXY_METHOD</span>=none<br><span class="hljs-attr">BROWSER_ONLY</span>=<span class="hljs-literal">no</span><br><span class="hljs-attr">BOOTPROTO</span>=dhcp<br><span class="hljs-attr">DEFROUTE</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attr">IPV4_FAILURE_FATAL</span>=<span class="hljs-literal">no</span><br><span class="hljs-attr">IPV6INIT</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attr">IPV6_AUTOCONF</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attr">IPV6_DEFROUTE</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attr">IPV6_FAILURE_FATAL</span>=<span class="hljs-literal">no</span><br><span class="hljs-attr">IPV6_ADDR_GEN_MODE</span>=stable-privacy<br><span class="hljs-attr">NAME</span>=ens33<br><span class="hljs-attr">UUID</span>=e4987998-a4ce-<span class="hljs-number">4</span>cef-<span class="hljs-number">96</span>f5-a3106a97f5bf<br><span class="hljs-attr">DEVICE</span>=ens33<br><span class="hljs-attr">ONBOOT</span>=<span class="hljs-literal">no</span>  <span class="hljs-comment">#如果使用dhcp分配ip的话，只需要将这里no改为yes，然后重启网络服务就行</span><br></code></pre></div></td></tr></table></figure><h4 id="静态设置ip"><a href="#静态设置ip" class="headerlink" title="静态设置ip"></a>静态设置ip</h4><p>TYPE=Ethernet<br>PROXY_METHOD=none<br>BROWSER_ONLY=no<br>BOOTPROTO=static   #将dhcp修改为stati表示使用静态ip<br>DEFROUTE=yes<br>IPADDR=192.168.31.230   #设置IP地址<br>NETMASK=255.255.255.0    #设置子网掩码<br>GATEWAY=192.168.31.1    #设置网关<br>DNS1=114.114.114.114     #设置dns<br>IPV4_FAILURE_FATAL=no<br>IPV6INIT=yes<br>IPV6_AUTOCONF=yes<br>IPV6_DEFROUTE=yes<br>IPV6_FAILURE_FATAL=no<br>IPV6_ADDR_GEN_MODE=stable-privacy<br>NAME=ens33<br>UUID=e4987998-a4ce-4cef-96f5-a3106a97f5bf<br>DEVICE=ens33<br>ONBOOT=no  #将no改为yes</p><h3 id="重启网络服务"><a href="#重启网络服务" class="headerlink" title="重启网络服务"></a>重启网络服务</h3><p><code>nmcli c reload</code></p><p><code>service network restart</code> </p><p>命令重启网络服务</p>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux文件查找</title>
    <link href="/2020/09/20/linux/linux-search/"/>
    <url>/2020/09/20/linux/linux-search/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Tmux配置</title>
    <link href="/2020/09/20/linux/tmux/"/>
    <url>/2020/09/20/linux/tmux/</url>
    
    <content type="html"><![CDATA[<h1 id="Tmux"><a href="#Tmux" class="headerlink" title="Tmux"></a>Tmux</h1><h2 id="create-session"><a href="#create-session" class="headerlink" title="create session"></a>create session</h2><blockquote><p>tmux new -s github</p></blockquote><p>Sometimes, you might want to simply create a session and don’t want to attach to it automatically.<br>Tmux new -s sesson-name -d</p><blockquote><p>tmux new -s session-name -d</p></blockquote><h2 id="attaching-to-a-tmux-session"><a href="#attaching-to-a-tmux-session" class="headerlink" title="attaching to a tmux session"></a>attaching to a tmux session</h2><figure class="highlight arduino"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs arduino">tmux attach<br><br>tmux a  <span class="hljs-comment">//只有一个session</span><br><br>tmux attach -t github<br><span class="hljs-keyword">or</span> shortly<br>tmux a -t github<br><br><br>#<span class="hljs-meta"># kill tmux sessions</span><br></code></pre></div></td></tr></table></figure><p>tmux kill-session -t github</p><p>关闭当前session<br>prefix + x   hit y</p><h2 id="shortcut"><a href="#shortcut" class="headerlink" title="shortcut"></a>shortcut</h2><figure class="highlight asciidoc"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs asciidoc">d  detach<br>t  big clock<br>?  list shortcuts<br>:  prompt<br><br><br>Windows (tabs)<br>c  create window<br>w  list windows<br>n  next window<br>p  previous window<br><span class="hljs-section">f  find window</span><br><span class="hljs-section">----------------------</span><br><span class="hljs-section">,  name window</span><br><span class="hljs-section">------------------------------</span><br>&amp;  kill window<br><br><br>%  vertical split<br>&quot;  horizontal split<br><br>o  swap panes<br>q  show pane numbers<br>x  kill pane<br>+  break pane into window (e.g. to select text by mouse to copy)<br><span class="hljs-bullet">-  </span>restore pane from window<br>⍽  space - toggle between layouts<br>&lt;prefix&gt; q (Show pane numbers, when the numbers show up type the key to goto that pane)<br>&lt;prefix&gt; &#123; (Move the current pane left)<br>&lt;prefix&gt; &#125; (Move the current pane right)<br>&lt;prefix&gt; z toggle pane zoom<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux文件目录规范</title>
    <link href="/2020/09/20/linux/linux-dir/"/>
    <url>/2020/09/20/linux/linux-dir/</url>
    
    <content type="html"><![CDATA[<figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">目录 含义 对应Windows路径<br><span class="hljs-regexp">/usr 系统路径 c:/</span>windows<br><span class="hljs-regexp">/usr/</span>lib  C:<span class="hljs-regexp">/Windows/</span>System32<br><span class="hljs-regexp">/usr/</span>local  C:<span class="hljs-regexp">/Progrem Files/</span><br><span class="hljs-regexp">/opt 用户级别程序目录，可选，直接删除不影响系统额外安装的可选应用程序包所放置的位置。一般情况下，我们可以把tomcat等都安装到这里。 D:/</span>Softwar<br><span class="hljs-regexp">/usr/</span>local/src 用户级的源码目录。  <br><span class="hljs-regexp">/usr/</span>src 系统级的源码目录  <br>  <br><span class="hljs-regexp">/usr/</span>bin 众多应用程序 <br><span class="hljs-regexp">/usr/</span>sbin 超级用户的一些管理程序 <br><span class="hljs-regexp">/usr/</span>doc Linux文档 <br><span class="hljs-regexp">/usr/i</span>nclude linux下开发和编译应用程序所需要的头文件  <br><span class="hljs-regexp">/usr/</span>lib 常用的动态链接库，软件包的配置文件 <br><span class="hljs-regexp">/usr/m</span>an 帮助文档 <br><span class="hljs-regexp">/usr/</span>local/bin 本地增加的命令 <br><span class="hljs-regexp">/usr/</span>local/lib 本地增加的库 <br>/proc 虚拟文件系统目录，是系统内存的映射。可直接访问这个目录来获取系统信息。 <br>/root  超级用户（系统管理员）的主目录（特权阶级^o^） <br>/sbin  存放二进制可执行文件，只有root才能访问。这里存放的是系统管理员使用的系统级别的管理命令和程序。如ifconfig等。 <br>/dev  用于存放设备文件。 <br>/mnt  系统管理员安装临时文件系统的安装点，系统提供这个目录是让用户临时挂载其他的文件系统。 <br>/boot  存放用于系统引导时使用的各种文件 <br>/lib  存放跟文件系统中的程序运行所需要的共享库及内核模块。共享库又叫动态链接共享库，作用类似windows里的.dll文件，存放了根文件系统程序运行所需的共享文件。 <br>/tmp  用于存放各种临时文件，是公用的临时文件存储点。 <br>/var  用于存放运行时需要改变数据的文件，也是某些大文件的溢出区，比方说各种服务的日志文件（系统启动日志等。）等。 <br>  <br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux基本管理</title>
    <link href="/2020/09/20/linux/linux-manage/"/>
    <url>/2020/09/20/linux/linux-manage/</url>
    
    <content type="html"><![CDATA[<h2 id="切换用户"><a href="#切换用户" class="headerlink" title="切换用户"></a>切换用户</h2><blockquote><p>su robin<br>su -i </p></blockquote><h2 id="ftp-服务器"><a href="#ftp-服务器" class="headerlink" title="ftp 服务器"></a>ftp 服务器</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight cmake"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs cmake"> sudo yum <span class="hljs-keyword">install</span> -y vsftpd<br><br>开机启动<br>chkconfig vsftpd <span class="hljs-keyword">on</span><br><br></code></pre></div></td></tr></table></figure><h3 id="新建用户"><a href="#新建用户" class="headerlink" title="新建用户"></a>新建用户</h3><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">创建一个新用户,名称为 ftpadmin:<br>sudo adduser ftpadmin<br>设置密码<br>sudo passwd ftpadmin<br>添加用户允许ftp用户<br>echo <span class="hljs-string">&quot;ftpadmin&quot;</span> | sudo tee -a <span class="hljs-regexp">/etc/</span>vsftpd/user_list<br><br>创建目录,设置权限<br>sudo mkdir -p <span class="hljs-regexp">/home/</span>ftpadmin<span class="hljs-regexp">/ftp/u</span>pload<br>sudo chmod <span class="hljs-number">550</span> <span class="hljs-regexp">/home/</span>ftpadmin/ftp<br>sudo chmod <span class="hljs-number">750</span> <span class="hljs-regexp">/home/</span>ftpadmin<span class="hljs-regexp">/ftp/u</span>pload<br>sudo chown -R ftpadmin: <span class="hljs-regexp">/home/</span>ftpadmin/ftp<br><br></code></pre></div></td></tr></table></figure><h3 id="禁止ftp用户shell登录"><a href="#禁止ftp用户shell登录" class="headerlink" title="禁止ftp用户shell登录"></a>禁止ftp用户shell登录</h3><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">运行下面的命令来创建 <span class="hljs-regexp">/bin/</span>ftponly shell 并且使它可执行：<br><br>echo -e <span class="hljs-string">&#x27;#!/bin/sh\necho &quot;This account is limited to FTP access only.&quot;&#x27;</span> | sudo tee -a  <span class="hljs-regexp">/bin/</span>ftponly<br><br>sudo chmod a+x <span class="hljs-regexp">/bin/</span>ftponly<br><br><br>将这个新的 shell 附加到<span class="hljs-regexp">/etc/</span>shells文件中：<br>echo <span class="hljs-string">&quot;/bin/ftponly&quot;</span> | sudo tee -a <span class="hljs-regexp">/etc/</span>shells<br><br>修改这个用户 shell 到<span class="hljs-regexp">/bin/</span>ftponly:<br>sudo usermod ftpadmin -s <span class="hljs-regexp">/bin/</span>ftponly<br><br><br><br><br><br></code></pre></div></td></tr></table></figure><h2 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h2>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux基础知识</title>
    <link href="/2020/09/20/linux/linux-basic/"/>
    <url>/2020/09/20/linux/linux-basic/</url>
    
    <content type="html"><![CDATA[<p><a href="https://commons.wikimedia.org/wiki/File:Linux_Distribution_Timeline.svg">linux distribution timeline</a></p><h2 id="现在流行的发行版"><a href="#现在流行的发行版" class="headerlink" title="现在流行的发行版"></a>现在流行的发行版</h2><ul><li>Debian<ul><li>ubuntu <ul><li>mint</li></ul></li></ul></li><li>RedHat<ul><li>RedHat Enterprise Linux: RHEL<ul><li>CentOS: Community Enterprise OS</li></ul></li><li>Fedora    </li></ul></li><li>Slackware<ul><li>S.u.S.E<ul><li>SLES</li><li>OpenSUSE</li></ul></li></ul></li><li>Gentoo</li><li>ArchLinux        </li></ul><h2 id="图形化或者终端模式启动"><a href="#图形化或者终端模式启动" class="headerlink" title="图形化或者终端模式启动"></a>图形化或者终端模式启动</h2><h3 id="终端无界面模式"><a href="#终端无界面模式" class="headerlink" title="终端无界面模式"></a>终端无界面模式</h3><ul><li>sudo systemctl set-default multi-user.target </li></ul><h3 id="图形界面"><a href="#图形界面" class="headerlink" title="图形界面"></a>图形界面</h3><ul><li>startx</li><li>sudo systemctl set-default graphical.target</li></ul><h2 id="ps-命令"><a href="#ps-命令" class="headerlink" title="ps 命令"></a>ps 命令</h2><p>ps -aux |grep ac-fc-srv<br>kill -9 21743</p><h2 id="ln"><a href="#ln" class="headerlink" title="ln"></a>ln</h2><p><code> ln -s a b</code><br>a 就是源文件，b是链接文件名,其作用是当进入b目录，<br>实际上是链接进入了a目录</p><p><code>rm -rf  b  注意不是rm -rf  b/</code></p><h2 id="linux-磁盘空间"><a href="#linux-磁盘空间" class="headerlink" title="linux 磁盘空间"></a>linux 磁盘空间</h2><figure class="highlight livecodeserver"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs livecodeserver">列出当前文件夹目录文件大小<br><br>du : disk usage?<br><br>`du -sh * `<br><br>- du – that’s <span class="hljs-keyword">the</span> <span class="hljs-keyword">command</span><br>- s – this <span class="hljs-keyword">switch</span> tells ‘du’ <span class="hljs-built_in">to</span> show you <span class="hljs-literal">one</span> <span class="hljs-built_in">line</span> per filename specified<br>- h – this <span class="hljs-keyword">switch</span> tells ‘du’ <span class="hljs-built_in">to</span> output <span class="hljs-keyword">the</span> sizes <span class="hljs-keyword">in</span> ‘human-readable’ <span class="hljs-built_in">format</span>. Because we’re <span class="hljs-keyword">using</span> <span class="hljs-literal">two</span> switches, s <span class="hljs-keyword">and</span> h, we can <span class="hljs-built_in">combine</span> them together <span class="hljs-keyword">with</span> ‘-sh‘<br>- * – this is <span class="hljs-keyword">the</span> filename target, <span class="hljs-keyword">and</span> <span class="hljs-keyword">the</span> asterisk means “everything that doesn’t <span class="hljs-built_in">start</span> <span class="hljs-keyword">with</span> <span class="hljs-keyword">a</span> period.” You could specify <span class="hljs-keyword">a</span> single <span class="hljs-built_in">directory</span> here <span class="hljs-keyword">or</span> <span class="hljs-keyword">a</span> list, <span class="hljs-keyword">or</span> individual <span class="hljs-built_in">files</span>. du will take them all.<br><br></code></pre></div></td></tr></table></figure><h2 id="sudo"><a href="#sudo" class="headerlink" title="sudo"></a>sudo</h2><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">sudo:某个用户能够以另外哪一个用户的身份通过哪些主机执行什么命令<br>   sudo COMMAND <br><br>sudo的配置文件:<br>   <span class="hljs-regexp">/etc/</span>sudoers<br>   可以使用visudo 打开编辑<br><br>在<span class="hljs-regexp">/etc/</span>sudoers里:<br>一个sudo条目:<br>who     which_host=(runas) [TAG:] command<br>                              |<br>                              |-------&gt; 例如：如果加了标签NOPASSWD:执行后面的命令就不用再输入密码了<br>who : 可以使用User_Alias<br>which_host : 可以使用Host_Alias<br>runas: 可以使用Runas_Alias<br>command: 可以使用Cmnd_Alias<br><br>注意:别名必须全部而且只能使用英文大写<br><br>User_Alias:<br>   用户的用户名<br>   组名,使用%引导<br>   还可以包含其他已经存在的用户名<br><br>Host_Alias:<br>   主机名<br>   IP<br>   网络地址<br>   其他主机别名<br><br>Runas_Alias:<br>   用户名<br>   %组名<br>   其他的Runas别名<br><br>Cmnd_Alias:<br>   命令路径<br>   目录（表示此目录内的所有命令）<br>   其他事先定义的命令别名<br><br>sudo 命令<br>   -l : 列出当前用户可以使用的所有sudo类命令<br>   -k : 让认证信息失效<br><br>使用sudo操作的日志都记录在<span class="hljs-regexp">/var/</span>log/secure 文件中<br><br><br>马哥Linux学习第二十八天（sudo，nsswitch&amp;pam，定制内核）<br><br>回顾：awk<br>文本格式化工具：print, printf<br><br>awk [OPTIONS] <span class="hljs-string">&#x27;program&#x27;</span> FILE...<br>awk -f <span class="hljs-regexp">/PATH/</span>FROM/AWK_SCRIPT [OPTIONS] FILE ...<br><br>program：<span class="hljs-string">&#x27;PATTERN&#123;ACTION&#125;&#x27;</span><br>PATTERN：empty、 <span class="hljs-regexp">/REGEXP/</span>、relational expression、<span class="hljs-keyword">BEGIN</span>/<span class="hljs-keyword">END</span>、line ranges<br><br>awk -F: <span class="hljs-string">&#x27;&#123;if($3%2==0) nets; print $1,$3&#125;&#x27;</span> <span class="hljs-regexp">/etc/</span>passwd<br><br>netstat -tan | awk <span class="hljs-string">&#x27;/^tcp/&#123;state[$NF]++&#125;END&#123;for(i in state) &#123;print i,state[i]&#125;&#125;&#x27;</span><br><br>博客作业：awk的应用<br><br>余下内容：sudo，pam，busybox，nsswitch<br><br>sudo：<br>su：switch user<br>su -l USERNAME<br><br>centos：切勿以root登录系统；如果期望执行管理操作，可以su至管理员；<br><br>sudo：<br><span class="hljs-number">1</span>、授权指定用户在指定主机上运行指定的管理命令；<br><span class="hljs-number">2</span>、详细记录用户基于sudo之行命令的相关日志信息；<br><span class="hljs-number">3</span>、“检票系统”：时效性认证：用户第一次执行sudo时会要求输入密码来验证用户身份，成功后用户会获得一个有固定存活时长的“令牌”；<span class="hljs-number">5</span>分钟；<br><br>如何实现sudo功能？<br>授权文件：<span class="hljs-regexp">/etc/</span>sudoers<br>注意：仅管理员拥有编辑权限；而且不建议使用编辑器编辑，有专用的编辑工具visudo；<br><br>帮助文档：<br>man visudo<br>man visudoers<br><br><span class="hljs-regexp">/etc/</span>sudoers：<br>包含的内容：别名定义、授权<br><br>授权：<br>WHOHOST=(WHOM)COMMAND<br><br>例如：<br>centos ALL=(root)<span class="hljs-regexp">/usr/</span>sbin/useradd<br><br>标签：PASSWD，NOPASSWD<br>WHO HOST=(WHOM) NOPASSWD: CMND1, CMND2 ...<br><br>PASSWD：标签后的所有命令在使用时都需要“检票”<br>NOPASSWD：表示标签后的所有命令在使用时都无需“检票”<br><br>例：<br>centos ALL=(root) NOPASSWD: <span class="hljs-regexp">/usr/</span>sbin<span class="hljs-regexp">/useradd, PASSWD: /</span>bin/chown<br><br>别名：<br>别名名称：必须使用全大写字符；<br>WHO：User_Alias<br>HOST：Host_Alias<br>WHOM：Runal_Alias<br>COMMAND：Cmnd_Alias<br><br>User_Alias：<br>User_Alias NAME = item1, item2, ...<br>item：<br>用户名：如centos<br>%组名：如netadmins，是为系统组；<br><span class="hljs-comment">#UID：如#500</span><br><span class="hljs-variable">$#GID</span>：如<span class="hljs-variable">$#501</span><br>User_Alias：如NETADMINS<br>例：<br>User_Alias  NETADMINS = centos, %netadmins, <span class="hljs-comment">#501</span><br>NETADMINS       ALL=(root)      <span class="hljs-regexp">/sbin/i</span>fconfig<br><br>注意：用户别名必须为全大写字母组成；<br><br>Hos_Alias：<br>Hos_Alias NAME = item1, item2, ...<br>ALL：所有主机<br>item：<br>hostname<br>ip<br>network<br>Host_Alias<br><br>例：<br>Host_Alias  MYNET = <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>,<span class="hljs-number">172.16</span>.<span class="hljs-number">0.0</span>/<span class="hljs-number">16</span><br>NETADMINS       MYNET=(root)    <span class="hljs-regexp">/sbin/i</span>fconfig<br><br>Runal_Alias：<br>Runal_Alias NAME = item1, item2, ...<br>ALL：所有用户<br><br>Cmnd_Alias：<br>Cmnd_Alias NAME = item1, item2, ...<br>item:<br>命令文件路径<br>目录（意味授权此目录下的所有命令）<br><span class="hljs-string">&quot;sudoedit&quot;</span>（编辑sudoers文件）<br>Cmnd_Alias<br><br>例：<br>Cmnd_Alias NETADMINCMNDS = <span class="hljs-regexp">/sbin/i</span>p, <span class="hljs-regexp">/use/</span>sbin<span class="hljs-regexp">/ss, /</span>sbin/ifconfig<br>NETADMINS       MYNET=(root)    NETADMINCMNDS<br><br>注意：开放给用户passwd权限时不要开放其可以更改root用户的密码，可以采用如下授权方式<br> <span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/passwd [A-Za-z]*, !/u</span>sr<span class="hljs-regexp">/bin/</span>passwd root<br><br>sudo su -<br><br>sudo命令：<br>被授权用户应该以sudo命令来运行被授权运行的命令；<br>sudo [OPTIONS] COMMAND<br><br>-l：查看当前用户可以执行的sudo命令；<br>-k：清除此前记忆的“令牌”；<br>-u USERNAME COMMAND：以指定用户运行COMMAND命令，<br><span class="hljs-comment"># sudo -u gentoo /sbin/ip addr list</span><br>可以在<span class="hljs-regexp">/var/</span>log/secure日志文件中产看相关记录<br><br>练习：<br>要求要验证授权成功：<br><span class="hljs-number">1</span>、授权centos用户可以运行fdisk命令完成磁盘管理，以及使用mkfs或mke2fs实现文件系统管理；<br><span class="hljs-comment"># visudo</span><br>centos  ALL(root) <span class="hljs-regexp">/sbin/</span>fdisk, <span class="hljs-regexp">/sbin/m</span>kfs, <span class="hljs-regexp">/sbin/m</span>ke2fs<br><br><span class="hljs-number">2</span>、授权gentoo用户可以运行逻辑卷管理的相关命令。<br><span class="hljs-comment"># visudo</span><br>Cmnd_Alias LVMMGT = <span class="hljs-regexp">/sbin/</span>pvcreate, <span class="hljs-regexp">/sbin/</span>pvdisplay. <span class="hljs-regexp">/sbin/</span>pvs, <span class="hljs-regexp">/sbin/</span>pvremove, <span class="hljs-regexp">/sbin/</span>pvmove, <span class="hljs-regexp">/sbin/</span>vgcreate, <span class="hljs-regexp">/sbin/</span>vgdisplay, <span class="hljs-regexp">/sbin/</span>vgs, <span class="hljs-regexp">/sbin/</span>vgremove, <span class="hljs-regexp">/sbin/</span>vgextend, <span class="hljs-regexp">/sbin/</span>vgreduce, <span class="hljs-regexp">/sbin/</span>lvcreate, <span class="hljs-regexp">/sbin/</span>lvdisplay, <span class="hljs-regexp">/sbin/</span>lvs, <span class="hljs-regexp">/sbin/</span>lvresize, <span class="hljs-regexp">/sbin/</span>lvextend, <span class="hljs-regexp">/sbin/</span>lvreduce, <span class="hljs-regexp">/sbin/</span>lvremove<br><br>gentoo ALL=(root) LVMMGT<br><br>nsswitch &amp;&amp; pam<br><br>nsswitch：network service switch<br>名称解析：<br>root, <span class="hljs-number">0</span><br>www.magedu.com, <span class="hljs-number">172.16</span>.<span class="hljs-number">100.6</span><br>http, <span class="hljs-number">80</span>/tcp<br><br>login, httpd：共享库<br><br>解析：查找数据库，以已经的内容为键，找到与之对应的另一种名称；<br>数据库：<br>接口不同：文本文件，关系型数据库，ldap<br>数据集不同：<span class="hljs-regexp">/etc/</span>hosts, <span class="hljs-regexp">/etc/</span>passwd<br><br>用户名：文本文件，nis数据库，ldap数据库，MySQL数据库<br><br>考量点：<br><span class="hljs-number">1</span>、有多种接口可选择，每种接口都需要专用驱动；<br>解决方案：提供多种驱动<br><span class="hljs-number">2</span>、即便为同一接口，而不同应用程序也可能会用到不同的数据集；<br>解决方案：在配置文件中定义不同应用程序的数据集<br><br>相关的库文件：<br><span class="hljs-comment"># ls -l /lib64/libnss* /usr/lib64/libnss*</span><br><br>libnss3.so, 及对应数据库接口的驱动；<br><br>nsswitch：<br>DATABASE：aliases, ethers, group, hosts, netgroup networks, passwd, protocols, rpm, services, shadow<br>上述DATABASE即为那些会用到解析库的应用；<br><br>解析库类型： files, dns, compat, dbm, hesiod, winbind, wins, nis, nisplus<br><br>nsswitch.conf<br>DATABASE：解析库类型<br>group：files<br>passwd：ldap [NOTFOUND=return] files<br>hosts：files dns<br><br>在解析库查询的返回值：<br>SUCCESS：service ok, found name<br>NOTFOUND：service ok, name not found<br>UNAVAL：service not avaliable<br>TRYAGAIN：temporay service failure<br><br>默认动作：在第一次遇到SUCCESS状态后，即return，否则，则contion<br><br>passwd：nis [NOTFOUND=return] files<br><br>libnss3.so  ---&gt; libnss_files.so --&gt; <span class="hljs-regexp">/etc/</span>passwd<br><br>数据库条目获取命令：<br>getent DATABASE [key]<br>例：getent passwd root<br>root:x:<span class="hljs-number">0</span>:<span class="hljs-number">0</span>:root:<span class="hljs-regexp">/root:/</span>bin/bash<br><br>pam：Pluggable Authentication Module<br><br>众多应用程序都需要用到认证机制时，认证功能可以由共享库来实现<br><br>模块文件：<span class="hljs-regexp">/lib64/</span>security<br><br>考量点：<br><span class="hljs-number">1</span>、密码存储在何处，pam就要能够于对应存储接口进行通信，如ldap、shadow等；<br><br><span class="hljs-number">2</span>、额外资源获取权限指派的模块，如pam_limits等；<br><br><span class="hljs-number">3</span>、通过配置文件为每种应用定义其需要用到的模块，包括驱动、授权机制等等；<br><br>配置文件：<br><span class="hljs-regexp">/etc/</span>pam.conf：主配置文件<br>Service type control module-path module-arguments<br><br><span class="hljs-regexp">/etc/</span>pam.d/*：拆分成每个应用专用的配置文件<br>type control module-path module-arguments<br><br>type：（功能），包括：auth， account, password, session<br>account；与账号管理相关的非认证功能<br>auth：认证和授权；<br>password：只有在用户修改密码时使用；<br>session：用户获取到服务之前或使用服务完成之后要进行一些附属性操作；<br><br>control：同一种功能的多个检查之间如何进行组合；<br>有两种实现机制：<br><span class="hljs-number">1</span>、使用一个关键词来定义；<br><span class="hljs-number">2</span>、使用一到多组“return value=action”<br><br>简单机制：<br>required：成功或失败后都会继续检查；<br>requisite：一票否决；<br>sufficient：一票通过；<br>optional：年三十的饺子－－－可有可无，不影响最终结果，参考意见，默认为ignore；<br><br>include：使用其它的配置文件中同样功能的相关定义来进行检查；<br><br>复杂机制：<br>[value1=acton1 value2=acton2]<br><br>value：指此项检查的返回值，其可能的取值有多种，如success等；<br>action：采取的操作，其可能的取值常用的有<span class="hljs-number">6</span>种，如ok,done,die,ignore,bad,reset;<br><br>module-path：模块路径<br>相对路径：<span class="hljs-regexp">/lib64/</span>security<br>绝对路径<br><br>module-arguments：模块参数<br><br>模块：<br>pam_unix.so<br>nullok：允许使用空密码<br>try_first_pass：提示用户输入密码之前，首先检查此前栈中已经得到的密码；<br><br>pam_env.so：通过配置文件来为用户设定或撤销环境变量；<br><span class="hljs-regexp">/etc/</span>security/pam_env.conf<br><br>pam_shells.so；检查用户使用的是否为合法shell<br><span class="hljs-regexp">/etc/</span>shells<br><br>pam_limits.so：资源限制<br><span class="hljs-regexp">/etc/</span>security/limits.conf<br><span class="hljs-regexp">/etc/</span>security<span class="hljs-regexp">/limits.d/</span>*<br><br>语法格式：<br>&lt;domain&gt; &lt;type&gt; &lt;item&gt; &lt;value&gt;<br><br>&lt;domain&gt;：资源限制应用于的对象<br>用户<br>@组名<br>*<br><br>&lt;type&gt;：<br>hard：不可超出的类型<br>soft：可以超出的类型<br>-：hard和soft都生效<br><br>&lt;item&gt;：限制的资源<br>nofile：所能够打开的最大文件数量；<br>nproc：所能够同时允许的最大进程数量；<br><br>练习：<br><span class="hljs-number">1</span>、基于pam_time.so模块，限制用户通过sshd服务远程登录只能在工作时间进行；<br>~]<span class="hljs-comment"># vim /etc/pam.d/sshd </span><br><span class="hljs-comment">#%PAM-1.0</span><br>auth       required     pam_sepermit.so<br>auth       include      password-auth<br>account    required     pam_nologin.so<br>account    required     pam_time.so<br>account    include      password-auth<br>password   include      password-auth<br><span class="hljs-comment"># pam_selinux.so close should be the first session rule</span><br>session    required     pam_selinux.so close<br>session    required     pam_loginuid.so<br><span class="hljs-comment"># pam_selinux.so open should only be followed by sessions to be executed in the user context</span><br>session    required     pam_selinux.so open env_params<br>session    required     pam_namespace.so<br>session    optional     pam_keyinit.so force revoke<br>session    include      password-auth<br><br>~]<span class="hljs-comment"># /etc/security/time.conf</span><br>sshd;*;root;Wk0900-<span class="hljs-number">1800</span><br><br><span class="hljs-number">2</span>、基于pam_listfile.so模块，定义仅某些用户，或某些组内的用户可登录系统。<br>]<span class="hljs-comment"># vim sshd </span><br><span class="hljs-comment">#%PAM-1.0</span><br>auth       required     pam_sepermit.so<br>auth       include      password-auth<br>account    required     pam_nologin.so<br>account    required     pam_listfile.so item=user sense=allow  file=<span class="hljs-regexp">/etc/u</span>ser_allow onerr=succeed<br>account    required     pam_time.so<br>account    include      password-auth<br>password   include      password-auth<br><span class="hljs-comment"># pam_selinux.so close should be the first session rule</span><br>session    required     pam_selinux.so close<br>session    required     pam_loginuid.so<br><span class="hljs-comment"># pam_selinux.so open should only be followed by sessions to be executed in the user context</span><br>session    required     pam_selinux.so open env_params<br>session    required     pam_namespace.so<br>session    optional     pam_keyinit.so force revoke<br>session    include      password-auth<br><br>~]<span class="hljs-comment"># vim /etc/user_allow</span><br>root<br><br>~]<span class="hljs-comment">#chmod 600 /etc/user_allow</span><br><br>http:<span class="hljs-regexp">//</span>blog.csdn.net<span class="hljs-regexp">/yueguanghaidao/</span>article<span class="hljs-regexp">/details/</span><span class="hljs-number">7292065</span><br><br>定制Linux内核和rootfs<br><br>Linux系统启动流程：<br><br>POST --&gt; BOIS（boot sequence）--&gt; bootloader（MBR）--&gt; kernel --&gt; <span class="hljs-regexp">/sbin/i</span>nit<br>设定默认运行级别<br>完成系统初始化<br>关闭对应级别下默认设定为关闭的服务，启动对应级别下默认设定为运行的服务<br>启动虚拟终端，打印登录提示<br>启动图形终端<br><br><br>CentOS：<br><span class="hljs-number">5</span>:SysV init<br><span class="hljs-number">6</span>：upstart<br><span class="hljs-number">7</span>：systemd<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL 性能优化</title>
    <link href="/2020/09/20/database/MySQL%E4%BC%98%E5%8C%96/"/>
    <url>/2020/09/20/database/MySQL%E4%BC%98%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h2 id="MySQL中In与Exists的区别"><a href="#MySQL中In与Exists的区别" class="headerlink" title="MySQL中In与Exists的区别"></a>MySQL中In与Exists的区别</h2><p>《高性能MySQL》书籍上对于in和exists的描述<br>书上说，MySQL会把in的查询语句改成exists再去执行（实际上我们在没有索引情况下，他们的执行过程确实是一致的）</p><p>在《MySQL技术内幕:SQL编程》这本书中说：确实有很多DBA认为EXISTS比IN的执行效率更高，可能是当时优化器还不是很稳定和足够优秀，但是目前绝大数的情况下，IN和EXISTS都具有相同的执行计划</p><h2 id="MySQL修改表结构"><a href="#MySQL修改表结构" class="headerlink" title="MySQL修改表结构"></a>MySQL修改表结构</h2><p>pt_online_change_schema</p><h2 id="MySQL主从同步"><a href="#MySQL主从同步" class="headerlink" title="MySQL主从同步"></a>MySQL主从同步</h2><p>主从丢失: 半同步复制<br>主库配置2. 主库配置sync_binlog=1，innodb_flush_log_at_trx_commit=1 不同步binlog到磁盘,每次事务flush到磁盘</p><p>主从延迟大<br>升级硬件,优化网络,调整slave参数,升级MySQL到5.7 并行复制binlog</p><p>##Sql执行慢</p><p>一个 SQL 执行的很慢，我们要分两种情况讨论：</p><p>1、大多数情况下很正常，偶尔很慢，则有如下原因</p><p>(1)、数据库在刷新脏页，例如 redo log 写满了需要同步到磁盘。</p><p>(2)、执行的时候，遇到锁，如表锁、行锁。</p><p>2、这条 SQL 语句一直执行的很慢，则有如下原因。</p><p>(1)、没有用上索引：例如该字段没有索引；由于对字段进行运算、函数操作导致无法用索引。</p><p>(2)、数据库选错了索引。</p>]]></content>
    
    
    <categories>
      
      <category>Database</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL 索引</title>
    <link href="/2020/09/20/database/MySQL%E7%B4%A2%E5%BC%95%E7%9B%B8%E5%85%B3/"/>
    <url>/2020/09/20/database/MySQL%E7%B4%A2%E5%BC%95%E7%9B%B8%E5%85%B3/</url>
    
    <content type="html"><![CDATA[<h3 id="索引数据结构"><a href="#索引数据结构" class="headerlink" title="索引数据结构"></a>索引数据结构</h3><p>索引结构：<br>二叉树、红黑树、hash、BTree、B+Tree 。</p><p>索引结构为了更快找到目标数据。</p><h2 id="二叉查找树"><a href="#二叉查找树" class="headerlink" title="二叉查找树"></a>二叉查找树</h2><p>定义：每个结点最多有两个子树，左子树比父节点小，右子树比父节点大。</p><p>缺点：会出现极端情况导致整棵树只有左子树或只有右子树。</p><h2 id="4-2、红黑树"><a href="#4-2、红黑树" class="headerlink" title="4.2、红黑树"></a>4.2、红黑树</h2><p>定义：</p><p>性质1. 节点是红色或黑色。<br>性质2. 根节点是黑色。<br>性质3 每个红色节点的两个子节点都是黑色。(从每个叶子到根的所有路径上不能有两个连续的红色节点)<br>性质4. 从任一节点到其每个叶子的所有路径都包含相同数目的黑色节点。</p><p>缺点：数据量大会导致树层数比较多，这样就会造成查找数据慢。<br><img src="/img/tree/red-black.png"></p><h2 id="4-3、hash数据结构"><a href="#4-3、hash数据结构" class="headerlink" title="4.3、hash数据结构"></a>4.3、hash数据结构</h2><p>定义：散列表（Hash table，也叫哈希表），是根据关键码值(Key value)而直接进行访问的数据结构。也就是说，它通过把关键码值映射到表中一个位置来访问记录，以加快查找的速度。这个映射函数叫做散列函数，存放记录的数组叫做散列表。 对目标值进行hash运算得到hash值和数据磁盘指针地址保存到hash表，这样就达到快速定位数据位置。</p><p>缺点：精确查找十分快速，但范围查找就碰壁了。</p><h2 id="4-4、BTree"><a href="#4-4、BTree" class="headerlink" title="4.4、BTree"></a>4.4、BTree</h2><p><img src="/img/tree/b.png"></p><p>定义：一个节点可以存储多个数据，这样可以避免黑红树的缺点，树的层数很变小。  </p><p>缺点：  节点里面数组数据：每个数据的结构=索引数据+数据记录（即叶子节点存储键值和数据记录）。</p><h2 id="4-5、B-Tree"><a href="#4-5、B-Tree" class="headerlink" title="4.5、B+Tree"></a>4.5、B+Tree</h2><p><img src="/img/tree/b+.png"></p><p>定义：B+Tree是在B-Tree基础上的一种优化。节点里面数组数据：每个数据只存储键信息，这样不存数据可以腾出空间放更多的键信息，让树层数越小。</p><p>非叶子节点只存储键信息。<br>所有叶子节点之间都有一个链指针。<br>数据记录都存放在叶子节点中。</p><h2 id="mysql采用B-Tree数据结构存储数据"><a href="#mysql采用B-Tree数据结构存储数据" class="headerlink" title="mysql采用B+Tree数据结构存储数据"></a>mysql采用B+Tree数据结构存储数据</h2><p><img src="/img/tree/b++.png"></p><p>5.1、B+TREE叶子节点指针作用：定位值比它大的叶子节点。</p><p>5.2、引申出为什么mysql “!=”或者“&lt;&gt;” 不走索引。从下图可以知道原因，因为B树的左节点是比右节点小，而且节点有指针很快能找到范围的数据，B树特性+指针的配合这样可以快速找到指定范围数据。</p><p>B+树索引相比 Hash 索引 在区间搜索有优势。相邻数据顺序存储，Hash 单个查询 O（1），B+数O(logN)。区间可以避免全表扫描</p><p>高度为 3 的 B+ 树就能够存储千万级别的数据，实践中 B+ 树的高度最多也就 4 或者 5，所以这并不是影响性能的根本问题</p><h2 id="六、mysql为什么用整型自增作为索引比较好。而UUID作为索引效率比较低？"><a href="#六、mysql为什么用整型自增作为索引比较好。而UUID作为索引效率比较低？" class="headerlink" title="六、mysql为什么用整型自增作为索引比较好。而UUID作为索引效率比较低？"></a>六、mysql为什么用整型自增作为索引比较好。而UUID作为索引效率比较低？</h2><p>索引存储在磁盘，而且树的每个节点分配的空间有大小。整型占空间比较小，这样可以存放多个键值。反之然后UUID占空间比较大。<br>整型比较方便，UUID比较需要先转成ASCII在进行比较</p>]]></content>
    
    
    <categories>
      
      <category>Database</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL index</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
